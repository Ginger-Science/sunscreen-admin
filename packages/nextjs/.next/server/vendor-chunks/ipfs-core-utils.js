"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/ipfs-core-utils";
exports.ids = ["vendor-chunks/ipfs-core-utils"];
exports.modules = {

/***/ "(rsc)/./node_modules/ipfs-core-utils/node_modules/@multiformats/multiaddr/dist/src/codec.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/node_modules/@multiformats/multiaddr/dist/src/codec.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ParseError: () => (/* binding */ ParseError),\n/* harmony export */   bytesToString: () => (/* binding */ bytesToString),\n/* harmony export */   bytesToTuples: () => (/* binding */ bytesToTuples),\n/* harmony export */   cleanPath: () => (/* binding */ cleanPath),\n/* harmony export */   fromBytes: () => (/* binding */ fromBytes),\n/* harmony export */   fromString: () => (/* binding */ fromString),\n/* harmony export */   isValidBytes: () => (/* binding */ isValidBytes),\n/* harmony export */   protoFromTuple: () => (/* binding */ protoFromTuple),\n/* harmony export */   sizeForAddr: () => (/* binding */ sizeForAddr),\n/* harmony export */   stringToBytes: () => (/* binding */ stringToBytes),\n/* harmony export */   stringToStringTuples: () => (/* binding */ stringToStringTuples),\n/* harmony export */   stringTuplesToString: () => (/* binding */ stringTuplesToString),\n/* harmony export */   stringTuplesToTuples: () => (/* binding */ stringTuplesToTuples),\n/* harmony export */   tuplesToBytes: () => (/* binding */ tuplesToBytes),\n/* harmony export */   tuplesToStringTuples: () => (/* binding */ tuplesToStringTuples),\n/* harmony export */   validateBytes: () => (/* binding */ validateBytes)\n/* harmony export */ });\n/* harmony import */ var _convert_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./convert.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/@multiformats/multiaddr/dist/src/convert.js\");\n/* harmony import */ var _protocols_table_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./protocols-table.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/@multiformats/multiaddr/dist/src/protocols-table.js\");\n/* harmony import */ var varint__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! varint */ \"(rsc)/./node_modules/varint/index.js\");\n/* harmony import */ var uint8arrays_concat__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uint8arrays/concat */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/dist/src/concat.js\");\n/* harmony import */ var uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uint8arrays/to-string */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/dist/src/to-string.js\");\n\n\n\n\n\n/**\n * string -> [[str name, str addr]... ]\n */\nfunction stringToStringTuples(str) {\n    const tuples = [];\n    const parts = str.split('/').slice(1); // skip first empty elem\n    if (parts.length === 1 && parts[0] === '') {\n        return [];\n    }\n    for (let p = 0; p < parts.length; p++) {\n        const part = parts[p];\n        const proto = (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_1__.getProtocol)(part);\n        if (proto.size === 0) {\n            tuples.push([part]);\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n        p++; // advance addr part\n        if (p >= parts.length) {\n            throw ParseError('invalid address: ' + str);\n        }\n        // if it's a path proto, take the rest\n        if (proto.path === true) {\n            tuples.push([\n                part,\n                // should we need to check each path part to see if it's a proto?\n                // This would allow for other protocols to be added after a unix path,\n                // however it would have issues if the path had a protocol name in the path\n                cleanPath(parts.slice(p).join('/'))\n            ]);\n            break;\n        }\n        tuples.push([part, parts[p]]);\n    }\n    return tuples;\n}\n/**\n * [[str name, str addr]... ] -> string\n */\nfunction stringTuplesToString(tuples) {\n    const parts = [];\n    tuples.map((tup) => {\n        const proto = protoFromTuple(tup);\n        parts.push(proto.name);\n        if (tup.length > 1 && tup[1] != null) {\n            parts.push(tup[1]);\n        }\n        return null;\n    });\n    return cleanPath(parts.join('/'));\n}\n/**\n * [[str name, str addr]... ] -> [[int code, Uint8Array]... ]\n */\nfunction stringTuplesToTuples(tuples) {\n    return tuples.map((tup) => {\n        if (!Array.isArray(tup)) {\n            tup = [tup];\n        }\n        const proto = protoFromTuple(tup);\n        if (tup.length > 1) {\n            return [proto.code, (0,_convert_js__WEBPACK_IMPORTED_MODULE_0__.convertToBytes)(proto.code, tup[1])];\n        }\n        return [proto.code];\n    });\n}\n/**\n * Convert tuples to string tuples\n *\n * [[int code, Uint8Array]... ] -> [[int code, str addr]... ]\n */\nfunction tuplesToStringTuples(tuples) {\n    return tuples.map(tup => {\n        const proto = protoFromTuple(tup);\n        if (tup[1] != null) {\n            return [proto.code, (0,_convert_js__WEBPACK_IMPORTED_MODULE_0__.convertToString)(proto.code, tup[1])];\n        }\n        return [proto.code];\n    });\n}\n/**\n * [[int code, Uint8Array ]... ] -> Uint8Array\n */\nfunction tuplesToBytes(tuples) {\n    return fromBytes((0,uint8arrays_concat__WEBPACK_IMPORTED_MODULE_3__.concat)(tuples.map((tup) => {\n        const proto = protoFromTuple(tup);\n        let buf = Uint8Array.from(varint__WEBPACK_IMPORTED_MODULE_2__.encode(proto.code));\n        if (tup.length > 1 && tup[1] != null) {\n            buf = (0,uint8arrays_concat__WEBPACK_IMPORTED_MODULE_3__.concat)([buf, tup[1]]); // add address buffer\n        }\n        return buf;\n    })));\n}\n/**\n * For the passed address, return the serialized size\n */\nfunction sizeForAddr(p, addr) {\n    if (p.size > 0) {\n        return p.size / 8;\n    }\n    else if (p.size === 0) {\n        return 0;\n    }\n    else {\n        const size = varint__WEBPACK_IMPORTED_MODULE_2__.decode(addr);\n        return size + (varint__WEBPACK_IMPORTED_MODULE_2__.decode.bytes ?? 0);\n    }\n}\nfunction bytesToTuples(buf) {\n    const tuples = [];\n    let i = 0;\n    while (i < buf.length) {\n        const code = varint__WEBPACK_IMPORTED_MODULE_2__.decode(buf, i);\n        const n = varint__WEBPACK_IMPORTED_MODULE_2__.decode.bytes ?? 0;\n        const p = (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_1__.getProtocol)(code);\n        const size = sizeForAddr(p, buf.slice(i + n));\n        if (size === 0) {\n            tuples.push([code]);\n            i += n;\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n        const addr = buf.slice(i + n, i + n + size);\n        i += (size + n);\n        if (i > buf.length) { // did not end _exactly_ at buffer.length\n            throw ParseError('Invalid address Uint8Array: ' + (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_4__.toString)(buf, 'base16'));\n        }\n        // ok, tuple seems good.\n        tuples.push([code, addr]);\n    }\n    return tuples;\n}\n/**\n * Uint8Array -> String\n */\nfunction bytesToString(buf) {\n    const a = bytesToTuples(buf);\n    const b = tuplesToStringTuples(a);\n    return stringTuplesToString(b);\n}\n/**\n * String -> Uint8Array\n */\nfunction stringToBytes(str) {\n    str = cleanPath(str);\n    const a = stringToStringTuples(str);\n    const b = stringTuplesToTuples(a);\n    return tuplesToBytes(b);\n}\n/**\n * String -> Uint8Array\n */\nfunction fromString(str) {\n    return stringToBytes(str);\n}\n/**\n * Uint8Array -> Uint8Array\n */\nfunction fromBytes(buf) {\n    const err = validateBytes(buf);\n    if (err != null) {\n        throw err;\n    }\n    return Uint8Array.from(buf); // copy\n}\nfunction validateBytes(buf) {\n    try {\n        bytesToTuples(buf); // try to parse. will throw if breaks\n    }\n    catch (err) {\n        return err;\n    }\n}\nfunction isValidBytes(buf) {\n    return validateBytes(buf) === undefined;\n}\nfunction cleanPath(str) {\n    return '/' + str.trim().split('/').filter((a) => a).join('/');\n}\nfunction ParseError(str) {\n    return new Error('Error parsing address: ' + str);\n}\nfunction protoFromTuple(tup) {\n    const proto = (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_1__.getProtocol)(tup[0]);\n    return proto;\n}\n//# sourceMappingURL=codec.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/node_modules/@multiformats/multiaddr/dist/src/codec.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/node_modules/@multiformats/multiaddr/dist/src/convert.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/node_modules/@multiformats/multiaddr/dist/src/convert.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convert: () => (/* binding */ convert),\n/* harmony export */   convertToBytes: () => (/* binding */ convertToBytes),\n/* harmony export */   convertToString: () => (/* binding */ convertToString)\n/* harmony export */ });\n/* harmony import */ var _ip_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ip.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/@multiformats/multiaddr/dist/src/ip.js\");\n/* harmony import */ var _protocols_table_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./protocols-table.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/@multiformats/multiaddr/dist/src/protocols-table.js\");\n/* harmony import */ var multiformats_cid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! multiformats/cid */ \"(rsc)/./node_modules/multiformats/src/cid.js\");\n/* harmony import */ var multiformats_bases_base32__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! multiformats/bases/base32 */ \"(rsc)/./node_modules/multiformats/src/bases/base32.js\");\n/* harmony import */ var multiformats_bases_base58__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! multiformats/bases/base58 */ \"(rsc)/./node_modules/multiformats/src/bases/base58.js\");\n/* harmony import */ var multiformats_basics__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! multiformats/basics */ \"(rsc)/./node_modules/multiformats/src/basics.js\");\n/* harmony import */ var multiformats_hashes_digest__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! multiformats/hashes/digest */ \"(rsc)/./node_modules/multiformats/src/hashes/digest.js\");\n/* harmony import */ var varint__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! varint */ \"(rsc)/./node_modules/varint/index.js\");\n/* harmony import */ var uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! uint8arrays/to-string */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/dist/src/to-string.js\");\n/* harmony import */ var uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! uint8arrays/from-string */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/dist/src/from-string.js\");\n/* harmony import */ var uint8arrays_concat__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! uint8arrays/concat */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/dist/src/concat.js\");\n/**\n * @packageDocumentation\n *\n * Provides methods for converting\n */\n\n\n\n\n\n\n\n\n\n\n\nfunction convert(proto, a) {\n    if (a instanceof Uint8Array) {\n        return convertToString(proto, a);\n    }\n    else {\n        return convertToBytes(proto, a);\n    }\n}\n/**\n * Convert [code,Uint8Array] to string\n */\nfunction convertToString(proto, buf) {\n    const protocol = (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_1__.getProtocol)(proto);\n    switch (protocol.code) {\n        case 4: // ipv4\n        case 41: // ipv6\n            return bytes2ip(buf);\n        case 42: // ipv6zone\n            return bytes2str(buf);\n        case 6: // tcp\n        case 273: // udp\n        case 33: // dccp\n        case 132: // sctp\n            return bytes2port(buf).toString();\n        case 53: // dns\n        case 54: // dns4\n        case 55: // dns6\n        case 56: // dnsaddr\n        case 400: // unix\n        case 449: // sni\n        case 777: // memory\n            return bytes2str(buf);\n        case 421: // ipfs\n            return bytes2mh(buf);\n        case 444: // onion\n            return bytes2onion(buf);\n        case 445: // onion3\n            return bytes2onion(buf);\n        case 466: // certhash\n            return bytes2mb(buf);\n        default:\n            return (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_8__.toString)(buf, 'base16'); // no clue. convert to hex\n    }\n}\nfunction convertToBytes(proto, str) {\n    const protocol = (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_1__.getProtocol)(proto);\n    switch (protocol.code) {\n        case 4: // ipv4\n            return ip2bytes(str);\n        case 41: // ipv6\n            return ip2bytes(str);\n        case 42: // ipv6zone\n            return str2bytes(str);\n        case 6: // tcp\n        case 273: // udp\n        case 33: // dccp\n        case 132: // sctp\n            return port2bytes(parseInt(str, 10));\n        case 53: // dns\n        case 54: // dns4\n        case 55: // dns6\n        case 56: // dnsaddr\n        case 400: // unix\n        case 449: // sni\n        case 777: // memory\n            return str2bytes(str);\n        case 421: // ipfs\n            return mh2bytes(str);\n        case 444: // onion\n            return onion2bytes(str);\n        case 445: // onion3\n            return onion32bytes(str);\n        case 466: // certhash\n            return mb2bytes(str);\n        default:\n            return (0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_9__.fromString)(str, 'base16'); // no clue. convert from hex\n    }\n}\nconst decoders = Object.values(multiformats_basics__WEBPACK_IMPORTED_MODULE_5__.bases).map((c) => c.decoder);\nconst anybaseDecoder = (function () {\n    let acc = decoders[0].or(decoders[1]);\n    decoders.slice(2).forEach((d) => (acc = acc.or(d)));\n    return acc;\n})();\nfunction ip2bytes(ipString) {\n    if (!_ip_js__WEBPACK_IMPORTED_MODULE_0__.isIP(ipString)) {\n        throw new Error('invalid ip address');\n    }\n    return _ip_js__WEBPACK_IMPORTED_MODULE_0__.toBytes(ipString);\n}\nfunction bytes2ip(ipBuff) {\n    const ipString = _ip_js__WEBPACK_IMPORTED_MODULE_0__.toString(ipBuff, 0, ipBuff.length);\n    if (ipString == null) {\n        throw new Error('ipBuff is required');\n    }\n    if (!_ip_js__WEBPACK_IMPORTED_MODULE_0__.isIP(ipString)) {\n        throw new Error('invalid ip address');\n    }\n    return ipString;\n}\nfunction port2bytes(port) {\n    const buf = new ArrayBuffer(2);\n    const view = new DataView(buf);\n    view.setUint16(0, port);\n    return new Uint8Array(buf);\n}\nfunction bytes2port(buf) {\n    const view = new DataView(buf.buffer);\n    return view.getUint16(buf.byteOffset);\n}\nfunction str2bytes(str) {\n    const buf = (0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_9__.fromString)(str);\n    const size = Uint8Array.from(varint__WEBPACK_IMPORTED_MODULE_7__.encode(buf.length));\n    return (0,uint8arrays_concat__WEBPACK_IMPORTED_MODULE_10__.concat)([size, buf], size.length + buf.length);\n}\nfunction bytes2str(buf) {\n    const size = varint__WEBPACK_IMPORTED_MODULE_7__.decode(buf);\n    buf = buf.slice(varint__WEBPACK_IMPORTED_MODULE_7__.decode.bytes);\n    if (buf.length !== size) {\n        throw new Error('inconsistent lengths');\n    }\n    return (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_8__.toString)(buf);\n}\nfunction mh2bytes(hash) {\n    let mh;\n    if (hash[0] === 'Q' || hash[0] === '1') {\n        mh = multiformats_hashes_digest__WEBPACK_IMPORTED_MODULE_6__.decode(multiformats_bases_base58__WEBPACK_IMPORTED_MODULE_4__.base58btc.decode(`z${hash}`)).bytes;\n    }\n    else {\n        mh = multiformats_cid__WEBPACK_IMPORTED_MODULE_2__.CID.parse(hash).multihash.bytes;\n    }\n    // the address is a varint prefixed multihash string representation\n    const size = Uint8Array.from(varint__WEBPACK_IMPORTED_MODULE_7__.encode(mh.length));\n    return (0,uint8arrays_concat__WEBPACK_IMPORTED_MODULE_10__.concat)([size, mh], size.length + mh.length);\n}\nfunction mb2bytes(mbstr) {\n    const mb = anybaseDecoder.decode(mbstr);\n    const size = Uint8Array.from(varint__WEBPACK_IMPORTED_MODULE_7__.encode(mb.length));\n    return (0,uint8arrays_concat__WEBPACK_IMPORTED_MODULE_10__.concat)([size, mb], size.length + mb.length);\n}\nfunction bytes2mb(buf) {\n    const size = varint__WEBPACK_IMPORTED_MODULE_7__.decode(buf);\n    const hash = buf.slice(varint__WEBPACK_IMPORTED_MODULE_7__.decode.bytes);\n    if (hash.length !== size) {\n        throw new Error('inconsistent lengths');\n    }\n    return 'u' + (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_8__.toString)(hash, 'base64url');\n}\n/**\n * Converts bytes to bas58btc string\n */\nfunction bytes2mh(buf) {\n    const size = varint__WEBPACK_IMPORTED_MODULE_7__.decode(buf);\n    const address = buf.slice(varint__WEBPACK_IMPORTED_MODULE_7__.decode.bytes);\n    if (address.length !== size) {\n        throw new Error('inconsistent lengths');\n    }\n    return (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_8__.toString)(address, 'base58btc');\n}\nfunction onion2bytes(str) {\n    const addr = str.split(':');\n    if (addr.length !== 2) {\n        throw new Error(`failed to parse onion addr: [\"'${addr.join('\", \"')}'\"]' does not contain a port number`);\n    }\n    if (addr[0].length !== 16) {\n        throw new Error(`failed to parse onion addr: ${addr[0]} not a Tor onion address.`);\n    }\n    // onion addresses do not include the multibase prefix, add it before decoding\n    const buf = multiformats_bases_base32__WEBPACK_IMPORTED_MODULE_3__.base32.decode('b' + addr[0]);\n    // onion port number\n    const port = parseInt(addr[1], 10);\n    if (port < 1 || port > 65536) {\n        throw new Error('Port number is not in range(1, 65536)');\n    }\n    const portBuf = port2bytes(port);\n    return (0,uint8arrays_concat__WEBPACK_IMPORTED_MODULE_10__.concat)([buf, portBuf], buf.length + portBuf.length);\n}\nfunction onion32bytes(str) {\n    const addr = str.split(':');\n    if (addr.length !== 2) {\n        throw new Error(`failed to parse onion addr: [\"'${addr.join('\", \"')}'\"]' does not contain a port number`);\n    }\n    if (addr[0].length !== 56) {\n        throw new Error(`failed to parse onion addr: ${addr[0]} not a Tor onion3 address.`);\n    }\n    // onion addresses do not include the multibase prefix, add it before decoding\n    const buf = multiformats_bases_base32__WEBPACK_IMPORTED_MODULE_3__.base32.decode(`b${addr[0]}`);\n    // onion port number\n    const port = parseInt(addr[1], 10);\n    if (port < 1 || port > 65536) {\n        throw new Error('Port number is not in range(1, 65536)');\n    }\n    const portBuf = port2bytes(port);\n    return (0,uint8arrays_concat__WEBPACK_IMPORTED_MODULE_10__.concat)([buf, portBuf], buf.length + portBuf.length);\n}\nfunction bytes2onion(buf) {\n    const addrBytes = buf.slice(0, buf.length - 2);\n    const portBytes = buf.slice(buf.length - 2);\n    const addr = (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_8__.toString)(addrBytes, 'base32');\n    const port = bytes2port(portBytes);\n    return `${addr}:${port}`;\n}\n//# sourceMappingURL=convert.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/node_modules/@multiformats/multiaddr/dist/src/convert.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/node_modules/@multiformats/multiaddr/dist/src/index.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/node_modules/@multiformats/multiaddr/dist/src/index.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromNodeAddress: () => (/* binding */ fromNodeAddress),\n/* harmony export */   isMultiaddr: () => (/* binding */ isMultiaddr),\n/* harmony export */   isName: () => (/* binding */ isName),\n/* harmony export */   multiaddr: () => (/* binding */ multiaddr),\n/* harmony export */   protocols: () => (/* reexport safe */ _protocols_table_js__WEBPACK_IMPORTED_MODULE_1__.getProtocol),\n/* harmony export */   resolvers: () => (/* binding */ resolvers)\n/* harmony export */ });\n/* harmony import */ var _codec_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./codec.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/@multiformats/multiaddr/dist/src/codec.js\");\n/* harmony import */ var _protocols_table_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./protocols-table.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/@multiformats/multiaddr/dist/src/protocols-table.js\");\n/* harmony import */ var varint__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! varint */ \"(rsc)/./node_modules/varint/index.js\");\n/* harmony import */ var multiformats_cid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! multiformats/cid */ \"(rsc)/./node_modules/multiformats/src/cid.js\");\n/* harmony import */ var multiformats_bases_base58__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! multiformats/bases/base58 */ \"(rsc)/./node_modules/multiformats/src/bases/base58.js\");\n/* harmony import */ var err_code__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! err-code */ \"(rsc)/./node_modules/err-code/index.js\");\n/* harmony import */ var uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uint8arrays/to-string */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/dist/src/to-string.js\");\n/* harmony import */ var uint8arrays_equals__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! uint8arrays/equals */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/dist/src/equals.js\");\n/**\n * @packageDocumentation\n *\n * An implementation of a Multiaddr in JavaScript\n *\n * @example\n *\n * ```js\n * import { multiaddr } from '@multiformats/multiaddr'\n *\n * const ma = multiaddr('/ip4/127.0.0.1/tcp/1234')\n * ```\n */\nvar __classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _DefaultMultiaddr_string, _DefaultMultiaddr_tuples, _DefaultMultiaddr_stringTuples, _a;\n\n\n\n\n\n\n\n\nconst inspect = Symbol.for('nodejs.util.inspect.custom');\nconst DNS_CODES = [\n    (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_1__.getProtocol)('dns').code,\n    (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_1__.getProtocol)('dns4').code,\n    (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_1__.getProtocol)('dns6').code,\n    (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_1__.getProtocol)('dnsaddr').code\n];\n/**\n * All configured {@link Resolver}s\n */\nconst resolvers = new Map();\nconst symbol = Symbol.for('@multiformats/js-multiaddr/multiaddr');\n/**\n * Creates a Multiaddr from a node-friendly address object\n *\n * @example\n * ```js\n * import { fromNodeAddress } from '@multiformats/multiaddr'\n *\n * fromNodeAddress({address: '127.0.0.1', port: '4001'}, 'tcp')\n * // Multiaddr(/ip4/127.0.0.1/tcp/4001)\n * ```\n */\nfunction fromNodeAddress(addr, transport) {\n    if (addr == null) {\n        throw new Error('requires node address object');\n    }\n    if (transport == null) {\n        throw new Error('requires transport protocol');\n    }\n    let ip;\n    let host = addr.address;\n    switch (addr.family) {\n        case 4:\n            ip = 'ip4';\n            break;\n        case 6:\n            ip = 'ip6';\n            if (host.includes('%')) {\n                const parts = host.split('%');\n                if (parts.length !== 2) {\n                    throw Error('Multiple ip6 zones in multiaddr');\n                }\n                host = parts[0];\n                const zone = parts[1];\n                ip = `/ip6zone/${zone}/ip6`;\n            }\n            break;\n        default:\n            throw Error('Invalid addr family, should be 4 or 6.');\n    }\n    return new DefaultMultiaddr('/' + [ip, host, transport, addr.port].join('/'));\n}\n/**\n * Returns if something is a {@link Multiaddr} that is a resolvable name\n *\n * @example\n *\n * ```js\n * import { isName, multiaddr } from '@multiformats/multiaddr'\n *\n * isName(multiaddr('/ip4/127.0.0.1'))\n * // false\n * isName(multiaddr('/dns/ipfs.io'))\n * // true\n * ```\n */\nfunction isName(addr) {\n    if (!isMultiaddr(addr)) {\n        return false;\n    }\n    // if a part of the multiaddr is resolvable, then return true\n    return addr.protos().some((proto) => proto.resolvable);\n}\n/**\n * Check if object is a {@link Multiaddr} instance\n *\n * @example\n *\n * ```js\n * import { isMultiaddr, multiaddr } from '@multiformats/multiaddr'\n *\n * isMultiaddr(5)\n * // false\n * isMultiaddr(multiaddr('/ip4/127.0.0.1'))\n * // true\n * ```\n */\nfunction isMultiaddr(value) {\n    return Boolean(value?.[symbol]);\n}\n/**\n * Creates a {@link Multiaddr} from a {@link MultiaddrInput}\n */\nclass DefaultMultiaddr {\n    constructor(addr) {\n        _DefaultMultiaddr_string.set(this, void 0);\n        _DefaultMultiaddr_tuples.set(this, void 0);\n        _DefaultMultiaddr_stringTuples.set(this, void 0);\n        this[_a] = true;\n        // default\n        if (addr == null) {\n            addr = '';\n        }\n        if (addr instanceof Uint8Array) {\n            this.bytes = _codec_js__WEBPACK_IMPORTED_MODULE_0__.fromBytes(addr);\n        }\n        else if (typeof addr === 'string') {\n            if (addr.length > 0 && addr.charAt(0) !== '/') {\n                throw new Error(`multiaddr \"${addr}\" must start with a \"/\"`);\n            }\n            this.bytes = _codec_js__WEBPACK_IMPORTED_MODULE_0__.fromString(addr);\n        }\n        else if (isMultiaddr(addr)) { // Multiaddr\n            this.bytes = _codec_js__WEBPACK_IMPORTED_MODULE_0__.fromBytes(addr.bytes); // validate + copy buffer\n        }\n        else {\n            throw new Error('addr must be a string, Buffer, or another Multiaddr');\n        }\n    }\n    toString() {\n        if (__classPrivateFieldGet(this, _DefaultMultiaddr_string, \"f\") == null) {\n            __classPrivateFieldSet(this, _DefaultMultiaddr_string, _codec_js__WEBPACK_IMPORTED_MODULE_0__.bytesToString(this.bytes), \"f\");\n        }\n        return __classPrivateFieldGet(this, _DefaultMultiaddr_string, \"f\");\n    }\n    toJSON() {\n        return this.toString();\n    }\n    toOptions() {\n        let family;\n        let transport;\n        let host;\n        let port;\n        let zone = '';\n        const tcp = (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_1__.getProtocol)('tcp');\n        const udp = (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_1__.getProtocol)('udp');\n        const ip4 = (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_1__.getProtocol)('ip4');\n        const ip6 = (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_1__.getProtocol)('ip6');\n        const dns6 = (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_1__.getProtocol)('dns6');\n        const ip6zone = (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_1__.getProtocol)('ip6zone');\n        for (const [code, value] of this.stringTuples()) {\n            if (code === ip6zone.code) {\n                zone = `%${value ?? ''}`;\n            }\n            // default to https when protocol & port are omitted from DNS addrs\n            if (DNS_CODES.includes(code)) {\n                transport = tcp.name;\n                port = 443;\n                host = `${value ?? ''}${zone}`;\n                family = code === dns6.code ? 6 : 4;\n            }\n            if (code === tcp.code || code === udp.code) {\n                transport = (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_1__.getProtocol)(code).name;\n                port = parseInt(value ?? '');\n            }\n            if (code === ip4.code || code === ip6.code) {\n                transport = (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_1__.getProtocol)(code).name;\n                host = `${value ?? ''}${zone}`;\n                family = code === ip6.code ? 6 : 4;\n            }\n        }\n        if (family == null || transport == null || host == null || port == null) {\n            throw new Error('multiaddr must have a valid format: \"/{ip4, ip6, dns4, dns6, dnsaddr}/{address}/{tcp, udp}/{port}\".');\n        }\n        const opts = {\n            family,\n            host,\n            transport,\n            port\n        };\n        return opts;\n    }\n    protos() {\n        return this.protoCodes().map(code => Object.assign({}, (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_1__.getProtocol)(code)));\n    }\n    protoCodes() {\n        const codes = [];\n        const buf = this.bytes;\n        let i = 0;\n        while (i < buf.length) {\n            const code = varint__WEBPACK_IMPORTED_MODULE_2__.decode(buf, i);\n            const n = varint__WEBPACK_IMPORTED_MODULE_2__.decode.bytes ?? 0;\n            const p = (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_1__.getProtocol)(code);\n            const size = _codec_js__WEBPACK_IMPORTED_MODULE_0__.sizeForAddr(p, buf.slice(i + n));\n            i += (size + n);\n            codes.push(code);\n        }\n        return codes;\n    }\n    protoNames() {\n        return this.protos().map(proto => proto.name);\n    }\n    tuples() {\n        if (__classPrivateFieldGet(this, _DefaultMultiaddr_tuples, \"f\") == null) {\n            __classPrivateFieldSet(this, _DefaultMultiaddr_tuples, _codec_js__WEBPACK_IMPORTED_MODULE_0__.bytesToTuples(this.bytes), \"f\");\n        }\n        return __classPrivateFieldGet(this, _DefaultMultiaddr_tuples, \"f\");\n    }\n    stringTuples() {\n        if (__classPrivateFieldGet(this, _DefaultMultiaddr_stringTuples, \"f\") == null) {\n            __classPrivateFieldSet(this, _DefaultMultiaddr_stringTuples, _codec_js__WEBPACK_IMPORTED_MODULE_0__.tuplesToStringTuples(this.tuples()), \"f\");\n        }\n        return __classPrivateFieldGet(this, _DefaultMultiaddr_stringTuples, \"f\");\n    }\n    encapsulate(addr) {\n        addr = new DefaultMultiaddr(addr);\n        return new DefaultMultiaddr(this.toString() + addr.toString());\n    }\n    decapsulate(addr) {\n        const addrString = addr.toString();\n        const s = this.toString();\n        const i = s.lastIndexOf(addrString);\n        if (i < 0) {\n            throw new Error(`Address ${this.toString()} does not contain subaddress: ${addr.toString()}`);\n        }\n        return new DefaultMultiaddr(s.slice(0, i));\n    }\n    decapsulateCode(code) {\n        const tuples = this.tuples();\n        for (let i = tuples.length - 1; i >= 0; i--) {\n            if (tuples[i][0] === code) {\n                return new DefaultMultiaddr(_codec_js__WEBPACK_IMPORTED_MODULE_0__.tuplesToBytes(tuples.slice(0, i)));\n            }\n        }\n        return this;\n    }\n    getPeerId() {\n        try {\n            const tuples = this.stringTuples().filter((tuple) => {\n                if (tuple[0] === _protocols_table_js__WEBPACK_IMPORTED_MODULE_1__.names.ipfs.code) {\n                    return true;\n                }\n                return false;\n            });\n            // Get the last ipfs tuple ['ipfs', 'peerid string']\n            const tuple = tuples.pop();\n            if (tuple?.[1] != null) {\n                const peerIdStr = tuple[1];\n                // peer id is base58btc encoded string but not multibase encoded so add the `z`\n                // prefix so we can validate that it is correctly encoded\n                if (peerIdStr[0] === 'Q' || peerIdStr[0] === '1') {\n                    return (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_6__.toString)(multiformats_bases_base58__WEBPACK_IMPORTED_MODULE_4__.base58btc.decode(`z${peerIdStr}`), 'base58btc');\n                }\n                // try to parse peer id as CID\n                return (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_6__.toString)(multiformats_cid__WEBPACK_IMPORTED_MODULE_3__.CID.parse(peerIdStr).multihash.bytes, 'base58btc');\n            }\n            return null;\n        }\n        catch (e) {\n            return null;\n        }\n    }\n    getPath() {\n        let path = null;\n        try {\n            path = this.stringTuples().filter((tuple) => {\n                const proto = (0,_protocols_table_js__WEBPACK_IMPORTED_MODULE_1__.getProtocol)(tuple[0]);\n                if (proto.path === true) {\n                    return true;\n                }\n                return false;\n            })[0][1];\n            if (path == null) {\n                path = null;\n            }\n        }\n        catch {\n            path = null;\n        }\n        return path;\n    }\n    equals(addr) {\n        return (0,uint8arrays_equals__WEBPACK_IMPORTED_MODULE_7__.equals)(this.bytes, addr.bytes);\n    }\n    async resolve(options) {\n        const resolvableProto = this.protos().find((p) => p.resolvable);\n        // Multiaddr is not resolvable?\n        if (resolvableProto == null) {\n            return [this];\n        }\n        const resolver = resolvers.get(resolvableProto.name);\n        if (resolver == null) {\n            throw err_code__WEBPACK_IMPORTED_MODULE_5__(new Error(`no available resolver for ${resolvableProto.name}`), 'ERR_NO_AVAILABLE_RESOLVER');\n        }\n        const addresses = await resolver(this, options);\n        return addresses.map((a) => new DefaultMultiaddr(a));\n    }\n    nodeAddress() {\n        const options = this.toOptions();\n        if (options.transport !== 'tcp' && options.transport !== 'udp') {\n            throw new Error(`multiaddr must have a valid format - no protocol with name: \"${options.transport}\". Must have a valid transport protocol: \"{tcp, udp}\"`);\n        }\n        return {\n            family: options.family,\n            address: options.host,\n            port: options.port\n        };\n    }\n    isThinWaistAddress(addr) {\n        const protos = (addr ?? this).protos();\n        if (protos.length !== 2) {\n            return false;\n        }\n        if (protos[0].code !== 4 && protos[0].code !== 41) {\n            return false;\n        }\n        if (protos[1].code !== 6 && protos[1].code !== 273) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Returns Multiaddr as a human-readable string\n     * https://nodejs.org/api/util.html#utilinspectcustom\n     *\n     * @example\n     * ```js\n     * import { multiaddr } from '@multiformats/multiaddr'\n     *\n     * console.info(multiaddr('/ip4/127.0.0.1/tcp/4001'))\n     * // 'Multiaddr(/ip4/127.0.0.1/tcp/4001)'\n     * ```\n     */\n    [(_DefaultMultiaddr_string = new WeakMap(), _DefaultMultiaddr_tuples = new WeakMap(), _DefaultMultiaddr_stringTuples = new WeakMap(), _a = symbol, inspect)]() {\n        return `Multiaddr(${_codec_js__WEBPACK_IMPORTED_MODULE_0__.bytesToString(this.bytes)})`;\n    }\n}\n/**\n * A function that takes a {@link MultiaddrInput} and returns a {@link Multiaddr}\n *\n * @example\n * ```js\n * import { multiaddr } from '@libp2p/multiaddr'\n *\n * multiaddr('/ip4/127.0.0.1/tcp/4001')\n * // Multiaddr(/ip4/127.0.0.1/tcp/4001)\n * ```\n *\n * @param {MultiaddrInput} [addr] - If String or Uint8Array, needs to adhere to the address format of a [multiaddr](https://github.com/multiformats/multiaddr#string-format)\n */\nfunction multiaddr(addr) {\n    return new DefaultMultiaddr(addr);\n}\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/node_modules/@multiformats/multiaddr/dist/src/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/node_modules/@multiformats/multiaddr/dist/src/ip.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/node_modules/@multiformats/multiaddr/dist/src/ip.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isIP: () => (/* reexport safe */ _chainsafe_is_ip__WEBPACK_IMPORTED_MODULE_0__.isIP),\n/* harmony export */   isV4: () => (/* binding */ isV4),\n/* harmony export */   isV6: () => (/* binding */ isV6),\n/* harmony export */   toBytes: () => (/* binding */ toBytes),\n/* harmony export */   toString: () => (/* binding */ toString)\n/* harmony export */ });\n/* harmony import */ var _chainsafe_is_ip__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @chainsafe/is-ip */ \"(rsc)/./node_modules/@chainsafe/is-ip/lib/is-ip.node.js\");\n/* harmony import */ var uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uint8arrays/to-string */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/dist/src/to-string.js\");\n\n\n\nconst isV4 = _chainsafe_is_ip__WEBPACK_IMPORTED_MODULE_0__.isIPv4;\nconst isV6 = _chainsafe_is_ip__WEBPACK_IMPORTED_MODULE_0__.isIPv6;\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L7\n// but with buf/offset args removed because we don't use them\nconst toBytes = function (ip) {\n    let offset = 0;\n    ip = ip.toString().trim();\n    if (isV4(ip)) {\n        const bytes = new Uint8Array(offset + 4);\n        ip.split(/\\./g).forEach((byte) => {\n            bytes[offset++] = parseInt(byte, 10) & 0xff;\n        });\n        return bytes;\n    }\n    if (isV6(ip)) {\n        const sections = ip.split(':', 8);\n        let i;\n        for (i = 0; i < sections.length; i++) {\n            const isv4 = isV4(sections[i]);\n            let v4Buffer;\n            if (isv4) {\n                v4Buffer = toBytes(sections[i]);\n                sections[i] = (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__.toString)(v4Buffer.slice(0, 2), 'base16');\n            }\n            if (v4Buffer != null && ++i < 8) {\n                sections.splice(i, 0, (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__.toString)(v4Buffer.slice(2, 4), 'base16'));\n            }\n        }\n        if (sections[0] === '') {\n            while (sections.length < 8)\n                sections.unshift('0');\n        }\n        else if (sections[sections.length - 1] === '') {\n            while (sections.length < 8)\n                sections.push('0');\n        }\n        else if (sections.length < 8) {\n            for (i = 0; i < sections.length && sections[i] !== ''; i++)\n                ;\n            const argv = [i, 1];\n            for (i = 9 - sections.length; i > 0; i--) {\n                argv.push('0');\n            }\n            sections.splice.apply(sections, argv);\n        }\n        const bytes = new Uint8Array(offset + 16);\n        for (i = 0; i < sections.length; i++) {\n            const word = parseInt(sections[i], 16);\n            bytes[offset++] = (word >> 8) & 0xff;\n            bytes[offset++] = word & 0xff;\n        }\n        return bytes;\n    }\n    throw new Error('invalid ip address');\n};\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L63\nconst toString = function (buf, offset = 0, length) {\n    offset = ~~offset;\n    length = length ?? (buf.length - offset);\n    const view = new DataView(buf.buffer);\n    if (length === 4) {\n        const result = [];\n        // IPv4\n        for (let i = 0; i < length; i++) {\n            result.push(buf[offset + i]);\n        }\n        return result.join('.');\n    }\n    if (length === 16) {\n        const result = [];\n        // IPv6\n        for (let i = 0; i < length; i += 2) {\n            result.push(view.getUint16(offset + i).toString(16));\n        }\n        return result.join(':')\n            .replace(/(^|:)0(:0)*:0(:|$)/, '$1::$3')\n            .replace(/:{3,4}/, '::');\n    }\n    return '';\n};\n//# sourceMappingURL=ip.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy9AbXVsdGlmb3JtYXRzL211bHRpYWRkci9kaXN0L3NyYy9pcC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQWtEO0FBQ3FCO0FBQy9CO0FBQ2pDLGFBQWEsb0RBQU07QUFDbkIsYUFBYSxvREFBTTtBQUMxQjtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixxQkFBcUI7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsK0RBQWtCO0FBQ2hEO0FBQ0E7QUFDQSxzQ0FBc0MsK0RBQWtCO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsMkNBQTJDO0FBQ25FO0FBQ0E7QUFDQSwwQ0FBMEMsT0FBTztBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHFCQUFxQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixZQUFZO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLFlBQVk7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsSUFBSTtBQUM1QjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BzZS0yL25leHRqcy8uL25vZGVfbW9kdWxlcy9pcGZzLWNvcmUtdXRpbHMvbm9kZV9tb2R1bGVzL0BtdWx0aWZvcm1hdHMvbXVsdGlhZGRyL2Rpc3Qvc3JjL2lwLmpzPzAyNDYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNJUHY0LCBpc0lQdjYgfSBmcm9tICdAY2hhaW5zYWZlL2lzLWlwJztcbmltcG9ydCB7IHRvU3RyaW5nIGFzIHVpbnQ4QXJyYXlUb1N0cmluZyB9IGZyb20gJ3VpbnQ4YXJyYXlzL3RvLXN0cmluZyc7XG5leHBvcnQgeyBpc0lQIH0gZnJvbSAnQGNoYWluc2FmZS9pcy1pcCc7XG5leHBvcnQgY29uc3QgaXNWNCA9IGlzSVB2NDtcbmV4cG9ydCBjb25zdCBpc1Y2ID0gaXNJUHY2O1xuLy8gQ29waWVkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL2luZHV0bnkvbm9kZS1pcC9ibG9iL21hc3Rlci9saWIvaXAuanMjTDdcbi8vIGJ1dCB3aXRoIGJ1Zi9vZmZzZXQgYXJncyByZW1vdmVkIGJlY2F1c2Ugd2UgZG9uJ3QgdXNlIHRoZW1cbmV4cG9ydCBjb25zdCB0b0J5dGVzID0gZnVuY3Rpb24gKGlwKSB7XG4gICAgbGV0IG9mZnNldCA9IDA7XG4gICAgaXAgPSBpcC50b1N0cmluZygpLnRyaW0oKTtcbiAgICBpZiAoaXNWNChpcCkpIHtcbiAgICAgICAgY29uc3QgYnl0ZXMgPSBuZXcgVWludDhBcnJheShvZmZzZXQgKyA0KTtcbiAgICAgICAgaXAuc3BsaXQoL1xcLi9nKS5mb3JFYWNoKChieXRlKSA9PiB7XG4gICAgICAgICAgICBieXRlc1tvZmZzZXQrK10gPSBwYXJzZUludChieXRlLCAxMCkgJiAweGZmO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIGJ5dGVzO1xuICAgIH1cbiAgICBpZiAoaXNWNihpcCkpIHtcbiAgICAgICAgY29uc3Qgc2VjdGlvbnMgPSBpcC5zcGxpdCgnOicsIDgpO1xuICAgICAgICBsZXQgaTtcbiAgICAgICAgZm9yIChpID0gMDsgaSA8IHNlY3Rpb25zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBjb25zdCBpc3Y0ID0gaXNWNChzZWN0aW9uc1tpXSk7XG4gICAgICAgICAgICBsZXQgdjRCdWZmZXI7XG4gICAgICAgICAgICBpZiAoaXN2NCkge1xuICAgICAgICAgICAgICAgIHY0QnVmZmVyID0gdG9CeXRlcyhzZWN0aW9uc1tpXSk7XG4gICAgICAgICAgICAgICAgc2VjdGlvbnNbaV0gPSB1aW50OEFycmF5VG9TdHJpbmcodjRCdWZmZXIuc2xpY2UoMCwgMiksICdiYXNlMTYnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh2NEJ1ZmZlciAhPSBudWxsICYmICsraSA8IDgpIHtcbiAgICAgICAgICAgICAgICBzZWN0aW9ucy5zcGxpY2UoaSwgMCwgdWludDhBcnJheVRvU3RyaW5nKHY0QnVmZmVyLnNsaWNlKDIsIDQpLCAnYmFzZTE2JykpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChzZWN0aW9uc1swXSA9PT0gJycpIHtcbiAgICAgICAgICAgIHdoaWxlIChzZWN0aW9ucy5sZW5ndGggPCA4KVxuICAgICAgICAgICAgICAgIHNlY3Rpb25zLnVuc2hpZnQoJzAnKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChzZWN0aW9uc1tzZWN0aW9ucy5sZW5ndGggLSAxXSA9PT0gJycpIHtcbiAgICAgICAgICAgIHdoaWxlIChzZWN0aW9ucy5sZW5ndGggPCA4KVxuICAgICAgICAgICAgICAgIHNlY3Rpb25zLnB1c2goJzAnKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChzZWN0aW9ucy5sZW5ndGggPCA4KSB7XG4gICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgc2VjdGlvbnMubGVuZ3RoICYmIHNlY3Rpb25zW2ldICE9PSAnJzsgaSsrKVxuICAgICAgICAgICAgICAgIDtcbiAgICAgICAgICAgIGNvbnN0IGFyZ3YgPSBbaSwgMV07XG4gICAgICAgICAgICBmb3IgKGkgPSA5IC0gc2VjdGlvbnMubGVuZ3RoOyBpID4gMDsgaS0tKSB7XG4gICAgICAgICAgICAgICAgYXJndi5wdXNoKCcwJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzZWN0aW9ucy5zcGxpY2UuYXBwbHkoc2VjdGlvbnMsIGFyZ3YpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGJ5dGVzID0gbmV3IFVpbnQ4QXJyYXkob2Zmc2V0ICsgMTYpO1xuICAgICAgICBmb3IgKGkgPSAwOyBpIDwgc2VjdGlvbnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGNvbnN0IHdvcmQgPSBwYXJzZUludChzZWN0aW9uc1tpXSwgMTYpO1xuICAgICAgICAgICAgYnl0ZXNbb2Zmc2V0KytdID0gKHdvcmQgPj4gOCkgJiAweGZmO1xuICAgICAgICAgICAgYnl0ZXNbb2Zmc2V0KytdID0gd29yZCAmIDB4ZmY7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGJ5dGVzO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFsaWQgaXAgYWRkcmVzcycpO1xufTtcbi8vIENvcGllZCBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9pbmR1dG55L25vZGUtaXAvYmxvYi9tYXN0ZXIvbGliL2lwLmpzI0w2M1xuZXhwb3J0IGNvbnN0IHRvU3RyaW5nID0gZnVuY3Rpb24gKGJ1Ziwgb2Zmc2V0ID0gMCwgbGVuZ3RoKSB7XG4gICAgb2Zmc2V0ID0gfn5vZmZzZXQ7XG4gICAgbGVuZ3RoID0gbGVuZ3RoID8/IChidWYubGVuZ3RoIC0gb2Zmc2V0KTtcbiAgICBjb25zdCB2aWV3ID0gbmV3IERhdGFWaWV3KGJ1Zi5idWZmZXIpO1xuICAgIGlmIChsZW5ndGggPT09IDQpIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gW107XG4gICAgICAgIC8vIElQdjRcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgcmVzdWx0LnB1c2goYnVmW29mZnNldCArIGldKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0LmpvaW4oJy4nKTtcbiAgICB9XG4gICAgaWYgKGxlbmd0aCA9PT0gMTYpIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gW107XG4gICAgICAgIC8vIElQdjZcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW5ndGg7IGkgKz0gMikge1xuICAgICAgICAgICAgcmVzdWx0LnB1c2godmlldy5nZXRVaW50MTYob2Zmc2V0ICsgaSkudG9TdHJpbmcoMTYpKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0LmpvaW4oJzonKVxuICAgICAgICAgICAgLnJlcGxhY2UoLyhefDopMCg6MCkqOjAoOnwkKS8sICckMTo6JDMnKVxuICAgICAgICAgICAgLnJlcGxhY2UoLzp7Myw0fS8sICc6OicpO1xuICAgIH1cbiAgICByZXR1cm4gJyc7XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aXAuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/node_modules/@multiformats/multiaddr/dist/src/ip.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/node_modules/@multiformats/multiaddr/dist/src/protocols-table.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/node_modules/@multiformats/multiaddr/dist/src/protocols-table.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   codes: () => (/* binding */ codes),\n/* harmony export */   createProtocol: () => (/* binding */ createProtocol),\n/* harmony export */   getProtocol: () => (/* binding */ getProtocol),\n/* harmony export */   names: () => (/* binding */ names),\n/* harmony export */   table: () => (/* binding */ table)\n/* harmony export */ });\nconst V = -1;\nconst names = {};\nconst codes = {};\nconst table = [\n    [4, 32, 'ip4'],\n    [6, 16, 'tcp'],\n    [33, 16, 'dccp'],\n    [41, 128, 'ip6'],\n    [42, V, 'ip6zone'],\n    [43, 8, 'ipcidr'],\n    [53, V, 'dns', true],\n    [54, V, 'dns4', true],\n    [55, V, 'dns6', true],\n    [56, V, 'dnsaddr', true],\n    [132, 16, 'sctp'],\n    [273, 16, 'udp'],\n    [275, 0, 'p2p-webrtc-star'],\n    [276, 0, 'p2p-webrtc-direct'],\n    [277, 0, 'p2p-stardust'],\n    [280, 0, 'webrtc'],\n    [281, 0, 'webrtc-w3c'],\n    [290, 0, 'p2p-circuit'],\n    [301, 0, 'udt'],\n    [302, 0, 'utp'],\n    [400, V, 'unix', false, true],\n    // `ipfs` is added before `p2p` for legacy support.\n    // All text representations will default to `p2p`, but `ipfs` will\n    // still be supported\n    [421, V, 'ipfs'],\n    // `p2p` is the preferred name for 421, and is now the default\n    [421, V, 'p2p'],\n    [443, 0, 'https'],\n    [444, 96, 'onion'],\n    [445, 296, 'onion3'],\n    [446, V, 'garlic64'],\n    [448, 0, 'tls'],\n    [449, V, 'sni'],\n    [460, 0, 'quic'],\n    [461, 0, 'quic-v1'],\n    [465, 0, 'webtransport'],\n    [466, V, 'certhash'],\n    [477, 0, 'ws'],\n    [478, 0, 'wss'],\n    [479, 0, 'p2p-websocket-star'],\n    [480, 0, 'http'],\n    [777, V, 'memory']\n];\n// populate tables\ntable.forEach(row => {\n    const proto = createProtocol(...row);\n    codes[proto.code] = proto;\n    names[proto.name] = proto;\n});\nfunction createProtocol(code, size, name, resolvable, path) {\n    return {\n        code,\n        size,\n        name,\n        resolvable: Boolean(resolvable),\n        path: Boolean(path)\n    };\n}\n/**\n * For the passed proto string or number, return a {@link Protocol}\n *\n * @example\n *\n * ```js\n * import { protocol } from '@multiformats/multiaddr'\n *\n * console.info(protocol(4))\n * // { code: 4, size: 32, name: 'ip4', resolvable: false, path: false }\n * ```\n */\nfunction getProtocol(proto) {\n    if (typeof proto === 'number') {\n        if (codes[proto] != null) {\n            return codes[proto];\n        }\n        throw new Error(`no protocol with code: ${proto}`);\n    }\n    else if (typeof proto === 'string') {\n        if (names[proto] != null) {\n            return names[proto];\n        }\n        throw new Error(`no protocol with name: ${proto}`);\n    }\n    throw new Error(`invalid protocol id type: ${typeof proto}`);\n}\n//# sourceMappingURL=protocols-table.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy9AbXVsdGlmb3JtYXRzL211bHRpYWRkci9kaXN0L3NyYy9wcm90b2NvbHMtdGFibGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNPO0FBQ0E7QUFDQTtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDTTtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRDtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksV0FBVztBQUN2QjtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0RBQWtELE1BQU07QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRCxNQUFNO0FBQ3hEO0FBQ0EsaURBQWlELGFBQWE7QUFDOUQ7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BzZS0yL25leHRqcy8uL25vZGVfbW9kdWxlcy9pcGZzLWNvcmUtdXRpbHMvbm9kZV9tb2R1bGVzL0BtdWx0aWZvcm1hdHMvbXVsdGlhZGRyL2Rpc3Qvc3JjL3Byb3RvY29scy10YWJsZS5qcz9hMzEzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFYgPSAtMTtcbmV4cG9ydCBjb25zdCBuYW1lcyA9IHt9O1xuZXhwb3J0IGNvbnN0IGNvZGVzID0ge307XG5leHBvcnQgY29uc3QgdGFibGUgPSBbXG4gICAgWzQsIDMyLCAnaXA0J10sXG4gICAgWzYsIDE2LCAndGNwJ10sXG4gICAgWzMzLCAxNiwgJ2RjY3AnXSxcbiAgICBbNDEsIDEyOCwgJ2lwNiddLFxuICAgIFs0MiwgViwgJ2lwNnpvbmUnXSxcbiAgICBbNDMsIDgsICdpcGNpZHInXSxcbiAgICBbNTMsIFYsICdkbnMnLCB0cnVlXSxcbiAgICBbNTQsIFYsICdkbnM0JywgdHJ1ZV0sXG4gICAgWzU1LCBWLCAnZG5zNicsIHRydWVdLFxuICAgIFs1NiwgViwgJ2Ruc2FkZHInLCB0cnVlXSxcbiAgICBbMTMyLCAxNiwgJ3NjdHAnXSxcbiAgICBbMjczLCAxNiwgJ3VkcCddLFxuICAgIFsyNzUsIDAsICdwMnAtd2VicnRjLXN0YXInXSxcbiAgICBbMjc2LCAwLCAncDJwLXdlYnJ0Yy1kaXJlY3QnXSxcbiAgICBbMjc3LCAwLCAncDJwLXN0YXJkdXN0J10sXG4gICAgWzI4MCwgMCwgJ3dlYnJ0YyddLFxuICAgIFsyODEsIDAsICd3ZWJydGMtdzNjJ10sXG4gICAgWzI5MCwgMCwgJ3AycC1jaXJjdWl0J10sXG4gICAgWzMwMSwgMCwgJ3VkdCddLFxuICAgIFszMDIsIDAsICd1dHAnXSxcbiAgICBbNDAwLCBWLCAndW5peCcsIGZhbHNlLCB0cnVlXSxcbiAgICAvLyBgaXBmc2AgaXMgYWRkZWQgYmVmb3JlIGBwMnBgIGZvciBsZWdhY3kgc3VwcG9ydC5cbiAgICAvLyBBbGwgdGV4dCByZXByZXNlbnRhdGlvbnMgd2lsbCBkZWZhdWx0IHRvIGBwMnBgLCBidXQgYGlwZnNgIHdpbGxcbiAgICAvLyBzdGlsbCBiZSBzdXBwb3J0ZWRcbiAgICBbNDIxLCBWLCAnaXBmcyddLFxuICAgIC8vIGBwMnBgIGlzIHRoZSBwcmVmZXJyZWQgbmFtZSBmb3IgNDIxLCBhbmQgaXMgbm93IHRoZSBkZWZhdWx0XG4gICAgWzQyMSwgViwgJ3AycCddLFxuICAgIFs0NDMsIDAsICdodHRwcyddLFxuICAgIFs0NDQsIDk2LCAnb25pb24nXSxcbiAgICBbNDQ1LCAyOTYsICdvbmlvbjMnXSxcbiAgICBbNDQ2LCBWLCAnZ2FybGljNjQnXSxcbiAgICBbNDQ4LCAwLCAndGxzJ10sXG4gICAgWzQ0OSwgViwgJ3NuaSddLFxuICAgIFs0NjAsIDAsICdxdWljJ10sXG4gICAgWzQ2MSwgMCwgJ3F1aWMtdjEnXSxcbiAgICBbNDY1LCAwLCAnd2VidHJhbnNwb3J0J10sXG4gICAgWzQ2NiwgViwgJ2NlcnRoYXNoJ10sXG4gICAgWzQ3NywgMCwgJ3dzJ10sXG4gICAgWzQ3OCwgMCwgJ3dzcyddLFxuICAgIFs0NzksIDAsICdwMnAtd2Vic29ja2V0LXN0YXInXSxcbiAgICBbNDgwLCAwLCAnaHR0cCddLFxuICAgIFs3NzcsIFYsICdtZW1vcnknXVxuXTtcbi8vIHBvcHVsYXRlIHRhYmxlc1xudGFibGUuZm9yRWFjaChyb3cgPT4ge1xuICAgIGNvbnN0IHByb3RvID0gY3JlYXRlUHJvdG9jb2woLi4ucm93KTtcbiAgICBjb2Rlc1twcm90by5jb2RlXSA9IHByb3RvO1xuICAgIG5hbWVzW3Byb3RvLm5hbWVdID0gcHJvdG87XG59KTtcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVQcm90b2NvbChjb2RlLCBzaXplLCBuYW1lLCByZXNvbHZhYmxlLCBwYXRoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgY29kZSxcbiAgICAgICAgc2l6ZSxcbiAgICAgICAgbmFtZSxcbiAgICAgICAgcmVzb2x2YWJsZTogQm9vbGVhbihyZXNvbHZhYmxlKSxcbiAgICAgICAgcGF0aDogQm9vbGVhbihwYXRoKVxuICAgIH07XG59XG4vKipcbiAqIEZvciB0aGUgcGFzc2VkIHByb3RvIHN0cmluZyBvciBudW1iZXIsIHJldHVybiBhIHtAbGluayBQcm90b2NvbH1cbiAqXG4gKiBAZXhhbXBsZVxuICpcbiAqIGBgYGpzXG4gKiBpbXBvcnQgeyBwcm90b2NvbCB9IGZyb20gJ0BtdWx0aWZvcm1hdHMvbXVsdGlhZGRyJ1xuICpcbiAqIGNvbnNvbGUuaW5mbyhwcm90b2NvbCg0KSlcbiAqIC8vIHsgY29kZTogNCwgc2l6ZTogMzIsIG5hbWU6ICdpcDQnLCByZXNvbHZhYmxlOiBmYWxzZSwgcGF0aDogZmFsc2UgfVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRQcm90b2NvbChwcm90bykge1xuICAgIGlmICh0eXBlb2YgcHJvdG8gPT09ICdudW1iZXInKSB7XG4gICAgICAgIGlmIChjb2Rlc1twcm90b10gIT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuIGNvZGVzW3Byb3RvXTtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYG5vIHByb3RvY29sIHdpdGggY29kZTogJHtwcm90b31gKTtcbiAgICB9XG4gICAgZWxzZSBpZiAodHlwZW9mIHByb3RvID09PSAnc3RyaW5nJykge1xuICAgICAgICBpZiAobmFtZXNbcHJvdG9dICE9IG51bGwpIHtcbiAgICAgICAgICAgIHJldHVybiBuYW1lc1twcm90b107XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBubyBwcm90b2NvbCB3aXRoIG5hbWU6ICR7cHJvdG99YCk7XG4gICAgfVxuICAgIHRocm93IG5ldyBFcnJvcihgaW52YWxpZCBwcm90b2NvbCBpZCB0eXBlOiAke3R5cGVvZiBwcm90b31gKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXByb3RvY29scy10YWJsZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/node_modules/@multiformats/multiaddr/dist/src/protocols-table.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/node_modules/it-all/dist/src/index.js":
/*!****************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/node_modules/it-all/dist/src/index.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ all)\n/* harmony export */ });\n/**\n * Collects all values from an (async) iterable and returns them as an array\n */\nasync function all(source) {\n    const arr = [];\n    for await (const entry of source) {\n        arr.push(entry);\n    }\n    return arr;\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy9pdC1hbGwvZGlzdC9zcmMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2UtMi9uZXh0anMvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy9pdC1hbGwvZGlzdC9zcmMvaW5kZXguanM/MjRhNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvbGxlY3RzIGFsbCB2YWx1ZXMgZnJvbSBhbiAoYXN5bmMpIGl0ZXJhYmxlIGFuZCByZXR1cm5zIHRoZW0gYXMgYW4gYXJyYXlcbiAqL1xuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gYWxsKHNvdXJjZSkge1xuICAgIGNvbnN0IGFyciA9IFtdO1xuICAgIGZvciBhd2FpdCAoY29uc3QgZW50cnkgb2Ygc291cmNlKSB7XG4gICAgICAgIGFyci5wdXNoKGVudHJ5KTtcbiAgICB9XG4gICAgcmV0dXJuIGFycjtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/node_modules/it-all/dist/src/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/node_modules/nanoid/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/node_modules/nanoid/index.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   customAlphabet: () => (/* binding */ customAlphabet),\n/* harmony export */   customRandom: () => (/* binding */ customRandom),\n/* harmony export */   nanoid: () => (/* binding */ nanoid),\n/* harmony export */   random: () => (/* binding */ random),\n/* harmony export */   urlAlphabet: () => (/* reexport safe */ _url_alphabet_index_js__WEBPACK_IMPORTED_MODULE_1__.urlAlphabet)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var _url_alphabet_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./url-alphabet/index.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/nanoid/url-alphabet/index.js\");\n\n\n\nconst POOL_SIZE_MULTIPLIER = 128\nlet pool, poolOffset\nlet fillPool = bytes => {\n  if (!pool || pool.length < bytes) {\n    pool = Buffer.allocUnsafe(bytes * POOL_SIZE_MULTIPLIER)\n    ;(0,crypto__WEBPACK_IMPORTED_MODULE_0__.randomFillSync)(pool)\n    poolOffset = 0\n  } else if (poolOffset + bytes > pool.length) {\n    (0,crypto__WEBPACK_IMPORTED_MODULE_0__.randomFillSync)(pool)\n    poolOffset = 0\n  }\n  poolOffset += bytes\n}\nlet random = bytes => {\n  fillPool((bytes -= 0))\n  return pool.subarray(poolOffset - bytes, poolOffset)\n}\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (31 - Math.clz32((alphabet.length - 1) | 1))) - 1\n  let step = Math.ceil((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let i = step\n      while (i--) {\n        id += alphabet[bytes[i] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  fillPool((size -= 0))\n  let id = ''\n  for (let i = poolOffset - size; i < poolOffset; i++) {\n    id += _url_alphabet_index_js__WEBPACK_IMPORTED_MODULE_1__.urlAlphabet[pool[i] & 63]\n  }\n  return id\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy9uYW5vaWQvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUF1QztBQUNjO0FBQy9CO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLHVEQUFjO0FBQ2xCO0FBQ0EsSUFBSTtBQUNKLElBQUksc0RBQWM7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDTztBQUNQO0FBQ0E7QUFDQSxrQ0FBa0MsZ0JBQWdCO0FBQ2xELFVBQVUsK0RBQVc7QUFDckI7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNlLTIvbmV4dGpzLy4vbm9kZV9tb2R1bGVzL2lwZnMtY29yZS11dGlscy9ub2RlX21vZHVsZXMvbmFub2lkL2luZGV4LmpzPzQyOGIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmFuZG9tRmlsbFN5bmMgfSBmcm9tICdjcnlwdG8nXG5pbXBvcnQgeyB1cmxBbHBoYWJldCB9IGZyb20gJy4vdXJsLWFscGhhYmV0L2luZGV4LmpzJ1xuZXhwb3J0IHsgdXJsQWxwaGFiZXQgfVxuY29uc3QgUE9PTF9TSVpFX01VTFRJUExJRVIgPSAxMjhcbmxldCBwb29sLCBwb29sT2Zmc2V0XG5sZXQgZmlsbFBvb2wgPSBieXRlcyA9PiB7XG4gIGlmICghcG9vbCB8fCBwb29sLmxlbmd0aCA8IGJ5dGVzKSB7XG4gICAgcG9vbCA9IEJ1ZmZlci5hbGxvY1Vuc2FmZShieXRlcyAqIFBPT0xfU0laRV9NVUxUSVBMSUVSKVxuICAgIHJhbmRvbUZpbGxTeW5jKHBvb2wpXG4gICAgcG9vbE9mZnNldCA9IDBcbiAgfSBlbHNlIGlmIChwb29sT2Zmc2V0ICsgYnl0ZXMgPiBwb29sLmxlbmd0aCkge1xuICAgIHJhbmRvbUZpbGxTeW5jKHBvb2wpXG4gICAgcG9vbE9mZnNldCA9IDBcbiAgfVxuICBwb29sT2Zmc2V0ICs9IGJ5dGVzXG59XG5leHBvcnQgbGV0IHJhbmRvbSA9IGJ5dGVzID0+IHtcbiAgZmlsbFBvb2woKGJ5dGVzIC09IDApKVxuICByZXR1cm4gcG9vbC5zdWJhcnJheShwb29sT2Zmc2V0IC0gYnl0ZXMsIHBvb2xPZmZzZXQpXG59XG5leHBvcnQgbGV0IGN1c3RvbVJhbmRvbSA9IChhbHBoYWJldCwgZGVmYXVsdFNpemUsIGdldFJhbmRvbSkgPT4ge1xuICBsZXQgbWFzayA9ICgyIDw8ICgzMSAtIE1hdGguY2x6MzIoKGFscGhhYmV0Lmxlbmd0aCAtIDEpIHwgMSkpKSAtIDFcbiAgbGV0IHN0ZXAgPSBNYXRoLmNlaWwoKDEuNiAqIG1hc2sgKiBkZWZhdWx0U2l6ZSkgLyBhbHBoYWJldC5sZW5ndGgpXG4gIHJldHVybiAoc2l6ZSA9IGRlZmF1bHRTaXplKSA9PiB7XG4gICAgbGV0IGlkID0gJydcbiAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgbGV0IGJ5dGVzID0gZ2V0UmFuZG9tKHN0ZXApXG4gICAgICBsZXQgaSA9IHN0ZXBcbiAgICAgIHdoaWxlIChpLS0pIHtcbiAgICAgICAgaWQgKz0gYWxwaGFiZXRbYnl0ZXNbaV0gJiBtYXNrXSB8fCAnJ1xuICAgICAgICBpZiAoaWQubGVuZ3RoID09PSBzaXplKSByZXR1cm4gaWRcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbmV4cG9ydCBsZXQgY3VzdG9tQWxwaGFiZXQgPSAoYWxwaGFiZXQsIHNpemUgPSAyMSkgPT5cbiAgY3VzdG9tUmFuZG9tKGFscGhhYmV0LCBzaXplLCByYW5kb20pXG5leHBvcnQgbGV0IG5hbm9pZCA9IChzaXplID0gMjEpID0+IHtcbiAgZmlsbFBvb2woKHNpemUgLT0gMCkpXG4gIGxldCBpZCA9ICcnXG4gIGZvciAobGV0IGkgPSBwb29sT2Zmc2V0IC0gc2l6ZTsgaSA8IHBvb2xPZmZzZXQ7IGkrKykge1xuICAgIGlkICs9IHVybEFscGhhYmV0W3Bvb2xbaV0gJiA2M11cbiAgfVxuICByZXR1cm4gaWRcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/node_modules/nanoid/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/node_modules/nanoid/url-alphabet/index.js":
/*!********************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/node_modules/nanoid/url-alphabet/index.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   urlAlphabet: () => (/* binding */ urlAlphabet)\n/* harmony export */ });\nconst urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy9uYW5vaWQvdXJsLWFscGhhYmV0L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNlLTIvbmV4dGpzLy4vbm9kZV9tb2R1bGVzL2lwZnMtY29yZS11dGlscy9ub2RlX21vZHVsZXMvbmFub2lkL3VybC1hbHBoYWJldC9pbmRleC5qcz83MjM2Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCB1cmxBbHBoYWJldCA9XG4gICd1c2VhbmRvbS0yNlQxOTgzNDBQWDc1cHhKQUNLVkVSWU1JTkRCVVNIV09MRl9HUVpiZmdoamtscXZ3eXpyaWN0J1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/node_modules/nanoid/url-alphabet/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/dist/src/alloc.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/node_modules/uint8arrays/dist/src/alloc.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   alloc: () => (/* binding */ alloc),\n/* harmony export */   allocUnsafe: () => (/* binding */ allocUnsafe)\n/* harmony export */ });\n/* harmony import */ var _util_as_uint8array_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/as-uint8array.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/dist/src/util/as-uint8array.js\");\n\n/**\n * Returns a `Uint8Array` of the requested size. Referenced memory will\n * be initialized to 0.\n */\nfunction alloc(size = 0) {\n    if (globalThis.Buffer?.alloc != null) {\n        return (0,_util_as_uint8array_js__WEBPACK_IMPORTED_MODULE_0__.asUint8Array)(globalThis.Buffer.alloc(size));\n    }\n    return new Uint8Array(size);\n}\n/**\n * Where possible returns a Uint8Array of the requested size that references\n * uninitialized memory. Only use if you are certain you will immediately\n * overwrite every value in the returned `Uint8Array`.\n */\nfunction allocUnsafe(size = 0) {\n    if (globalThis.Buffer?.allocUnsafe != null) {\n        return (0,_util_as_uint8array_js__WEBPACK_IMPORTED_MODULE_0__.asUint8Array)(globalThis.Buffer.allocUnsafe(size));\n    }\n    return new Uint8Array(size);\n}\n//# sourceMappingURL=alloc.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9kaXN0L3NyYy9hbGxvYy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBdUQ7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsZUFBZSxvRUFBWTtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLGVBQWUsb0VBQVk7QUFDM0I7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2UtMi9uZXh0anMvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9kaXN0L3NyYy9hbGxvYy5qcz81Zjk2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFzVWludDhBcnJheSB9IGZyb20gJy4vdXRpbC9hcy11aW50OGFycmF5LmpzJztcbi8qKlxuICogUmV0dXJucyBhIGBVaW50OEFycmF5YCBvZiB0aGUgcmVxdWVzdGVkIHNpemUuIFJlZmVyZW5jZWQgbWVtb3J5IHdpbGxcbiAqIGJlIGluaXRpYWxpemVkIHRvIDAuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhbGxvYyhzaXplID0gMCkge1xuICAgIGlmIChnbG9iYWxUaGlzLkJ1ZmZlcj8uYWxsb2MgIT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gYXNVaW50OEFycmF5KGdsb2JhbFRoaXMuQnVmZmVyLmFsbG9jKHNpemUpKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KHNpemUpO1xufVxuLyoqXG4gKiBXaGVyZSBwb3NzaWJsZSByZXR1cm5zIGEgVWludDhBcnJheSBvZiB0aGUgcmVxdWVzdGVkIHNpemUgdGhhdCByZWZlcmVuY2VzXG4gKiB1bmluaXRpYWxpemVkIG1lbW9yeS4gT25seSB1c2UgaWYgeW91IGFyZSBjZXJ0YWluIHlvdSB3aWxsIGltbWVkaWF0ZWx5XG4gKiBvdmVyd3JpdGUgZXZlcnkgdmFsdWUgaW4gdGhlIHJldHVybmVkIGBVaW50OEFycmF5YC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFsbG9jVW5zYWZlKHNpemUgPSAwKSB7XG4gICAgaWYgKGdsb2JhbFRoaXMuQnVmZmVyPy5hbGxvY1Vuc2FmZSAhPSBudWxsKSB7XG4gICAgICAgIHJldHVybiBhc1VpbnQ4QXJyYXkoZ2xvYmFsVGhpcy5CdWZmZXIuYWxsb2NVbnNhZmUoc2l6ZSkpO1xuICAgIH1cbiAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoc2l6ZSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hbGxvYy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/dist/src/alloc.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/dist/src/concat.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/node_modules/uint8arrays/dist/src/concat.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   concat: () => (/* binding */ concat)\n/* harmony export */ });\n/* harmony import */ var _alloc_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./alloc.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/dist/src/alloc.js\");\n/* harmony import */ var _util_as_uint8array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/as-uint8array.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/dist/src/util/as-uint8array.js\");\n\n\n/**\n * Returns a new Uint8Array created by concatenating the passed ArrayLikes\n */\nfunction concat(arrays, length) {\n    if (length == null) {\n        length = arrays.reduce((acc, curr) => acc + curr.length, 0);\n    }\n    const output = (0,_alloc_js__WEBPACK_IMPORTED_MODULE_0__.allocUnsafe)(length);\n    let offset = 0;\n    for (const arr of arrays) {\n        output.set(arr, offset);\n        offset += arr.length;\n    }\n    return (0,_util_as_uint8array_js__WEBPACK_IMPORTED_MODULE_1__.asUint8Array)(output);\n}\n//# sourceMappingURL=concat.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9kaXN0L3NyYy9jb25jYXQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXlDO0FBQ2M7QUFDdkQ7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsc0RBQVc7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsb0VBQVk7QUFDdkI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BzZS0yL25leHRqcy8uL25vZGVfbW9kdWxlcy9pcGZzLWNvcmUtdXRpbHMvbm9kZV9tb2R1bGVzL3VpbnQ4YXJyYXlzL2Rpc3Qvc3JjL2NvbmNhdC5qcz9kYTU5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFsbG9jVW5zYWZlIH0gZnJvbSAnLi9hbGxvYy5qcyc7XG5pbXBvcnQgeyBhc1VpbnQ4QXJyYXkgfSBmcm9tICcuL3V0aWwvYXMtdWludDhhcnJheS5qcyc7XG4vKipcbiAqIFJldHVybnMgYSBuZXcgVWludDhBcnJheSBjcmVhdGVkIGJ5IGNvbmNhdGVuYXRpbmcgdGhlIHBhc3NlZCBBcnJheUxpa2VzXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjb25jYXQoYXJyYXlzLCBsZW5ndGgpIHtcbiAgICBpZiAobGVuZ3RoID09IG51bGwpIHtcbiAgICAgICAgbGVuZ3RoID0gYXJyYXlzLnJlZHVjZSgoYWNjLCBjdXJyKSA9PiBhY2MgKyBjdXJyLmxlbmd0aCwgMCk7XG4gICAgfVxuICAgIGNvbnN0IG91dHB1dCA9IGFsbG9jVW5zYWZlKGxlbmd0aCk7XG4gICAgbGV0IG9mZnNldCA9IDA7XG4gICAgZm9yIChjb25zdCBhcnIgb2YgYXJyYXlzKSB7XG4gICAgICAgIG91dHB1dC5zZXQoYXJyLCBvZmZzZXQpO1xuICAgICAgICBvZmZzZXQgKz0gYXJyLmxlbmd0aDtcbiAgICB9XG4gICAgcmV0dXJuIGFzVWludDhBcnJheShvdXRwdXQpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uY2F0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/dist/src/concat.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/dist/src/equals.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/node_modules/uint8arrays/dist/src/equals.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   equals: () => (/* binding */ equals)\n/* harmony export */ });\n/**\n * Returns true if the two passed Uint8Arrays have the same content\n */\nfunction equals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (a.byteLength !== b.byteLength) {\n        return false;\n    }\n    for (let i = 0; i < a.byteLength; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=equals.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9kaXN0L3NyYy9lcXVhbHMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGtCQUFrQjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BzZS0yL25leHRqcy8uL25vZGVfbW9kdWxlcy9pcGZzLWNvcmUtdXRpbHMvbm9kZV9tb2R1bGVzL3VpbnQ4YXJyYXlzL2Rpc3Qvc3JjL2VxdWFscy5qcz9jMTVkIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUmV0dXJucyB0cnVlIGlmIHRoZSB0d28gcGFzc2VkIFVpbnQ4QXJyYXlzIGhhdmUgdGhlIHNhbWUgY29udGVudFxuICovXG5leHBvcnQgZnVuY3Rpb24gZXF1YWxzKGEsIGIpIHtcbiAgICBpZiAoYSA9PT0gYikge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgaWYgKGEuYnl0ZUxlbmd0aCAhPT0gYi5ieXRlTGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhLmJ5dGVMZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAoYVtpXSAhPT0gYltpXSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXF1YWxzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/dist/src/equals.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/dist/src/from-string.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/node_modules/uint8arrays/dist/src/from-string.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromString: () => (/* binding */ fromString)\n/* harmony export */ });\n/* harmony import */ var _util_as_uint8array_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/as-uint8array.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/dist/src/util/as-uint8array.js\");\n/* harmony import */ var _util_bases_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/bases.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/dist/src/util/bases.js\");\n\n\n/**\n * Create a `Uint8Array` from the passed string\n *\n * Supports `utf8`, `utf-8`, `hex`, and any encoding supported by the multiformats module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n */\nfunction fromString(string, encoding = 'utf8') {\n    const base = _util_bases_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"][encoding];\n    if (base == null) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n        return (0,_util_as_uint8array_js__WEBPACK_IMPORTED_MODULE_0__.asUint8Array)(globalThis.Buffer.from(string, 'utf-8'));\n    }\n    // add multibase prefix\n    return base.decoder.decode(`${base.prefix}${string}`); // eslint-disable-line @typescript-eslint/restrict-template-expressions\n}\n//# sourceMappingURL=from-string.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9kaXN0L3NyYy9mcm9tLXN0cmluZy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBdUQ7QUFDZjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsaUJBQWlCLHNEQUFLO0FBQ3RCO0FBQ0EsaURBQWlELFNBQVM7QUFDMUQ7QUFDQTtBQUNBLGVBQWUsb0VBQVk7QUFDM0I7QUFDQTtBQUNBLGtDQUFrQyxZQUFZLEVBQUUsT0FBTyxJQUFJO0FBQzNEO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2UtMi9uZXh0anMvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9kaXN0L3NyYy9mcm9tLXN0cmluZy5qcz81ODhmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFzVWludDhBcnJheSB9IGZyb20gJy4vdXRpbC9hcy11aW50OGFycmF5LmpzJztcbmltcG9ydCBiYXNlcywge30gZnJvbSAnLi91dGlsL2Jhc2VzLmpzJztcbi8qKlxuICogQ3JlYXRlIGEgYFVpbnQ4QXJyYXlgIGZyb20gdGhlIHBhc3NlZCBzdHJpbmdcbiAqXG4gKiBTdXBwb3J0cyBgdXRmOGAsIGB1dGYtOGAsIGBoZXhgLCBhbmQgYW55IGVuY29kaW5nIHN1cHBvcnRlZCBieSB0aGUgbXVsdGlmb3JtYXRzIG1vZHVsZS5cbiAqXG4gKiBBbHNvIGBhc2NpaWAgd2hpY2ggaXMgc2ltaWxhciB0byBub2RlJ3MgJ2JpbmFyeScgZW5jb2RpbmcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBmcm9tU3RyaW5nKHN0cmluZywgZW5jb2RpbmcgPSAndXRmOCcpIHtcbiAgICBjb25zdCBiYXNlID0gYmFzZXNbZW5jb2RpbmddO1xuICAgIGlmIChiYXNlID09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbnN1cHBvcnRlZCBlbmNvZGluZyBcIiR7ZW5jb2Rpbmd9XCJgKTtcbiAgICB9XG4gICAgaWYgKChlbmNvZGluZyA9PT0gJ3V0ZjgnIHx8IGVuY29kaW5nID09PSAndXRmLTgnKSAmJiBnbG9iYWxUaGlzLkJ1ZmZlciAhPSBudWxsICYmIGdsb2JhbFRoaXMuQnVmZmVyLmZyb20gIT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gYXNVaW50OEFycmF5KGdsb2JhbFRoaXMuQnVmZmVyLmZyb20oc3RyaW5nLCAndXRmLTgnKSk7XG4gICAgfVxuICAgIC8vIGFkZCBtdWx0aWJhc2UgcHJlZml4XG4gICAgcmV0dXJuIGJhc2UuZGVjb2Rlci5kZWNvZGUoYCR7YmFzZS5wcmVmaXh9JHtzdHJpbmd9YCk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L3Jlc3RyaWN0LXRlbXBsYXRlLWV4cHJlc3Npb25zXG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1mcm9tLXN0cmluZy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/dist/src/from-string.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/dist/src/to-string.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/node_modules/uint8arrays/dist/src/to-string.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toString: () => (/* binding */ toString)\n/* harmony export */ });\n/* harmony import */ var _util_bases_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/bases.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/dist/src/util/bases.js\");\n\n/**\n * Turns a `Uint8Array` into a string.\n *\n * Supports `utf8`, `utf-8` and any encoding supported by the multibase module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n */\nfunction toString(array, encoding = 'utf8') {\n    const base = _util_bases_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"][encoding];\n    if (base == null) {\n        throw new Error(`Unsupported encoding \"${encoding}\"`);\n    }\n    if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n        return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString('utf8');\n    }\n    // strip multibase prefix\n    return base.encoder.encode(array).substring(1);\n}\n//# sourceMappingURL=to-string.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9kaXN0L3NyYy90by1zdHJpbmcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBd0M7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLGlCQUFpQixzREFBSztBQUN0QjtBQUNBLGlEQUFpRCxTQUFTO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2UtMi9uZXh0anMvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9kaXN0L3NyYy90by1zdHJpbmcuanM/ODJkZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYmFzZXMsIHt9IGZyb20gJy4vdXRpbC9iYXNlcy5qcyc7XG4vKipcbiAqIFR1cm5zIGEgYFVpbnQ4QXJyYXlgIGludG8gYSBzdHJpbmcuXG4gKlxuICogU3VwcG9ydHMgYHV0ZjhgLCBgdXRmLThgIGFuZCBhbnkgZW5jb2Rpbmcgc3VwcG9ydGVkIGJ5IHRoZSBtdWx0aWJhc2UgbW9kdWxlLlxuICpcbiAqIEFsc28gYGFzY2lpYCB3aGljaCBpcyBzaW1pbGFyIHRvIG5vZGUncyAnYmluYXJ5JyBlbmNvZGluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRvU3RyaW5nKGFycmF5LCBlbmNvZGluZyA9ICd1dGY4Jykge1xuICAgIGNvbnN0IGJhc2UgPSBiYXNlc1tlbmNvZGluZ107XG4gICAgaWYgKGJhc2UgPT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuc3VwcG9ydGVkIGVuY29kaW5nIFwiJHtlbmNvZGluZ31cImApO1xuICAgIH1cbiAgICBpZiAoKGVuY29kaW5nID09PSAndXRmOCcgfHwgZW5jb2RpbmcgPT09ICd1dGYtOCcpICYmIGdsb2JhbFRoaXMuQnVmZmVyICE9IG51bGwgJiYgZ2xvYmFsVGhpcy5CdWZmZXIuZnJvbSAhPSBudWxsKSB7XG4gICAgICAgIHJldHVybiBnbG9iYWxUaGlzLkJ1ZmZlci5mcm9tKGFycmF5LmJ1ZmZlciwgYXJyYXkuYnl0ZU9mZnNldCwgYXJyYXkuYnl0ZUxlbmd0aCkudG9TdHJpbmcoJ3V0ZjgnKTtcbiAgICB9XG4gICAgLy8gc3RyaXAgbXVsdGliYXNlIHByZWZpeFxuICAgIHJldHVybiBiYXNlLmVuY29kZXIuZW5jb2RlKGFycmF5KS5zdWJzdHJpbmcoMSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD10by1zdHJpbmcuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/dist/src/to-string.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/dist/src/util/as-uint8array.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/node_modules/uint8arrays/dist/src/util/as-uint8array.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   asUint8Array: () => (/* binding */ asUint8Array)\n/* harmony export */ });\n/**\n * To guarantee Uint8Array semantics, convert nodejs Buffers\n * into vanilla Uint8Arrays\n */\nfunction asUint8Array(buf) {\n    if (globalThis.Buffer != null) {\n        return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n    }\n    return buf;\n}\n//# sourceMappingURL=as-uint8array.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9kaXN0L3NyYy91dGlsL2FzLXVpbnQ4YXJyYXkuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2UtMi9uZXh0anMvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9kaXN0L3NyYy91dGlsL2FzLXVpbnQ4YXJyYXkuanM/YjM4ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRvIGd1YXJhbnRlZSBVaW50OEFycmF5IHNlbWFudGljcywgY29udmVydCBub2RlanMgQnVmZmVyc1xuICogaW50byB2YW5pbGxhIFVpbnQ4QXJyYXlzXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhc1VpbnQ4QXJyYXkoYnVmKSB7XG4gICAgaWYgKGdsb2JhbFRoaXMuQnVmZmVyICE9IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KGJ1Zi5idWZmZXIsIGJ1Zi5ieXRlT2Zmc2V0LCBidWYuYnl0ZUxlbmd0aCk7XG4gICAgfVxuICAgIHJldHVybiBidWY7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcy11aW50OGFycmF5LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/dist/src/util/as-uint8array.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/dist/src/util/bases.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/node_modules/uint8arrays/dist/src/util/bases.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var multiformats_basics__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! multiformats/basics */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/basics.js\");\n/* harmony import */ var _alloc_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../alloc.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/dist/src/alloc.js\");\n\n\nfunction createCodec(name, prefix, encode, decode) {\n    return {\n        name,\n        prefix,\n        encoder: {\n            name,\n            prefix,\n            encode\n        },\n        decoder: {\n            decode\n        }\n    };\n}\nconst string = createCodec('utf8', 'u', (buf) => {\n    const decoder = new TextDecoder('utf8');\n    return 'u' + decoder.decode(buf);\n}, (str) => {\n    const encoder = new TextEncoder();\n    return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', (buf) => {\n    let string = 'a';\n    for (let i = 0; i < buf.length; i++) {\n        string += String.fromCharCode(buf[i]);\n    }\n    return string;\n}, (str) => {\n    str = str.substring(1);\n    const buf = (0,_alloc_js__WEBPACK_IMPORTED_MODULE_1__.allocUnsafe)(str.length);\n    for (let i = 0; i < str.length; i++) {\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n});\nconst BASES = {\n    utf8: string,\n    'utf-8': string,\n    hex: multiformats_basics__WEBPACK_IMPORTED_MODULE_0__.bases.base16,\n    latin1: ascii,\n    ascii,\n    binary: ascii,\n    ...multiformats_basics__WEBPACK_IMPORTED_MODULE_0__.bases\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (BASES);\n//# sourceMappingURL=bases.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9kaXN0L3NyYy91dGlsL2Jhc2VzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE0QztBQUNGO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxvQkFBb0IsZ0JBQWdCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLGdCQUFnQixzREFBVztBQUMzQixvQkFBb0IsZ0JBQWdCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxTQUFTLHNEQUFLO0FBQ2Q7QUFDQTtBQUNBO0FBQ0EsT0FBTyxzREFBSztBQUNaO0FBQ0EsaUVBQWUsS0FBSyxFQUFDO0FBQ3JCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNlLTIvbmV4dGpzLy4vbm9kZV9tb2R1bGVzL2lwZnMtY29yZS11dGlscy9ub2RlX21vZHVsZXMvdWludDhhcnJheXMvZGlzdC9zcmMvdXRpbC9iYXNlcy5qcz8yN2VmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJhc2VzIH0gZnJvbSAnbXVsdGlmb3JtYXRzL2Jhc2ljcyc7XG5pbXBvcnQgeyBhbGxvY1Vuc2FmZSB9IGZyb20gJy4uL2FsbG9jLmpzJztcbmZ1bmN0aW9uIGNyZWF0ZUNvZGVjKG5hbWUsIHByZWZpeCwgZW5jb2RlLCBkZWNvZGUpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBuYW1lLFxuICAgICAgICBwcmVmaXgsXG4gICAgICAgIGVuY29kZXI6IHtcbiAgICAgICAgICAgIG5hbWUsXG4gICAgICAgICAgICBwcmVmaXgsXG4gICAgICAgICAgICBlbmNvZGVcbiAgICAgICAgfSxcbiAgICAgICAgZGVjb2Rlcjoge1xuICAgICAgICAgICAgZGVjb2RlXG4gICAgICAgIH1cbiAgICB9O1xufVxuY29uc3Qgc3RyaW5nID0gY3JlYXRlQ29kZWMoJ3V0ZjgnLCAndScsIChidWYpID0+IHtcbiAgICBjb25zdCBkZWNvZGVyID0gbmV3IFRleHREZWNvZGVyKCd1dGY4Jyk7XG4gICAgcmV0dXJuICd1JyArIGRlY29kZXIuZGVjb2RlKGJ1Zik7XG59LCAoc3RyKSA9PiB7XG4gICAgY29uc3QgZW5jb2RlciA9IG5ldyBUZXh0RW5jb2RlcigpO1xuICAgIHJldHVybiBlbmNvZGVyLmVuY29kZShzdHIuc3Vic3RyaW5nKDEpKTtcbn0pO1xuY29uc3QgYXNjaWkgPSBjcmVhdGVDb2RlYygnYXNjaWknLCAnYScsIChidWYpID0+IHtcbiAgICBsZXQgc3RyaW5nID0gJ2EnO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYnVmLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHN0cmluZyArPSBTdHJpbmcuZnJvbUNoYXJDb2RlKGJ1ZltpXSk7XG4gICAgfVxuICAgIHJldHVybiBzdHJpbmc7XG59LCAoc3RyKSA9PiB7XG4gICAgc3RyID0gc3RyLnN1YnN0cmluZygxKTtcbiAgICBjb25zdCBidWYgPSBhbGxvY1Vuc2FmZShzdHIubGVuZ3RoKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHN0ci5sZW5ndGg7IGkrKykge1xuICAgICAgICBidWZbaV0gPSBzdHIuY2hhckNvZGVBdChpKTtcbiAgICB9XG4gICAgcmV0dXJuIGJ1Zjtcbn0pO1xuY29uc3QgQkFTRVMgPSB7XG4gICAgdXRmODogc3RyaW5nLFxuICAgICd1dGYtOCc6IHN0cmluZyxcbiAgICBoZXg6IGJhc2VzLmJhc2UxNixcbiAgICBsYXRpbjE6IGFzY2lpLFxuICAgIGFzY2lpLFxuICAgIGJpbmFyeTogYXNjaWksXG4gICAgLi4uYmFzZXNcbn07XG5leHBvcnQgZGVmYXVsdCBCQVNFUztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhc2VzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/dist/src/util/bases.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Codec: () => (/* binding */ Codec),\n/* harmony export */   baseX: () => (/* binding */ baseX),\n/* harmony export */   from: () => (/* binding */ from),\n/* harmony export */   or: () => (/* binding */ or),\n/* harmony export */   rfc4648: () => (/* binding */ rfc4648)\n/* harmony export */ });\n/* harmony import */ var _vendor_base_x_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../vendor/base-x.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/vendor/base-x.js\");\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../bytes.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bytes.js\");\n/* harmony import */ var _interface_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./interface.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/interface.js\");\n\n\n// Linter can't see that API is used in types.\n// eslint-disable-next-line\n\n\n/**\n * Class represents both BaseEncoder and MultibaseEncoder meaning it\n * can be used to encode to multibase or base encode without multibase\n * prefix.\n *\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseEncoder<Prefix>}\n * @implements {API.BaseEncoder}\n */\nclass Encoder {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(bytes:Uint8Array) => string} baseEncode\n   */\n  constructor (name, prefix, baseEncode) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n  }\n\n  /**\n   * @param {Uint8Array} bytes\n   * @returns {API.Multibase<Prefix>}\n   */\n  encode (bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${this.prefix}${this.baseEncode(bytes)}`\n    } else {\n      throw Error('Unknown type, must be binary type')\n    }\n  }\n}\n\n/**\n * @template {string} Prefix\n */\n/**\n * Class represents both BaseDecoder and MultibaseDecoder so it could be used\n * to decode multibases (with matching prefix) or just base decode strings\n * with corresponding base encoding.\n *\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.UnibaseDecoder<Prefix>}\n * @implements {API.BaseDecoder}\n */\nclass Decoder {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(text:string) => Uint8Array} baseDecode\n   */\n  constructor (name, prefix, baseDecode) {\n    this.name = name\n    this.prefix = prefix\n    /* c8 ignore next 3 */\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character')\n    }\n    /** @private */\n    this.prefixCodePoint = /** @type {number} */ (prefix.codePointAt(0))\n    this.baseDecode = baseDecode\n  }\n\n  /**\n   * @param {string} text\n   */\n  decode (text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`)\n      }\n      return this.baseDecode(text.slice(this.prefix.length))\n    } else {\n      throw Error('Can only multibase decode strings')\n    }\n  }\n\n  /**\n   * @template {string} OtherPrefix\n   * @param {API.UnibaseDecoder<OtherPrefix>|ComposedDecoder<OtherPrefix>} decoder\n   * @returns {ComposedDecoder<Prefix|OtherPrefix>}\n   */\n  or (decoder) {\n    return or(this, decoder)\n  }\n}\n\n/**\n * @template {string} Prefix\n * @typedef {Record<Prefix, API.UnibaseDecoder<Prefix>>} Decoders\n */\n\n/**\n * @template {string} Prefix\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.CombobaseDecoder<Prefix>}\n */\nclass ComposedDecoder {\n  /**\n   * @param {Decoders<Prefix>} decoders\n   */\n  constructor (decoders) {\n    this.decoders = decoders\n  }\n\n  /**\n   * @template {string} OtherPrefix\n   * @param {API.UnibaseDecoder<OtherPrefix>|ComposedDecoder<OtherPrefix>} decoder\n   * @returns {ComposedDecoder<Prefix|OtherPrefix>}\n   */\n  or (decoder) {\n    return or(this, decoder)\n  }\n\n  /**\n   * @param {string} input\n   * @returns {Uint8Array}\n   */\n  decode (input) {\n    const prefix = /** @type {Prefix} */ (input[0])\n    const decoder = this.decoders[prefix]\n    if (decoder) {\n      return decoder.decode(input)\n    } else {\n      throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)\n    }\n  }\n}\n\n/**\n * @template {string} L\n * @template {string} R\n * @param {API.UnibaseDecoder<L>|API.CombobaseDecoder<L>} left\n * @param {API.UnibaseDecoder<R>|API.CombobaseDecoder<R>} right\n * @returns {ComposedDecoder<L|R>}\n */\nconst or = (left, right) => new ComposedDecoder(/** @type {Decoders<L|R>} */({\n  ...(left.decoders || { [/** @type API.UnibaseDecoder<L> */(left).prefix]: left }),\n  ...(right.decoders || { [/** @type API.UnibaseDecoder<R> */(right).prefix]: right })\n}))\n\n/**\n * @class\n * @template {string} Base\n * @template {string} Prefix\n * @implements {API.MultibaseCodec<Prefix>}\n * @implements {API.MultibaseEncoder<Prefix>}\n * @implements {API.MultibaseDecoder<Prefix>}\n * @implements {API.BaseCodec}\n * @implements {API.BaseEncoder}\n * @implements {API.BaseDecoder}\n */\nclass Codec {\n  /**\n   * @param {Base} name\n   * @param {Prefix} prefix\n   * @param {(bytes:Uint8Array) => string} baseEncode\n   * @param {(text:string) => Uint8Array} baseDecode\n   */\n  constructor (name, prefix, baseEncode, baseDecode) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n    this.baseDecode = baseDecode\n    this.encoder = new Encoder(name, prefix, baseEncode)\n    this.decoder = new Decoder(name, prefix, baseDecode)\n  }\n\n  /**\n   * @param {Uint8Array} input\n   */\n  encode (input) {\n    return this.encoder.encode(input)\n  }\n\n  /**\n   * @param {string} input\n   */\n  decode (input) {\n    return this.decoder.decode(input)\n  }\n}\n\n/**\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {(bytes:Uint8Array) => string} options.encode\n * @param {(input:string) => Uint8Array} options.decode\n * @returns {Codec<Base, Prefix>}\n */\nconst from = ({ name, prefix, encode, decode }) =>\n  new Codec(name, prefix, encode, decode)\n\n/**\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {string} options.alphabet\n * @returns {Codec<Base, Prefix>}\n */\nconst baseX = ({ prefix, name, alphabet }) => {\n  const { encode, decode } = (0,_vendor_base_x_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(alphabet, name)\n  return from({\n    prefix,\n    name,\n    encode,\n    /**\n     * @param {string} text\n     */\n    decode: text => (0,_bytes_js__WEBPACK_IMPORTED_MODULE_1__.coerce)(decode(text))\n  })\n}\n\n/**\n * @param {string} string\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @param {string} name\n * @returns {Uint8Array}\n */\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  // Build the character lookup table:\n  /** @type {Record<string, number>} */\n  const codes = {}\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i\n  }\n\n  // Count the padding bytes:\n  let end = string.length\n  while (string[end - 1] === '=') {\n    --end\n  }\n\n  // Allocate the output:\n  const out = new Uint8Array((end * bitsPerChar / 8) | 0)\n\n  // Parse the data:\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  let written = 0 // Next byte to write\n  for (let i = 0; i < end; ++i) {\n    // Read one character from the string:\n    const value = codes[string[i]]\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${name} character`)\n    }\n\n    // Append the bits to the buffer:\n    buffer = (buffer << bitsPerChar) | value\n    bits += bitsPerChar\n\n    // Write out some bits if the buffer has a byte's worth:\n    if (bits >= 8) {\n      bits -= 8\n      out[written++] = 0xff & (buffer >> bits)\n    }\n  }\n\n  // Verify that we have received just enough bits:\n  if (bits >= bitsPerChar || 0xff & (buffer << (8 - bits))) {\n    throw new SyntaxError('Unexpected end of data')\n  }\n\n  return out\n}\n\n/**\n * @param {Uint8Array} data\n * @param {string} alphabet\n * @param {number} bitsPerChar\n * @returns {string}\n */\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '='\n  const mask = (1 << bitsPerChar) - 1\n  let out = ''\n\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  for (let i = 0; i < data.length; ++i) {\n    // Slurp data into the buffer:\n    buffer = (buffer << 8) | data[i]\n    bits += 8\n\n    // Write out as much as we can:\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar\n      out += alphabet[mask & (buffer >> bits)]\n    }\n  }\n\n  // Partial character:\n  if (bits) {\n    out += alphabet[mask & (buffer << (bitsPerChar - bits))]\n  }\n\n  // Add padding characters until we hit a byte boundary:\n  if (pad) {\n    while ((out.length * bitsPerChar) & 7) {\n      out += '='\n    }\n  }\n\n  return out\n}\n\n/**\n * RFC4648 Factory\n *\n * @template {string} Base\n * @template {string} Prefix\n * @param {object} options\n * @param {Base} options.name\n * @param {Prefix} options.prefix\n * @param {string} options.alphabet\n * @param {number} options.bitsPerChar\n */\nconst rfc4648 = ({ name, prefix, bitsPerChar, alphabet }) => {\n  return from({\n    prefix,\n    name,\n    encode (input) {\n      return encode(input, alphabet, bitsPerChar)\n    },\n    decode (input) {\n      return decode(input, alphabet, bitsPerChar, name)\n    }\n  })\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL3NyYy9iYXNlcy9iYXNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQTBDO0FBQ047QUFDcEM7QUFDQTtBQUNxQzs7QUFFckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxRQUFRO0FBQ3RCLGNBQWMsUUFBUTtBQUN0QixnQkFBZ0I7QUFDaEIsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBLGFBQWEsTUFBTTtBQUNuQixhQUFhLFFBQVE7QUFDckIsYUFBYSw4QkFBOEI7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsYUFBYSxZQUFZO0FBQ3pCLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsWUFBWSxFQUFFLHVCQUF1QjtBQUNyRCxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxjQUFjLFFBQVE7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLFFBQVE7QUFDdEIsY0FBYyxRQUFRO0FBQ3RCLGdCQUFnQjtBQUNoQixnQkFBZ0I7QUFDaEIsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBLGFBQWEsTUFBTTtBQUNuQixhQUFhLFFBQVE7QUFDckIsYUFBYSw2QkFBNkI7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLFFBQVE7QUFDOUM7QUFDQTs7QUFFQTtBQUNBLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlEQUF5RCxxQkFBcUIsSUFBSSxXQUFXLDZDQUE2QyxZQUFZO0FBQ3RKO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBO0FBQ0EsZ0JBQWdCLFFBQVE7QUFDeEIsYUFBYSw4REFBOEQ7QUFDM0UsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxjQUFjLFFBQVE7QUFDdEIsYUFBYSw0Q0FBNEM7QUFDekQ7O0FBRUE7QUFDQSxjQUFjLFFBQVE7QUFDdEIsZ0JBQWdCO0FBQ2hCLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQSxhQUFhLGtCQUFrQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGdCQUFnQixRQUFRO0FBQ3hCLGFBQWEsOERBQThEO0FBQzNFLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGFBQWEsUUFBUTtBQUNyQixlQUFlO0FBQ2Y7QUFDQTtBQUNBLDhCQUE4QixRQUFRO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTiw0REFBNEQsc0JBQXNCLDhCQUE4Qiw0QkFBNEI7QUFDNUk7QUFDQTtBQUNBOztBQUVBO0FBQ0EsY0FBYyxRQUFRO0FBQ3RCLGNBQWMsUUFBUTtBQUN0QixXQUFXLCtDQUErQztBQUMxRCxXQUFXLCtDQUErQztBQUMxRCxhQUFhO0FBQ2I7QUFDTywyREFBMkQsZUFBZTtBQUNqRix5QkFBeUIseURBQXlEO0FBQ2xGLDBCQUEwQiwyREFBMkQ7QUFDckYsQ0FBQzs7QUFFRDtBQUNBO0FBQ0EsY0FBYyxRQUFRO0FBQ3RCLGNBQWMsUUFBUTtBQUN0QixnQkFBZ0I7QUFDaEIsZ0JBQWdCO0FBQ2hCLGdCQUFnQjtBQUNoQixnQkFBZ0I7QUFDaEIsZ0JBQWdCO0FBQ2hCLGdCQUFnQjtBQUNoQjtBQUNPO0FBQ1A7QUFDQSxhQUFhLE1BQU07QUFDbkIsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsOEJBQThCO0FBQzNDLGFBQWEsNkJBQTZCO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGFBQWEsWUFBWTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsY0FBYyxRQUFRO0FBQ3RCLGNBQWMsUUFBUTtBQUN0QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxNQUFNO0FBQ2pCLFdBQVcsUUFBUTtBQUNuQixXQUFXLDhCQUE4QjtBQUN6QyxXQUFXLDhCQUE4QjtBQUN6QyxhQUFhO0FBQ2I7QUFDTyxnQkFBZ0IsOEJBQThCO0FBQ3JEOztBQUVBO0FBQ0EsY0FBYyxRQUFRO0FBQ3RCLGNBQWMsUUFBUTtBQUN0QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxNQUFNO0FBQ2pCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsYUFBYTtBQUNiO0FBQ08saUJBQWlCLHdCQUF3QjtBQUNoRCxVQUFVLGlCQUFpQixFQUFFLDZEQUFLO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkI7QUFDQSxvQkFBb0IsaURBQU07QUFDMUIsR0FBRztBQUNIOztBQUVBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxhQUFhLHdCQUF3QjtBQUNyQztBQUNBLGtCQUFrQixxQkFBcUI7QUFDdkM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsU0FBUztBQUMzQjtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsTUFBTTtBQUN6Qzs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esa0JBQWtCLGlCQUFpQjtBQUNuQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsUUFBUTtBQUN0QixjQUFjLFFBQVE7QUFDdEIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsTUFBTTtBQUNqQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQjtBQUNPLG1CQUFtQixxQ0FBcUM7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2UtMi9uZXh0anMvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL3NyYy9iYXNlcy9iYXNlLmpzPzcwZTYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGJhc2V4IGZyb20gJy4uLy4uL3ZlbmRvci9iYXNlLXguanMnXG5pbXBvcnQgeyBjb2VyY2UgfSBmcm9tICcuLi9ieXRlcy5qcydcbi8vIExpbnRlciBjYW4ndCBzZWUgdGhhdCBBUEkgaXMgdXNlZCBpbiB0eXBlcy5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxuaW1wb3J0ICogYXMgQVBJIGZyb20gJy4vaW50ZXJmYWNlLmpzJ1xuXG4vKipcbiAqIENsYXNzIHJlcHJlc2VudHMgYm90aCBCYXNlRW5jb2RlciBhbmQgTXVsdGliYXNlRW5jb2RlciBtZWFuaW5nIGl0XG4gKiBjYW4gYmUgdXNlZCB0byBlbmNvZGUgdG8gbXVsdGliYXNlIG9yIGJhc2UgZW5jb2RlIHdpdGhvdXQgbXVsdGliYXNlXG4gKiBwcmVmaXguXG4gKlxuICogQGNsYXNzXG4gKiBAdGVtcGxhdGUge3N0cmluZ30gQmFzZVxuICogQHRlbXBsYXRlIHtzdHJpbmd9IFByZWZpeFxuICogQGltcGxlbWVudHMge0FQSS5NdWx0aWJhc2VFbmNvZGVyPFByZWZpeD59XG4gKiBAaW1wbGVtZW50cyB7QVBJLkJhc2VFbmNvZGVyfVxuICovXG5jbGFzcyBFbmNvZGVyIHtcbiAgLyoqXG4gICAqIEBwYXJhbSB7QmFzZX0gbmFtZVxuICAgKiBAcGFyYW0ge1ByZWZpeH0gcHJlZml4XG4gICAqIEBwYXJhbSB7KGJ5dGVzOlVpbnQ4QXJyYXkpID0+IHN0cmluZ30gYmFzZUVuY29kZVxuICAgKi9cbiAgY29uc3RydWN0b3IgKG5hbWUsIHByZWZpeCwgYmFzZUVuY29kZSkge1xuICAgIHRoaXMubmFtZSA9IG5hbWVcbiAgICB0aGlzLnByZWZpeCA9IHByZWZpeFxuICAgIHRoaXMuYmFzZUVuY29kZSA9IGJhc2VFbmNvZGVcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGJ5dGVzXG4gICAqIEByZXR1cm5zIHtBUEkuTXVsdGliYXNlPFByZWZpeD59XG4gICAqL1xuICBlbmNvZGUgKGJ5dGVzKSB7XG4gICAgaWYgKGJ5dGVzIGluc3RhbmNlb2YgVWludDhBcnJheSkge1xuICAgICAgcmV0dXJuIGAke3RoaXMucHJlZml4fSR7dGhpcy5iYXNlRW5jb2RlKGJ5dGVzKX1gXG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IEVycm9yKCdVbmtub3duIHR5cGUsIG11c3QgYmUgYmluYXJ5IHR5cGUnKVxuICAgIH1cbiAgfVxufVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSB7c3RyaW5nfSBQcmVmaXhcbiAqL1xuLyoqXG4gKiBDbGFzcyByZXByZXNlbnRzIGJvdGggQmFzZURlY29kZXIgYW5kIE11bHRpYmFzZURlY29kZXIgc28gaXQgY291bGQgYmUgdXNlZFxuICogdG8gZGVjb2RlIG11bHRpYmFzZXMgKHdpdGggbWF0Y2hpbmcgcHJlZml4KSBvciBqdXN0IGJhc2UgZGVjb2RlIHN0cmluZ3NcbiAqIHdpdGggY29ycmVzcG9uZGluZyBiYXNlIGVuY29kaW5nLlxuICpcbiAqIEBjbGFzc1xuICogQHRlbXBsYXRlIHtzdHJpbmd9IEJhc2VcbiAqIEB0ZW1wbGF0ZSB7c3RyaW5nfSBQcmVmaXhcbiAqIEBpbXBsZW1lbnRzIHtBUEkuTXVsdGliYXNlRGVjb2RlcjxQcmVmaXg+fVxuICogQGltcGxlbWVudHMge0FQSS5VbmliYXNlRGVjb2RlcjxQcmVmaXg+fVxuICogQGltcGxlbWVudHMge0FQSS5CYXNlRGVjb2Rlcn1cbiAqL1xuY2xhc3MgRGVjb2RlciB7XG4gIC8qKlxuICAgKiBAcGFyYW0ge0Jhc2V9IG5hbWVcbiAgICogQHBhcmFtIHtQcmVmaXh9IHByZWZpeFxuICAgKiBAcGFyYW0geyh0ZXh0OnN0cmluZykgPT4gVWludDhBcnJheX0gYmFzZURlY29kZVxuICAgKi9cbiAgY29uc3RydWN0b3IgKG5hbWUsIHByZWZpeCwgYmFzZURlY29kZSkge1xuICAgIHRoaXMubmFtZSA9IG5hbWVcbiAgICB0aGlzLnByZWZpeCA9IHByZWZpeFxuICAgIC8qIGM4IGlnbm9yZSBuZXh0IDMgKi9cbiAgICBpZiAocHJlZml4LmNvZGVQb2ludEF0KDApID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBwcmVmaXggY2hhcmFjdGVyJylcbiAgICB9XG4gICAgLyoqIEBwcml2YXRlICovXG4gICAgdGhpcy5wcmVmaXhDb2RlUG9pbnQgPSAvKiogQHR5cGUge251bWJlcn0gKi8gKHByZWZpeC5jb2RlUG9pbnRBdCgwKSlcbiAgICB0aGlzLmJhc2VEZWNvZGUgPSBiYXNlRGVjb2RlXG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtzdHJpbmd9IHRleHRcbiAgICovXG4gIGRlY29kZSAodGV4dCkge1xuICAgIGlmICh0eXBlb2YgdGV4dCA9PT0gJ3N0cmluZycpIHtcbiAgICAgIGlmICh0ZXh0LmNvZGVQb2ludEF0KDApICE9PSB0aGlzLnByZWZpeENvZGVQb2ludCkge1xuICAgICAgICB0aHJvdyBFcnJvcihgVW5hYmxlIHRvIGRlY29kZSBtdWx0aWJhc2Ugc3RyaW5nICR7SlNPTi5zdHJpbmdpZnkodGV4dCl9LCAke3RoaXMubmFtZX0gZGVjb2RlciBvbmx5IHN1cHBvcnRzIGlucHV0cyBwcmVmaXhlZCB3aXRoICR7dGhpcy5wcmVmaXh9YClcbiAgICAgIH1cbiAgICAgIHJldHVybiB0aGlzLmJhc2VEZWNvZGUodGV4dC5zbGljZSh0aGlzLnByZWZpeC5sZW5ndGgpKVxuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBFcnJvcignQ2FuIG9ubHkgbXVsdGliYXNlIGRlY29kZSBzdHJpbmdzJylcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQHRlbXBsYXRlIHtzdHJpbmd9IE90aGVyUHJlZml4XG4gICAqIEBwYXJhbSB7QVBJLlVuaWJhc2VEZWNvZGVyPE90aGVyUHJlZml4PnxDb21wb3NlZERlY29kZXI8T3RoZXJQcmVmaXg+fSBkZWNvZGVyXG4gICAqIEByZXR1cm5zIHtDb21wb3NlZERlY29kZXI8UHJlZml4fE90aGVyUHJlZml4Pn1cbiAgICovXG4gIG9yIChkZWNvZGVyKSB7XG4gICAgcmV0dXJuIG9yKHRoaXMsIGRlY29kZXIpXG4gIH1cbn1cblxuLyoqXG4gKiBAdGVtcGxhdGUge3N0cmluZ30gUHJlZml4XG4gKiBAdHlwZWRlZiB7UmVjb3JkPFByZWZpeCwgQVBJLlVuaWJhc2VEZWNvZGVyPFByZWZpeD4+fSBEZWNvZGVyc1xuICovXG5cbi8qKlxuICogQHRlbXBsYXRlIHtzdHJpbmd9IFByZWZpeFxuICogQGltcGxlbWVudHMge0FQSS5NdWx0aWJhc2VEZWNvZGVyPFByZWZpeD59XG4gKiBAaW1wbGVtZW50cyB7QVBJLkNvbWJvYmFzZURlY29kZXI8UHJlZml4Pn1cbiAqL1xuY2xhc3MgQ29tcG9zZWREZWNvZGVyIHtcbiAgLyoqXG4gICAqIEBwYXJhbSB7RGVjb2RlcnM8UHJlZml4Pn0gZGVjb2RlcnNcbiAgICovXG4gIGNvbnN0cnVjdG9yIChkZWNvZGVycykge1xuICAgIHRoaXMuZGVjb2RlcnMgPSBkZWNvZGVyc1xuICB9XG5cbiAgLyoqXG4gICAqIEB0ZW1wbGF0ZSB7c3RyaW5nfSBPdGhlclByZWZpeFxuICAgKiBAcGFyYW0ge0FQSS5VbmliYXNlRGVjb2RlcjxPdGhlclByZWZpeD58Q29tcG9zZWREZWNvZGVyPE90aGVyUHJlZml4Pn0gZGVjb2RlclxuICAgKiBAcmV0dXJucyB7Q29tcG9zZWREZWNvZGVyPFByZWZpeHxPdGhlclByZWZpeD59XG4gICAqL1xuICBvciAoZGVjb2Rlcikge1xuICAgIHJldHVybiBvcih0aGlzLCBkZWNvZGVyKVxuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBpbnB1dFxuICAgKiBAcmV0dXJucyB7VWludDhBcnJheX1cbiAgICovXG4gIGRlY29kZSAoaW5wdXQpIHtcbiAgICBjb25zdCBwcmVmaXggPSAvKiogQHR5cGUge1ByZWZpeH0gKi8gKGlucHV0WzBdKVxuICAgIGNvbnN0IGRlY29kZXIgPSB0aGlzLmRlY29kZXJzW3ByZWZpeF1cbiAgICBpZiAoZGVjb2Rlcikge1xuICAgICAgcmV0dXJuIGRlY29kZXIuZGVjb2RlKGlucHV0KVxuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBSYW5nZUVycm9yKGBVbmFibGUgdG8gZGVjb2RlIG11bHRpYmFzZSBzdHJpbmcgJHtKU09OLnN0cmluZ2lmeShpbnB1dCl9LCBvbmx5IGlucHV0cyBwcmVmaXhlZCB3aXRoICR7T2JqZWN0LmtleXModGhpcy5kZWNvZGVycyl9IGFyZSBzdXBwb3J0ZWRgKVxuICAgIH1cbiAgfVxufVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSB7c3RyaW5nfSBMXG4gKiBAdGVtcGxhdGUge3N0cmluZ30gUlxuICogQHBhcmFtIHtBUEkuVW5pYmFzZURlY29kZXI8TD58QVBJLkNvbWJvYmFzZURlY29kZXI8TD59IGxlZnRcbiAqIEBwYXJhbSB7QVBJLlVuaWJhc2VEZWNvZGVyPFI+fEFQSS5Db21ib2Jhc2VEZWNvZGVyPFI+fSByaWdodFxuICogQHJldHVybnMge0NvbXBvc2VkRGVjb2RlcjxMfFI+fVxuICovXG5leHBvcnQgY29uc3Qgb3IgPSAobGVmdCwgcmlnaHQpID0+IG5ldyBDb21wb3NlZERlY29kZXIoLyoqIEB0eXBlIHtEZWNvZGVyczxMfFI+fSAqLyh7XG4gIC4uLihsZWZ0LmRlY29kZXJzIHx8IHsgWy8qKiBAdHlwZSBBUEkuVW5pYmFzZURlY29kZXI8TD4gKi8obGVmdCkucHJlZml4XTogbGVmdCB9KSxcbiAgLi4uKHJpZ2h0LmRlY29kZXJzIHx8IHsgWy8qKiBAdHlwZSBBUEkuVW5pYmFzZURlY29kZXI8Uj4gKi8ocmlnaHQpLnByZWZpeF06IHJpZ2h0IH0pXG59KSlcblxuLyoqXG4gKiBAY2xhc3NcbiAqIEB0ZW1wbGF0ZSB7c3RyaW5nfSBCYXNlXG4gKiBAdGVtcGxhdGUge3N0cmluZ30gUHJlZml4XG4gKiBAaW1wbGVtZW50cyB7QVBJLk11bHRpYmFzZUNvZGVjPFByZWZpeD59XG4gKiBAaW1wbGVtZW50cyB7QVBJLk11bHRpYmFzZUVuY29kZXI8UHJlZml4Pn1cbiAqIEBpbXBsZW1lbnRzIHtBUEkuTXVsdGliYXNlRGVjb2RlcjxQcmVmaXg+fVxuICogQGltcGxlbWVudHMge0FQSS5CYXNlQ29kZWN9XG4gKiBAaW1wbGVtZW50cyB7QVBJLkJhc2VFbmNvZGVyfVxuICogQGltcGxlbWVudHMge0FQSS5CYXNlRGVjb2Rlcn1cbiAqL1xuZXhwb3J0IGNsYXNzIENvZGVjIHtcbiAgLyoqXG4gICAqIEBwYXJhbSB7QmFzZX0gbmFtZVxuICAgKiBAcGFyYW0ge1ByZWZpeH0gcHJlZml4XG4gICAqIEBwYXJhbSB7KGJ5dGVzOlVpbnQ4QXJyYXkpID0+IHN0cmluZ30gYmFzZUVuY29kZVxuICAgKiBAcGFyYW0geyh0ZXh0OnN0cmluZykgPT4gVWludDhBcnJheX0gYmFzZURlY29kZVxuICAgKi9cbiAgY29uc3RydWN0b3IgKG5hbWUsIHByZWZpeCwgYmFzZUVuY29kZSwgYmFzZURlY29kZSkge1xuICAgIHRoaXMubmFtZSA9IG5hbWVcbiAgICB0aGlzLnByZWZpeCA9IHByZWZpeFxuICAgIHRoaXMuYmFzZUVuY29kZSA9IGJhc2VFbmNvZGVcbiAgICB0aGlzLmJhc2VEZWNvZGUgPSBiYXNlRGVjb2RlXG4gICAgdGhpcy5lbmNvZGVyID0gbmV3IEVuY29kZXIobmFtZSwgcHJlZml4LCBiYXNlRW5jb2RlKVxuICAgIHRoaXMuZGVjb2RlciA9IG5ldyBEZWNvZGVyKG5hbWUsIHByZWZpeCwgYmFzZURlY29kZSlcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGlucHV0XG4gICAqL1xuICBlbmNvZGUgKGlucHV0KSB7XG4gICAgcmV0dXJuIHRoaXMuZW5jb2Rlci5lbmNvZGUoaW5wdXQpXG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtzdHJpbmd9IGlucHV0XG4gICAqL1xuICBkZWNvZGUgKGlucHV0KSB7XG4gICAgcmV0dXJuIHRoaXMuZGVjb2Rlci5kZWNvZGUoaW5wdXQpXG4gIH1cbn1cblxuLyoqXG4gKiBAdGVtcGxhdGUge3N0cmluZ30gQmFzZVxuICogQHRlbXBsYXRlIHtzdHJpbmd9IFByZWZpeFxuICogQHBhcmFtIHtvYmplY3R9IG9wdGlvbnNcbiAqIEBwYXJhbSB7QmFzZX0gb3B0aW9ucy5uYW1lXG4gKiBAcGFyYW0ge1ByZWZpeH0gb3B0aW9ucy5wcmVmaXhcbiAqIEBwYXJhbSB7KGJ5dGVzOlVpbnQ4QXJyYXkpID0+IHN0cmluZ30gb3B0aW9ucy5lbmNvZGVcbiAqIEBwYXJhbSB7KGlucHV0OnN0cmluZykgPT4gVWludDhBcnJheX0gb3B0aW9ucy5kZWNvZGVcbiAqIEByZXR1cm5zIHtDb2RlYzxCYXNlLCBQcmVmaXg+fVxuICovXG5leHBvcnQgY29uc3QgZnJvbSA9ICh7IG5hbWUsIHByZWZpeCwgZW5jb2RlLCBkZWNvZGUgfSkgPT5cbiAgbmV3IENvZGVjKG5hbWUsIHByZWZpeCwgZW5jb2RlLCBkZWNvZGUpXG5cbi8qKlxuICogQHRlbXBsYXRlIHtzdHJpbmd9IEJhc2VcbiAqIEB0ZW1wbGF0ZSB7c3RyaW5nfSBQcmVmaXhcbiAqIEBwYXJhbSB7b2JqZWN0fSBvcHRpb25zXG4gKiBAcGFyYW0ge0Jhc2V9IG9wdGlvbnMubmFtZVxuICogQHBhcmFtIHtQcmVmaXh9IG9wdGlvbnMucHJlZml4XG4gKiBAcGFyYW0ge3N0cmluZ30gb3B0aW9ucy5hbHBoYWJldFxuICogQHJldHVybnMge0NvZGVjPEJhc2UsIFByZWZpeD59XG4gKi9cbmV4cG9ydCBjb25zdCBiYXNlWCA9ICh7IHByZWZpeCwgbmFtZSwgYWxwaGFiZXQgfSkgPT4ge1xuICBjb25zdCB7IGVuY29kZSwgZGVjb2RlIH0gPSBiYXNleChhbHBoYWJldCwgbmFtZSlcbiAgcmV0dXJuIGZyb20oe1xuICAgIHByZWZpeCxcbiAgICBuYW1lLFxuICAgIGVuY29kZSxcbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gdGV4dFxuICAgICAqL1xuICAgIGRlY29kZTogdGV4dCA9PiBjb2VyY2UoZGVjb2RlKHRleHQpKVxuICB9KVxufVxuXG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nfSBzdHJpbmdcbiAqIEBwYXJhbSB7c3RyaW5nfSBhbHBoYWJldFxuICogQHBhcmFtIHtudW1iZXJ9IGJpdHNQZXJDaGFyXG4gKiBAcGFyYW0ge3N0cmluZ30gbmFtZVxuICogQHJldHVybnMge1VpbnQ4QXJyYXl9XG4gKi9cbmNvbnN0IGRlY29kZSA9IChzdHJpbmcsIGFscGhhYmV0LCBiaXRzUGVyQ2hhciwgbmFtZSkgPT4ge1xuICAvLyBCdWlsZCB0aGUgY2hhcmFjdGVyIGxvb2t1cCB0YWJsZTpcbiAgLyoqIEB0eXBlIHtSZWNvcmQ8c3RyaW5nLCBudW1iZXI+fSAqL1xuICBjb25zdCBjb2RlcyA9IHt9XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgYWxwaGFiZXQubGVuZ3RoOyArK2kpIHtcbiAgICBjb2Rlc1thbHBoYWJldFtpXV0gPSBpXG4gIH1cblxuICAvLyBDb3VudCB0aGUgcGFkZGluZyBieXRlczpcbiAgbGV0IGVuZCA9IHN0cmluZy5sZW5ndGhcbiAgd2hpbGUgKHN0cmluZ1tlbmQgLSAxXSA9PT0gJz0nKSB7XG4gICAgLS1lbmRcbiAgfVxuXG4gIC8vIEFsbG9jYXRlIHRoZSBvdXRwdXQ6XG4gIGNvbnN0IG91dCA9IG5ldyBVaW50OEFycmF5KChlbmQgKiBiaXRzUGVyQ2hhciAvIDgpIHwgMClcblxuICAvLyBQYXJzZSB0aGUgZGF0YTpcbiAgbGV0IGJpdHMgPSAwIC8vIE51bWJlciBvZiBiaXRzIGN1cnJlbnRseSBpbiB0aGUgYnVmZmVyXG4gIGxldCBidWZmZXIgPSAwIC8vIEJpdHMgd2FpdGluZyB0byBiZSB3cml0dGVuIG91dCwgTVNCIGZpcnN0XG4gIGxldCB3cml0dGVuID0gMCAvLyBOZXh0IGJ5dGUgdG8gd3JpdGVcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBlbmQ7ICsraSkge1xuICAgIC8vIFJlYWQgb25lIGNoYXJhY3RlciBmcm9tIHRoZSBzdHJpbmc6XG4gICAgY29uc3QgdmFsdWUgPSBjb2Rlc1tzdHJpbmdbaV1dXG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRocm93IG5ldyBTeW50YXhFcnJvcihgTm9uLSR7bmFtZX0gY2hhcmFjdGVyYClcbiAgICB9XG5cbiAgICAvLyBBcHBlbmQgdGhlIGJpdHMgdG8gdGhlIGJ1ZmZlcjpcbiAgICBidWZmZXIgPSAoYnVmZmVyIDw8IGJpdHNQZXJDaGFyKSB8IHZhbHVlXG4gICAgYml0cyArPSBiaXRzUGVyQ2hhclxuXG4gICAgLy8gV3JpdGUgb3V0IHNvbWUgYml0cyBpZiB0aGUgYnVmZmVyIGhhcyBhIGJ5dGUncyB3b3J0aDpcbiAgICBpZiAoYml0cyA+PSA4KSB7XG4gICAgICBiaXRzIC09IDhcbiAgICAgIG91dFt3cml0dGVuKytdID0gMHhmZiAmIChidWZmZXIgPj4gYml0cylcbiAgICB9XG4gIH1cblxuICAvLyBWZXJpZnkgdGhhdCB3ZSBoYXZlIHJlY2VpdmVkIGp1c3QgZW5vdWdoIGJpdHM6XG4gIGlmIChiaXRzID49IGJpdHNQZXJDaGFyIHx8IDB4ZmYgJiAoYnVmZmVyIDw8ICg4IC0gYml0cykpKSB7XG4gICAgdGhyb3cgbmV3IFN5bnRheEVycm9yKCdVbmV4cGVjdGVkIGVuZCBvZiBkYXRhJylcbiAgfVxuXG4gIHJldHVybiBvdXRcbn1cblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRhdGFcbiAqIEBwYXJhbSB7c3RyaW5nfSBhbHBoYWJldFxuICogQHBhcmFtIHtudW1iZXJ9IGJpdHNQZXJDaGFyXG4gKiBAcmV0dXJucyB7c3RyaW5nfVxuICovXG5jb25zdCBlbmNvZGUgPSAoZGF0YSwgYWxwaGFiZXQsIGJpdHNQZXJDaGFyKSA9PiB7XG4gIGNvbnN0IHBhZCA9IGFscGhhYmV0W2FscGhhYmV0Lmxlbmd0aCAtIDFdID09PSAnPSdcbiAgY29uc3QgbWFzayA9ICgxIDw8IGJpdHNQZXJDaGFyKSAtIDFcbiAgbGV0IG91dCA9ICcnXG5cbiAgbGV0IGJpdHMgPSAwIC8vIE51bWJlciBvZiBiaXRzIGN1cnJlbnRseSBpbiB0aGUgYnVmZmVyXG4gIGxldCBidWZmZXIgPSAwIC8vIEJpdHMgd2FpdGluZyB0byBiZSB3cml0dGVuIG91dCwgTVNCIGZpcnN0XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgZGF0YS5sZW5ndGg7ICsraSkge1xuICAgIC8vIFNsdXJwIGRhdGEgaW50byB0aGUgYnVmZmVyOlxuICAgIGJ1ZmZlciA9IChidWZmZXIgPDwgOCkgfCBkYXRhW2ldXG4gICAgYml0cyArPSA4XG5cbiAgICAvLyBXcml0ZSBvdXQgYXMgbXVjaCBhcyB3ZSBjYW46XG4gICAgd2hpbGUgKGJpdHMgPiBiaXRzUGVyQ2hhcikge1xuICAgICAgYml0cyAtPSBiaXRzUGVyQ2hhclxuICAgICAgb3V0ICs9IGFscGhhYmV0W21hc2sgJiAoYnVmZmVyID4+IGJpdHMpXVxuICAgIH1cbiAgfVxuXG4gIC8vIFBhcnRpYWwgY2hhcmFjdGVyOlxuICBpZiAoYml0cykge1xuICAgIG91dCArPSBhbHBoYWJldFttYXNrICYgKGJ1ZmZlciA8PCAoYml0c1BlckNoYXIgLSBiaXRzKSldXG4gIH1cblxuICAvLyBBZGQgcGFkZGluZyBjaGFyYWN0ZXJzIHVudGlsIHdlIGhpdCBhIGJ5dGUgYm91bmRhcnk6XG4gIGlmIChwYWQpIHtcbiAgICB3aGlsZSAoKG91dC5sZW5ndGggKiBiaXRzUGVyQ2hhcikgJiA3KSB7XG4gICAgICBvdXQgKz0gJz0nXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG91dFxufVxuXG4vKipcbiAqIFJGQzQ2NDggRmFjdG9yeVxuICpcbiAqIEB0ZW1wbGF0ZSB7c3RyaW5nfSBCYXNlXG4gKiBAdGVtcGxhdGUge3N0cmluZ30gUHJlZml4XG4gKiBAcGFyYW0ge29iamVjdH0gb3B0aW9uc1xuICogQHBhcmFtIHtCYXNlfSBvcHRpb25zLm5hbWVcbiAqIEBwYXJhbSB7UHJlZml4fSBvcHRpb25zLnByZWZpeFxuICogQHBhcmFtIHtzdHJpbmd9IG9wdGlvbnMuYWxwaGFiZXRcbiAqIEBwYXJhbSB7bnVtYmVyfSBvcHRpb25zLmJpdHNQZXJDaGFyXG4gKi9cbmV4cG9ydCBjb25zdCByZmM0NjQ4ID0gKHsgbmFtZSwgcHJlZml4LCBiaXRzUGVyQ2hhciwgYWxwaGFiZXQgfSkgPT4ge1xuICByZXR1cm4gZnJvbSh7XG4gICAgcHJlZml4LFxuICAgIG5hbWUsXG4gICAgZW5jb2RlIChpbnB1dCkge1xuICAgICAgcmV0dXJuIGVuY29kZShpbnB1dCwgYWxwaGFiZXQsIGJpdHNQZXJDaGFyKVxuICAgIH0sXG4gICAgZGVjb2RlIChpbnB1dCkge1xuICAgICAgcmV0dXJuIGRlY29kZShpbnB1dCwgYWxwaGFiZXQsIGJpdHNQZXJDaGFyLCBuYW1lKVxuICAgIH1cbiAgfSlcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base10.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base10.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base10: () => (/* binding */ base10)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base.js\");\n\n\nconst base10 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n  prefix: '9',\n  name: 'base10',\n  alphabet: '0123456789'\n})\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL3NyYy9iYXNlcy9iYXNlMTAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBaUM7O0FBRTFCLGVBQWUsK0NBQUs7QUFDM0I7QUFDQTtBQUNBO0FBQ0EsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0BzZS0yL25leHRqcy8uL25vZGVfbW9kdWxlcy9pcGZzLWNvcmUtdXRpbHMvbm9kZV9tb2R1bGVzL3VpbnQ4YXJyYXlzL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvc3JjL2Jhc2VzL2Jhc2UxMC5qcz9iNmM5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJhc2VYIH0gZnJvbSAnLi9iYXNlLmpzJ1xuXG5leHBvcnQgY29uc3QgYmFzZTEwID0gYmFzZVgoe1xuICBwcmVmaXg6ICc5JyxcbiAgbmFtZTogJ2Jhc2UxMCcsXG4gIGFscGhhYmV0OiAnMDEyMzQ1Njc4OSdcbn0pXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base10.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base16.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base16.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base16: () => (/* binding */ base16),\n/* harmony export */   base16upper: () => (/* binding */ base16upper)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base.js\");\n// @ts-check\n\n\n\nconst base16 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n  prefix: 'f',\n  name: 'base16',\n  alphabet: '0123456789abcdef',\n  bitsPerChar: 4\n})\n\nconst base16upper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n  prefix: 'F',\n  name: 'base16upper',\n  alphabet: '0123456789ABCDEF',\n  bitsPerChar: 4\n})\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL3NyYy9iYXNlcy9iYXNlMTYuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7O0FBRW1DOztBQUU1QixlQUFlLGlEQUFPO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFTSxvQkFBb0IsaURBQU87QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNlLTIvbmV4dGpzLy4vbm9kZV9tb2R1bGVzL2lwZnMtY29yZS11dGlscy9ub2RlX21vZHVsZXMvdWludDhhcnJheXMvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9zcmMvYmFzZXMvYmFzZTE2LmpzPzA2ZDYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLWNoZWNrXG5cbmltcG9ydCB7IHJmYzQ2NDggfSBmcm9tICcuL2Jhc2UuanMnXG5cbmV4cG9ydCBjb25zdCBiYXNlMTYgPSByZmM0NjQ4KHtcbiAgcHJlZml4OiAnZicsXG4gIG5hbWU6ICdiYXNlMTYnLFxuICBhbHBoYWJldDogJzAxMjM0NTY3ODlhYmNkZWYnLFxuICBiaXRzUGVyQ2hhcjogNFxufSlcblxuZXhwb3J0IGNvbnN0IGJhc2UxNnVwcGVyID0gcmZjNDY0OCh7XG4gIHByZWZpeDogJ0YnLFxuICBuYW1lOiAnYmFzZTE2dXBwZXInLFxuICBhbHBoYWJldDogJzAxMjM0NTY3ODlBQkNERUYnLFxuICBiaXRzUGVyQ2hhcjogNFxufSlcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base16.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base2.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base2.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base2: () => (/* binding */ base2)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base.js\");\n// @ts-check\n\n\n\nconst base2 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n  prefix: '0',\n  name: 'base2',\n  alphabet: '01',\n  bitsPerChar: 1\n})\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL3NyYy9iYXNlcy9iYXNlMi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBOztBQUVtQzs7QUFFNUIsY0FBYyxpREFBTztBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2UtMi9uZXh0anMvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL3NyYy9iYXNlcy9iYXNlMi5qcz9mODZhIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1jaGVja1xuXG5pbXBvcnQgeyByZmM0NjQ4IH0gZnJvbSAnLi9iYXNlLmpzJ1xuXG5leHBvcnQgY29uc3QgYmFzZTIgPSByZmM0NjQ4KHtcbiAgcHJlZml4OiAnMCcsXG4gIG5hbWU6ICdiYXNlMicsXG4gIGFscGhhYmV0OiAnMDEnLFxuICBiaXRzUGVyQ2hhcjogMVxufSlcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base2.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base256emoji.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base256emoji.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base256emoji: () => (/* binding */ base256emoji)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base.js\");\n\n\nconst alphabet = Array.from('🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂')\nconst alphabetBytesToChars = /** @type {string[]} */ (alphabet.reduce((p, c, i) => { p[i] = c; return p }, /** @type {string[]} */([])))\nconst alphabetCharsToBytes = /** @type {number[]} */ (alphabet.reduce((p, c, i) => { p[/** @type {number} */ (c.codePointAt(0))] = i; return p }, /** @type {number[]} */([])))\n\n/**\n * @param {Uint8Array} data\n * @returns {string}\n */\nfunction encode (data) {\n  return data.reduce((p, c) => {\n    p += alphabetBytesToChars[c]\n    return p\n  }, '')\n}\n\n/**\n * @param {string} str\n * @returns {Uint8Array}\n */\nfunction decode (str) {\n  const byts = []\n  for (const char of str) {\n    const byt = alphabetCharsToBytes[/** @type {number} */ (char.codePointAt(0))]\n    if (byt === undefined) {\n      throw new Error(`Non-base256emoji character: ${char}`)\n    }\n    byts.push(byt)\n  }\n  return new Uint8Array(byts)\n}\n\nconst base256emoji = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.from)({\n  prefix: '🚀',\n  name: 'base256emoji',\n  encode,\n  decode\n})\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL3NyYy9iYXNlcy9iYXNlMjU2ZW1vamkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBZ0M7O0FBRWhDO0FBQ0Esd0NBQXdDLFVBQVUsbUNBQW1DLFVBQVUsVUFBVSxhQUFhLFVBQVU7QUFDaEksd0NBQXdDLFVBQVUsbUNBQW1DLGFBQWEsUUFBUSw0QkFBNEIsVUFBVSxhQUFhLFVBQVU7O0FBRXZLO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdEQUFnRCxRQUFRO0FBQ3hEO0FBQ0EscURBQXFELEtBQUs7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFTyxxQkFBcUIsOENBQUk7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNlLTIvbmV4dGpzLy4vbm9kZV9tb2R1bGVzL2lwZnMtY29yZS11dGlscy9ub2RlX21vZHVsZXMvdWludDhhcnJheXMvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9zcmMvYmFzZXMvYmFzZTI1NmVtb2ppLmpzPzdjYzAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZnJvbSB9IGZyb20gJy4vYmFzZS5qcydcblxuY29uc3QgYWxwaGFiZXQgPSBBcnJheS5mcm9tKCfwn5qA8J+qkOKYhPCfm7Dwn4yM8J+MkfCfjJLwn4yT8J+MlPCfjJXwn4yW8J+Ml/CfjJjwn4yN8J+Mj/CfjI7wn5CJ4piA8J+Su/CflqXwn5K+8J+Sv/CfmILinaTwn5iN8J+ko/CfmIrwn5mP8J+SlfCfmK3wn5iY8J+RjfCfmIXwn5GP8J+YgfCflKXwn6Ww8J+SlPCfkpbwn5KZ8J+YovCfpJTwn5iG8J+ZhPCfkqrwn5iJ4pi68J+RjPCfpJfwn5Kc8J+YlPCfmI7wn5iH8J+MufCfpKbwn46J8J+SnuKcjOKcqPCfpLfwn5ix8J+YjPCfjLjwn5mM8J+Yi/Cfkpfwn5Ka8J+Yj/Cfkpvwn5mC8J+Sk/CfpKnwn5iE8J+YgPCflqTwn5iD8J+Sr/CfmYjwn5GH8J+OtvCfmJLwn6St4p2j8J+YnPCfkovwn5GA8J+YqvCfmJHwn5Kl8J+Zi/CfmJ7wn5ip8J+YofCfpKrwn5GK8J+ls/CfmKXwn6Sk8J+RifCfkoPwn5iz4pyL8J+YmvCfmJ3wn5i08J+Mn/CfmKzwn5mD8J+NgPCfjLfwn5i78J+Yk+KtkOKchfCfpbrwn4yI8J+YiPCfpJjwn5Km4pyU8J+Yo/Cfj4Pwn5KQ4pi58J+OivCfkpjwn5ig4pid8J+YlfCfjLrwn46C8J+Mu/CfmJDwn5aV8J+SnfCfmYrwn5i58J+Xo/Cfkqvwn5KA8J+RkfCfjrXwn6Se8J+Ym/CflLTwn5ik8J+MvPCfmKvimr3wn6SZ4piV8J+PhvCfpKvwn5GI8J+YrvCfmYbwn4278J+Ng/CfkLbwn5KB8J+YsvCfjL/wn6eh8J+OgeKaofCfjJ7wn46I4p2M4pyK8J+Ri/CfmLDwn6So8J+YtvCfpJ3wn5q28J+SsPCfjZPwn5Ki8J+kn/CfmYHwn5qo8J+SqPCfpKzinIjwn46A8J+NuvCfpJPwn5iZ8J+Sn/CfjLHwn5iW8J+RtvCfpbTilrbinqHinZPwn5KO8J+SuOKsh/CfmKjwn4ya8J+mi/CfmLfwn5W64pqg8J+ZhfCfmJ/wn5i18J+RjvCfpLLwn6Sg8J+kp/Cfk4zwn5S18J+ShfCfp5Dwn5C+8J+NkvCfmJfwn6SR8J+MivCfpK/wn5C34piO8J+Sp/CfmK/wn5KG8J+RhvCfjqTwn5mH8J+NkeKdhPCfjLTwn5Kj8J+QuPCfkozwn5ON8J+lgPCfpKLwn5GF8J+SofCfkqnwn5GQ8J+TuPCfkbvwn6SQ8J+krvCfjrzwn6W18J+aqfCfjY7wn42K8J+RvPCfko3wn5Oj8J+lgicpXG5jb25zdCBhbHBoYWJldEJ5dGVzVG9DaGFycyA9IC8qKiBAdHlwZSB7c3RyaW5nW119ICovIChhbHBoYWJldC5yZWR1Y2UoKHAsIGMsIGkpID0+IHsgcFtpXSA9IGM7IHJldHVybiBwIH0sIC8qKiBAdHlwZSB7c3RyaW5nW119ICovKFtdKSkpXG5jb25zdCBhbHBoYWJldENoYXJzVG9CeXRlcyA9IC8qKiBAdHlwZSB7bnVtYmVyW119ICovIChhbHBoYWJldC5yZWR1Y2UoKHAsIGMsIGkpID0+IHsgcFsvKiogQHR5cGUge251bWJlcn0gKi8gKGMuY29kZVBvaW50QXQoMCkpXSA9IGk7IHJldHVybiBwIH0sIC8qKiBAdHlwZSB7bnVtYmVyW119ICovKFtdKSkpXG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcmV0dXJucyB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlbmNvZGUgKGRhdGEpIHtcbiAgcmV0dXJuIGRhdGEucmVkdWNlKChwLCBjKSA9PiB7XG4gICAgcCArPSBhbHBoYWJldEJ5dGVzVG9DaGFyc1tjXVxuICAgIHJldHVybiBwXG4gIH0sICcnKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nfSBzdHJcbiAqIEByZXR1cm5zIHtVaW50OEFycmF5fVxuICovXG5mdW5jdGlvbiBkZWNvZGUgKHN0cikge1xuICBjb25zdCBieXRzID0gW11cbiAgZm9yIChjb25zdCBjaGFyIG9mIHN0cikge1xuICAgIGNvbnN0IGJ5dCA9IGFscGhhYmV0Q2hhcnNUb0J5dGVzWy8qKiBAdHlwZSB7bnVtYmVyfSAqLyAoY2hhci5jb2RlUG9pbnRBdCgwKSldXG4gICAgaWYgKGJ5dCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYE5vbi1iYXNlMjU2ZW1vamkgY2hhcmFjdGVyOiAke2NoYXJ9YClcbiAgICB9XG4gICAgYnl0cy5wdXNoKGJ5dClcbiAgfVxuICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoYnl0cylcbn1cblxuZXhwb3J0IGNvbnN0IGJhc2UyNTZlbW9qaSA9IGZyb20oe1xuICBwcmVmaXg6ICfwn5qAJyxcbiAgbmFtZTogJ2Jhc2UyNTZlbW9qaScsXG4gIGVuY29kZSxcbiAgZGVjb2RlXG59KVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base256emoji.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base32.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base32.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base32: () => (/* binding */ base32),\n/* harmony export */   base32hex: () => (/* binding */ base32hex),\n/* harmony export */   base32hexpad: () => (/* binding */ base32hexpad),\n/* harmony export */   base32hexpadupper: () => (/* binding */ base32hexpadupper),\n/* harmony export */   base32hexupper: () => (/* binding */ base32hexupper),\n/* harmony export */   base32pad: () => (/* binding */ base32pad),\n/* harmony export */   base32padupper: () => (/* binding */ base32padupper),\n/* harmony export */   base32upper: () => (/* binding */ base32upper),\n/* harmony export */   base32z: () => (/* binding */ base32z)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base.js\");\n\n\nconst base32 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n})\n\nconst base32upper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n})\n\nconst base32pad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n})\n\nconst base32padupper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n})\n\nconst base32hex = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n})\n\nconst base32hexupper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n})\n\nconst base32hexpad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n})\n\nconst base32hexpadupper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n})\n\nconst base32z = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n})\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL3NyYy9iYXNlcy9iYXNlMzIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFtQzs7QUFFNUIsZUFBZSxpREFBTztBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRU0sb0JBQW9CLGlEQUFPO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFTSxrQkFBa0IsaURBQU87QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVNLHVCQUF1QixpREFBTztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRU0sa0JBQWtCLGlEQUFPO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFTSx1QkFBdUIsaURBQU87QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVNLHFCQUFxQixpREFBTztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRU0sMEJBQTBCLGlEQUFPO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFTSxnQkFBZ0IsaURBQU87QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNlLTIvbmV4dGpzLy4vbm9kZV9tb2R1bGVzL2lwZnMtY29yZS11dGlscy9ub2RlX21vZHVsZXMvdWludDhhcnJheXMvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9zcmMvYmFzZXMvYmFzZTMyLmpzP2E4MGIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmZjNDY0OCB9IGZyb20gJy4vYmFzZS5qcydcblxuZXhwb3J0IGNvbnN0IGJhc2UzMiA9IHJmYzQ2NDgoe1xuICBwcmVmaXg6ICdiJyxcbiAgbmFtZTogJ2Jhc2UzMicsXG4gIGFscGhhYmV0OiAnYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXoyMzQ1NjcnLFxuICBiaXRzUGVyQ2hhcjogNVxufSlcblxuZXhwb3J0IGNvbnN0IGJhc2UzMnVwcGVyID0gcmZjNDY0OCh7XG4gIHByZWZpeDogJ0InLFxuICBuYW1lOiAnYmFzZTMydXBwZXInLFxuICBhbHBoYWJldDogJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaMjM0NTY3JyxcbiAgYml0c1BlckNoYXI6IDVcbn0pXG5cbmV4cG9ydCBjb25zdCBiYXNlMzJwYWQgPSByZmM0NjQ4KHtcbiAgcHJlZml4OiAnYycsXG4gIG5hbWU6ICdiYXNlMzJwYWQnLFxuICBhbHBoYWJldDogJ2FiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MjM0NTY3PScsXG4gIGJpdHNQZXJDaGFyOiA1XG59KVxuXG5leHBvcnQgY29uc3QgYmFzZTMycGFkdXBwZXIgPSByZmM0NjQ4KHtcbiAgcHJlZml4OiAnQycsXG4gIG5hbWU6ICdiYXNlMzJwYWR1cHBlcicsXG4gIGFscGhhYmV0OiAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVoyMzQ1Njc9JyxcbiAgYml0c1BlckNoYXI6IDVcbn0pXG5cbmV4cG9ydCBjb25zdCBiYXNlMzJoZXggPSByZmM0NjQ4KHtcbiAgcHJlZml4OiAndicsXG4gIG5hbWU6ICdiYXNlMzJoZXgnLFxuICBhbHBoYWJldDogJzAxMjM0NTY3ODlhYmNkZWZnaGlqa2xtbm9wcXJzdHV2JyxcbiAgYml0c1BlckNoYXI6IDVcbn0pXG5cbmV4cG9ydCBjb25zdCBiYXNlMzJoZXh1cHBlciA9IHJmYzQ2NDgoe1xuICBwcmVmaXg6ICdWJyxcbiAgbmFtZTogJ2Jhc2UzMmhleHVwcGVyJyxcbiAgYWxwaGFiZXQ6ICcwMTIzNDU2Nzg5QUJDREVGR0hJSktMTU5PUFFSU1RVVicsXG4gIGJpdHNQZXJDaGFyOiA1XG59KVxuXG5leHBvcnQgY29uc3QgYmFzZTMyaGV4cGFkID0gcmZjNDY0OCh7XG4gIHByZWZpeDogJ3QnLFxuICBuYW1lOiAnYmFzZTMyaGV4cGFkJyxcbiAgYWxwaGFiZXQ6ICcwMTIzNDU2Nzg5YWJjZGVmZ2hpamtsbW5vcHFyc3R1dj0nLFxuICBiaXRzUGVyQ2hhcjogNVxufSlcblxuZXhwb3J0IGNvbnN0IGJhc2UzMmhleHBhZHVwcGVyID0gcmZjNDY0OCh7XG4gIHByZWZpeDogJ1QnLFxuICBuYW1lOiAnYmFzZTMyaGV4cGFkdXBwZXInLFxuICBhbHBoYWJldDogJzAxMjM0NTY3ODlBQkNERUZHSElKS0xNTk9QUVJTVFVWPScsXG4gIGJpdHNQZXJDaGFyOiA1XG59KVxuXG5leHBvcnQgY29uc3QgYmFzZTMyeiA9IHJmYzQ2NDgoe1xuICBwcmVmaXg6ICdoJyxcbiAgbmFtZTogJ2Jhc2UzMnonLFxuICBhbHBoYWJldDogJ3libmRyZmc4ZWprbWNwcXhvdDF1d2lzemEzNDVoNzY5JyxcbiAgYml0c1BlckNoYXI6IDVcbn0pXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base32.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base36.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base36.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base36: () => (/* binding */ base36),\n/* harmony export */   base36upper: () => (/* binding */ base36upper)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base.js\");\n\n\nconst base36 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n  prefix: 'k',\n  name: 'base36',\n  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n})\n\nconst base36upper = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n  prefix: 'K',\n  name: 'base36upper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n})\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL3NyYy9iYXNlcy9iYXNlMzYuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWlDOztBQUUxQixlQUFlLCtDQUFLO0FBQzNCO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRU0sb0JBQW9CLCtDQUFLO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2UtMi9uZXh0anMvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL3NyYy9iYXNlcy9iYXNlMzYuanM/NzczMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBiYXNlWCB9IGZyb20gJy4vYmFzZS5qcydcblxuZXhwb3J0IGNvbnN0IGJhc2UzNiA9IGJhc2VYKHtcbiAgcHJlZml4OiAnaycsXG4gIG5hbWU6ICdiYXNlMzYnLFxuICBhbHBoYWJldDogJzAxMjM0NTY3ODlhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5eidcbn0pXG5cbmV4cG9ydCBjb25zdCBiYXNlMzZ1cHBlciA9IGJhc2VYKHtcbiAgcHJlZml4OiAnSycsXG4gIG5hbWU6ICdiYXNlMzZ1cHBlcicsXG4gIGFscGhhYmV0OiAnMDEyMzQ1Njc4OUFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaJ1xufSlcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base36.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base58.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base58.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base58btc: () => (/* binding */ base58btc),\n/* harmony export */   base58flickr: () => (/* binding */ base58flickr)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base.js\");\n\n\nconst base58btc = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n})\n\nconst base58flickr = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.baseX)({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n})\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL3NyYy9iYXNlcy9iYXNlNTguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWlDOztBQUUxQixrQkFBa0IsK0NBQUs7QUFDOUI7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFTSxxQkFBcUIsK0NBQUs7QUFDakM7QUFDQTtBQUNBO0FBQ0EsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0BzZS0yL25leHRqcy8uL25vZGVfbW9kdWxlcy9pcGZzLWNvcmUtdXRpbHMvbm9kZV9tb2R1bGVzL3VpbnQ4YXJyYXlzL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvc3JjL2Jhc2VzL2Jhc2U1OC5qcz9iM2Q2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJhc2VYIH0gZnJvbSAnLi9iYXNlLmpzJ1xuXG5leHBvcnQgY29uc3QgYmFzZTU4YnRjID0gYmFzZVgoe1xuICBuYW1lOiAnYmFzZTU4YnRjJyxcbiAgcHJlZml4OiAneicsXG4gIGFscGhhYmV0OiAnMTIzNDU2Nzg5QUJDREVGR0hKS0xNTlBRUlNUVVZXWFlaYWJjZGVmZ2hpamttbm9wcXJzdHV2d3h5eidcbn0pXG5cbmV4cG9ydCBjb25zdCBiYXNlNThmbGlja3IgPSBiYXNlWCh7XG4gIG5hbWU6ICdiYXNlNThmbGlja3InLFxuICBwcmVmaXg6ICdaJyxcbiAgYWxwaGFiZXQ6ICcxMjM0NTY3ODlhYmNkZWZnaGlqa21ub3BxcnN0dXZ3eHl6QUJDREVGR0hKS0xNTlBRUlNUVVZXWFlaJ1xufSlcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base58.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base64.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base64.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base64: () => (/* binding */ base64),\n/* harmony export */   base64pad: () => (/* binding */ base64pad),\n/* harmony export */   base64url: () => (/* binding */ base64url),\n/* harmony export */   base64urlpad: () => (/* binding */ base64urlpad)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base.js\");\n// @ts-check\n\n\n\nconst base64 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n})\n\nconst base64pad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n})\n\nconst base64url = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n})\n\nconst base64urlpad = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n})\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL3NyYy9iYXNlcy9iYXNlNjQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7QUFFbUM7O0FBRTVCLGVBQWUsaURBQU87QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVNLGtCQUFrQixpREFBTztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRU0sa0JBQWtCLGlEQUFPO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFTSxxQkFBcUIsaURBQU87QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNlLTIvbmV4dGpzLy4vbm9kZV9tb2R1bGVzL2lwZnMtY29yZS11dGlscy9ub2RlX21vZHVsZXMvdWludDhhcnJheXMvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9zcmMvYmFzZXMvYmFzZTY0LmpzP2QyZGIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLWNoZWNrXG5cbmltcG9ydCB7IHJmYzQ2NDggfSBmcm9tICcuL2Jhc2UuanMnXG5cbmV4cG9ydCBjb25zdCBiYXNlNjQgPSByZmM0NjQ4KHtcbiAgcHJlZml4OiAnbScsXG4gIG5hbWU6ICdiYXNlNjQnLFxuICBhbHBoYWJldDogJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky8nLFxuICBiaXRzUGVyQ2hhcjogNlxufSlcblxuZXhwb3J0IGNvbnN0IGJhc2U2NHBhZCA9IHJmYzQ2NDgoe1xuICBwcmVmaXg6ICdNJyxcbiAgbmFtZTogJ2Jhc2U2NHBhZCcsXG4gIGFscGhhYmV0OiAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODkrLz0nLFxuICBiaXRzUGVyQ2hhcjogNlxufSlcblxuZXhwb3J0IGNvbnN0IGJhc2U2NHVybCA9IHJmYzQ2NDgoe1xuICBwcmVmaXg6ICd1JyxcbiAgbmFtZTogJ2Jhc2U2NHVybCcsXG4gIGFscGhhYmV0OiAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODktXycsXG4gIGJpdHNQZXJDaGFyOiA2XG59KVxuXG5leHBvcnQgY29uc3QgYmFzZTY0dXJscGFkID0gcmZjNDY0OCh7XG4gIHByZWZpeDogJ1UnLFxuICBuYW1lOiAnYmFzZTY0dXJscGFkJyxcbiAgYWxwaGFiZXQ6ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OS1fPScsXG4gIGJpdHNQZXJDaGFyOiA2XG59KVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base64.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base8.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base8.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base8: () => (/* binding */ base8)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base.js\");\n// @ts-check\n\n\n\nconst base8 = (0,_base_js__WEBPACK_IMPORTED_MODULE_0__.rfc4648)({\n  prefix: '7',\n  name: 'base8',\n  alphabet: '01234567',\n  bitsPerChar: 3\n})\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL3NyYy9iYXNlcy9iYXNlOC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBOztBQUVtQzs7QUFFNUIsY0FBYyxpREFBTztBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2UtMi9uZXh0anMvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL3NyYy9iYXNlcy9iYXNlOC5qcz82NWVmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1jaGVja1xuXG5pbXBvcnQgeyByZmM0NjQ4IH0gZnJvbSAnLi9iYXNlLmpzJ1xuXG5leHBvcnQgY29uc3QgYmFzZTggPSByZmM0NjQ4KHtcbiAgcHJlZml4OiAnNycsXG4gIG5hbWU6ICdiYXNlOCcsXG4gIGFscGhhYmV0OiAnMDEyMzQ1NjcnLFxuICBiaXRzUGVyQ2hhcjogM1xufSlcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base8.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/identity.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/identity.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   identity: () => (/* binding */ identity)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bytes.js\");\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base.js\");\n// @ts-check\n\n\n\n\nconst identity = (0,_base_js__WEBPACK_IMPORTED_MODULE_1__.from)({\n  prefix: '\\x00',\n  name: 'identity',\n  encode: (buf) => (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.toString)(buf),\n  decode: (str) => (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.fromString)(str)\n})\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL3NyYy9iYXNlcy9pZGVudGl0eS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7QUFFa0Q7QUFDbEI7O0FBRXpCLGlCQUFpQiw4Q0FBSTtBQUM1QjtBQUNBO0FBQ0EsbUJBQW1CLG1EQUFRO0FBQzNCLG1CQUFtQixxREFBVTtBQUM3QixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNlLTIvbmV4dGpzLy4vbm9kZV9tb2R1bGVzL2lwZnMtY29yZS11dGlscy9ub2RlX21vZHVsZXMvdWludDhhcnJheXMvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9zcmMvYmFzZXMvaWRlbnRpdHkuanM/NTAzMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtY2hlY2tcblxuaW1wb3J0IHsgZnJvbVN0cmluZywgdG9TdHJpbmcgfSBmcm9tICcuLi9ieXRlcy5qcydcbmltcG9ydCB7IGZyb20gfSBmcm9tICcuL2Jhc2UuanMnXG5cbmV4cG9ydCBjb25zdCBpZGVudGl0eSA9IGZyb20oe1xuICBwcmVmaXg6ICdcXHgwMCcsXG4gIG5hbWU6ICdpZGVudGl0eScsXG4gIGVuY29kZTogKGJ1ZikgPT4gdG9TdHJpbmcoYnVmKSxcbiAgZGVjb2RlOiAoc3RyKSA9PiBmcm9tU3RyaW5nKHN0cilcbn0pXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/identity.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/interface.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/interface.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// this is dummy module overlayed by interface.ts\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL3NyYy9iYXNlcy9pbnRlcmZhY2UuanMiLCJtYXBwaW5ncyI6IjtBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNlLTIvbmV4dGpzLy4vbm9kZV9tb2R1bGVzL2lwZnMtY29yZS11dGlscy9ub2RlX21vZHVsZXMvdWludDhhcnJheXMvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9zcmMvYmFzZXMvaW50ZXJmYWNlLmpzP2Q0N2QiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gdGhpcyBpcyBkdW1teSBtb2R1bGUgb3ZlcmxheWVkIGJ5IGludGVyZmFjZS50c1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/interface.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/basics.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/basics.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CID: () => (/* reexport safe */ _index_js__WEBPACK_IMPORTED_MODULE_14__.CID),\n/* harmony export */   bases: () => (/* binding */ bases),\n/* harmony export */   bytes: () => (/* reexport safe */ _index_js__WEBPACK_IMPORTED_MODULE_14__.bytes),\n/* harmony export */   codecs: () => (/* binding */ codecs),\n/* harmony export */   digest: () => (/* reexport safe */ _index_js__WEBPACK_IMPORTED_MODULE_14__.digest),\n/* harmony export */   hasher: () => (/* reexport safe */ _index_js__WEBPACK_IMPORTED_MODULE_14__.hasher),\n/* harmony export */   hashes: () => (/* binding */ hashes),\n/* harmony export */   varint: () => (/* reexport safe */ _index_js__WEBPACK_IMPORTED_MODULE_14__.varint)\n/* harmony export */ });\n/* harmony import */ var _bases_base10_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bases/base10.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base10.js\");\n/* harmony import */ var _bases_base16_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bases/base16.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base16.js\");\n/* harmony import */ var _bases_base2_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bases/base2.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base2.js\");\n/* harmony import */ var _bases_base256emoji_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bases/base256emoji.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base256emoji.js\");\n/* harmony import */ var _bases_base32_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./bases/base32.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base32.js\");\n/* harmony import */ var _bases_base36_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./bases/base36.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base36.js\");\n/* harmony import */ var _bases_base58_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./bases/base58.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base58.js\");\n/* harmony import */ var _bases_base64_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./bases/base64.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base64.js\");\n/* harmony import */ var _bases_base8_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./bases/base8.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base8.js\");\n/* harmony import */ var _bases_identity_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./bases/identity.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/identity.js\");\n/* harmony import */ var _codecs_json_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./codecs/json.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/codecs/json.js\");\n/* harmony import */ var _codecs_raw_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./codecs/raw.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/codecs/raw.js\");\n/* harmony import */ var _hashes_identity_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./hashes/identity.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/hashes/identity.js\");\n/* harmony import */ var _hashes_sha2_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./hashes/sha2.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/hashes/sha2.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./index.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/index.js\");\n// @ts-check\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst bases = { ..._bases_identity_js__WEBPACK_IMPORTED_MODULE_9__, ..._bases_base2_js__WEBPACK_IMPORTED_MODULE_2__, ..._bases_base8_js__WEBPACK_IMPORTED_MODULE_8__, ..._bases_base10_js__WEBPACK_IMPORTED_MODULE_0__, ..._bases_base16_js__WEBPACK_IMPORTED_MODULE_1__, ..._bases_base32_js__WEBPACK_IMPORTED_MODULE_4__, ..._bases_base36_js__WEBPACK_IMPORTED_MODULE_5__, ..._bases_base58_js__WEBPACK_IMPORTED_MODULE_6__, ..._bases_base64_js__WEBPACK_IMPORTED_MODULE_7__, ..._bases_base256emoji_js__WEBPACK_IMPORTED_MODULE_3__ }\nconst hashes = { ..._hashes_sha2_js__WEBPACK_IMPORTED_MODULE_13__, ..._hashes_identity_js__WEBPACK_IMPORTED_MODULE_12__ }\nconst codecs = { raw: _codecs_raw_js__WEBPACK_IMPORTED_MODULE_11__, json: _codecs_json_js__WEBPACK_IMPORTED_MODULE_10__ }\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL3NyYy9iYXNpY3MuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFFMkM7QUFDQTtBQUNGO0FBQ2M7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNGO0FBQ1U7QUFDWDtBQUNGO0FBQ1U7QUFDUjtBQUN1Qjs7QUFFL0QsZ0JBQWdCLEdBQUcsK0NBQVksS0FBSyw0Q0FBSyxLQUFLLDRDQUFLLEtBQUssNkNBQU0sS0FBSyw2Q0FBTSxLQUFLLDZDQUFNLEtBQUssNkNBQU0sS0FBSyw2Q0FBTSxLQUFLLDZDQUFNLEtBQUssbURBQVk7QUFDdEksaUJBQWlCLEdBQUcsNkNBQUksS0FBSyxpREFBUTtBQUNyQyxpQkFBaUIsR0FBRyxvREFBTTs7QUFFMEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2UtMi9uZXh0anMvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL3NyYy9iYXNpY3MuanM/MzE2MCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtY2hlY2tcblxuaW1wb3J0ICogYXMgYmFzZTEwIGZyb20gJy4vYmFzZXMvYmFzZTEwLmpzJ1xuaW1wb3J0ICogYXMgYmFzZTE2IGZyb20gJy4vYmFzZXMvYmFzZTE2LmpzJ1xuaW1wb3J0ICogYXMgYmFzZTIgZnJvbSAnLi9iYXNlcy9iYXNlMi5qcydcbmltcG9ydCAqIGFzIGJhc2UyNTZlbW9qaSBmcm9tICcuL2Jhc2VzL2Jhc2UyNTZlbW9qaS5qcydcbmltcG9ydCAqIGFzIGJhc2UzMiBmcm9tICcuL2Jhc2VzL2Jhc2UzMi5qcydcbmltcG9ydCAqIGFzIGJhc2UzNiBmcm9tICcuL2Jhc2VzL2Jhc2UzNi5qcydcbmltcG9ydCAqIGFzIGJhc2U1OCBmcm9tICcuL2Jhc2VzL2Jhc2U1OC5qcydcbmltcG9ydCAqIGFzIGJhc2U2NCBmcm9tICcuL2Jhc2VzL2Jhc2U2NC5qcydcbmltcG9ydCAqIGFzIGJhc2U4IGZyb20gJy4vYmFzZXMvYmFzZTguanMnXG5pbXBvcnQgKiBhcyBpZGVudGl0eUJhc2UgZnJvbSAnLi9iYXNlcy9pZGVudGl0eS5qcydcbmltcG9ydCAqIGFzIGpzb24gZnJvbSAnLi9jb2RlY3MvanNvbi5qcydcbmltcG9ydCAqIGFzIHJhdyBmcm9tICcuL2NvZGVjcy9yYXcuanMnXG5pbXBvcnQgKiBhcyBpZGVudGl0eSBmcm9tICcuL2hhc2hlcy9pZGVudGl0eS5qcydcbmltcG9ydCAqIGFzIHNoYTIgZnJvbSAnLi9oYXNoZXMvc2hhMi5qcydcbmltcG9ydCB7IENJRCwgaGFzaGVyLCBkaWdlc3QsIHZhcmludCwgYnl0ZXMgfSBmcm9tICcuL2luZGV4LmpzJ1xuXG5jb25zdCBiYXNlcyA9IHsgLi4uaWRlbnRpdHlCYXNlLCAuLi5iYXNlMiwgLi4uYmFzZTgsIC4uLmJhc2UxMCwgLi4uYmFzZTE2LCAuLi5iYXNlMzIsIC4uLmJhc2UzNiwgLi4uYmFzZTU4LCAuLi5iYXNlNjQsIC4uLmJhc2UyNTZlbW9qaSB9XG5jb25zdCBoYXNoZXMgPSB7IC4uLnNoYTIsIC4uLmlkZW50aXR5IH1cbmNvbnN0IGNvZGVjcyA9IHsgcmF3LCBqc29uIH1cblxuZXhwb3J0IHsgQ0lELCBoYXNoZXIsIGRpZ2VzdCwgdmFyaW50LCBieXRlcywgaGFzaGVzLCBiYXNlcywgY29kZWNzIH1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/basics.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bytes.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bytes.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   coerce: () => (/* binding */ coerce),\n/* harmony export */   empty: () => (/* binding */ empty),\n/* harmony export */   equals: () => (/* binding */ equals),\n/* harmony export */   fromHex: () => (/* binding */ fromHex),\n/* harmony export */   fromString: () => (/* binding */ fromString),\n/* harmony export */   isBinary: () => (/* binding */ isBinary),\n/* harmony export */   toHex: () => (/* binding */ toHex),\n/* harmony export */   toString: () => (/* binding */ toString)\n/* harmony export */ });\nconst empty = new Uint8Array(0)\n\n/**\n * @param {Uint8Array} d\n */\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '')\n\n/**\n * @param {string} hex\n */\nconst fromHex = hex => {\n  const hexes = hex.match(/../g)\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty\n}\n\n/**\n * @param {Uint8Array} aa\n * @param {Uint8Array} bb\n */\nconst equals = (aa, bb) => {\n  if (aa === bb) return true\n  if (aa.byteLength !== bb.byteLength) {\n    return false\n  }\n\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * @param {ArrayBufferView|ArrayBuffer|Uint8Array} o\n * @returns {Uint8Array}\n */\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array') return o\n  if (o instanceof ArrayBuffer) return new Uint8Array(o)\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength)\n  }\n  throw new Error('Unknown type, must be binary type')\n}\n\n/**\n * @param {any} o\n * @returns {o is ArrayBuffer|ArrayBufferView}\n */\nconst isBinary = o =>\n  o instanceof ArrayBuffer || ArrayBuffer.isView(o)\n\n/**\n * @param {string} str\n * @returns {Uint8Array}\n */\nconst fromString = str => (new TextEncoder()).encode(str)\n\n/**\n * @param {Uint8Array} b\n * @returns {string}\n */\nconst toString = b => (new TextDecoder()).decode(b)\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL3NyYy9ieXRlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBOztBQUVBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLFFBQVE7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFlBQVk7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLG1CQUFtQixvQkFBb0I7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLFdBQVcsd0NBQXdDO0FBQ25ELGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLEtBQUs7QUFDaEIsYUFBYTtBQUNiO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhO0FBQ2I7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixhQUFhO0FBQ2I7QUFDQTs7QUFFZ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2UtMi9uZXh0anMvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL3NyYy9ieXRlcy5qcz80YjdlIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGVtcHR5ID0gbmV3IFVpbnQ4QXJyYXkoMClcblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRcbiAqL1xuY29uc3QgdG9IZXggPSBkID0+IGQucmVkdWNlKChoZXgsIGJ5dGUpID0+IGhleCArIGJ5dGUudG9TdHJpbmcoMTYpLnBhZFN0YXJ0KDIsICcwJyksICcnKVxuXG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nfSBoZXhcbiAqL1xuY29uc3QgZnJvbUhleCA9IGhleCA9PiB7XG4gIGNvbnN0IGhleGVzID0gaGV4Lm1hdGNoKC8uLi9nKVxuICByZXR1cm4gaGV4ZXMgPyBuZXcgVWludDhBcnJheShoZXhlcy5tYXAoYiA9PiBwYXJzZUludChiLCAxNikpKSA6IGVtcHR5XG59XG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBhYVxuICogQHBhcmFtIHtVaW50OEFycmF5fSBiYlxuICovXG5jb25zdCBlcXVhbHMgPSAoYWEsIGJiKSA9PiB7XG4gIGlmIChhYSA9PT0gYmIpIHJldHVybiB0cnVlXG4gIGlmIChhYS5ieXRlTGVuZ3RoICE9PSBiYi5ieXRlTGVuZ3RoKSB7XG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cblxuICBmb3IgKGxldCBpaSA9IDA7IGlpIDwgYWEuYnl0ZUxlbmd0aDsgaWkrKykge1xuICAgIGlmIChhYVtpaV0gIT09IGJiW2lpXSkge1xuICAgICAgcmV0dXJuIGZhbHNlXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRydWVcbn1cblxuLyoqXG4gKiBAcGFyYW0ge0FycmF5QnVmZmVyVmlld3xBcnJheUJ1ZmZlcnxVaW50OEFycmF5fSBvXG4gKiBAcmV0dXJucyB7VWludDhBcnJheX1cbiAqL1xuY29uc3QgY29lcmNlID0gbyA9PiB7XG4gIGlmIChvIGluc3RhbmNlb2YgVWludDhBcnJheSAmJiBvLmNvbnN0cnVjdG9yLm5hbWUgPT09ICdVaW50OEFycmF5JykgcmV0dXJuIG9cbiAgaWYgKG8gaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcikgcmV0dXJuIG5ldyBVaW50OEFycmF5KG8pXG4gIGlmIChBcnJheUJ1ZmZlci5pc1ZpZXcobykpIHtcbiAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoby5idWZmZXIsIG8uYnl0ZU9mZnNldCwgby5ieXRlTGVuZ3RoKVxuICB9XG4gIHRocm93IG5ldyBFcnJvcignVW5rbm93biB0eXBlLCBtdXN0IGJlIGJpbmFyeSB0eXBlJylcbn1cblxuLyoqXG4gKiBAcGFyYW0ge2FueX0gb1xuICogQHJldHVybnMge28gaXMgQXJyYXlCdWZmZXJ8QXJyYXlCdWZmZXJWaWV3fVxuICovXG5jb25zdCBpc0JpbmFyeSA9IG8gPT5cbiAgbyBpbnN0YW5jZW9mIEFycmF5QnVmZmVyIHx8IEFycmF5QnVmZmVyLmlzVmlldyhvKVxuXG4vKipcbiAqIEBwYXJhbSB7c3RyaW5nfSBzdHJcbiAqIEByZXR1cm5zIHtVaW50OEFycmF5fVxuICovXG5jb25zdCBmcm9tU3RyaW5nID0gc3RyID0+IChuZXcgVGV4dEVuY29kZXIoKSkuZW5jb2RlKHN0cilcblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGJcbiAqIEByZXR1cm5zIHtzdHJpbmd9XG4gKi9cbmNvbnN0IHRvU3RyaW5nID0gYiA9PiAobmV3IFRleHREZWNvZGVyKCkpLmRlY29kZShiKVxuXG5leHBvcnQgeyBlcXVhbHMsIGNvZXJjZSwgaXNCaW5hcnksIGZyb21IZXgsIHRvSGV4LCBmcm9tU3RyaW5nLCB0b1N0cmluZywgZW1wdHkgfVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bytes.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/cid.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/cid.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CID: () => (/* binding */ CID),\n/* harmony export */   format: () => (/* binding */ format),\n/* harmony export */   fromJSON: () => (/* binding */ fromJSON),\n/* harmony export */   toJSON: () => (/* binding */ toJSON)\n/* harmony export */ });\n/* harmony import */ var _bases_base32_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bases/base32.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base32.js\");\n/* harmony import */ var _bases_base58_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bases/base58.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bases/base58.js\");\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bytes.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bytes.js\");\n/* harmony import */ var _hashes_digest_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./hashes/digest.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/hashes/digest.js\");\n/* harmony import */ var _link_interface_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./link/interface.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/link/interface.js\");\n/* harmony import */ var _varint_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./varint.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/varint.js\");\n\n\n\n\n// Linter can see that API is used in types.\n// eslint-disable-next-line\n\n\n\n// This way TS will also expose all the types from module\n\n\n/**\n * @template {API.Link<unknown, number, number, API.Version>} T\n * @template {string} Prefix\n * @param {T} link\n * @param {API.MultibaseEncoder<Prefix>} [base]\n * @returns {API.ToString<T, Prefix>}\n */\nconst format = (link, base) => {\n  const { bytes, version } = link\n  switch (version) {\n    case 0:\n      return toStringV0(\n        bytes,\n        baseCache(link),\n        /** @type {API.MultibaseEncoder<\"z\">} */ (base) || _bases_base58_js__WEBPACK_IMPORTED_MODULE_1__.base58btc.encoder\n      )\n    default:\n      return toStringV1(\n        bytes,\n        baseCache(link),\n        /** @type {API.MultibaseEncoder<Prefix>} */ (base || _bases_base32_js__WEBPACK_IMPORTED_MODULE_0__.base32.encoder)\n      )\n  }\n}\n\n/**\n * @template {API.UnknownLink} Link\n * @param {Link} link\n * @returns {API.LinkJSON<Link>}\n */\nconst toJSON = (link) => ({\n  '/': format(link)\n})\n\n/**\n * @template {API.UnknownLink} Link\n * @param {API.LinkJSON<Link>} json\n */\nconst fromJSON = (json) =>\n  CID.parse(json['/'])\n\n/** @type {WeakMap<API.UnknownLink, Map<string, string>>} */\nconst cache = new WeakMap()\n\n/**\n * @param {API.UnknownLink} cid\n * @returns {Map<string, string>}\n */\nconst baseCache = cid => {\n  const baseCache = cache.get(cid)\n  if (baseCache == null) {\n    const baseCache = new Map()\n    cache.set(cid, baseCache)\n    return baseCache\n  }\n  return baseCache\n}\n\n/**\n * @template {unknown} [Data=unknown]\n * @template {number} [Format=number]\n * @template {number} [Alg=number]\n * @template {API.Version} [Version=API.Version]\n * @implements {API.Link<Data, Format, Alg, Version>}\n */\n\nclass CID {\n  /**\n   * @param {Version} version - Version of the CID\n   * @param {Format} code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n   * @param {API.MultihashDigest<Alg>} multihash - (Multi)hash of the of the content.\n   * @param {Uint8Array} bytes\n   */\n  constructor (version, code, multihash, bytes) {\n    /** @readonly */\n    this.code = code\n    /** @readonly */\n    this.version = version\n    /** @readonly */\n    this.multihash = multihash\n    /** @readonly */\n    this.bytes = bytes\n\n    // flag to serializers that this is a CID and\n    // should be treated specially\n    /** @readonly */\n    this['/'] = bytes\n  }\n\n  /**\n   * Signalling `cid.asCID === cid` has been replaced with `cid['/'] === cid.bytes`\n   * please either use `CID.asCID(cid)` or switch to new signalling mechanism\n   *\n   * @deprecated\n   */\n  get asCID () {\n    return this\n  }\n\n  // ArrayBufferView\n  get byteOffset () {\n    return this.bytes.byteOffset\n  }\n\n  // ArrayBufferView\n  get byteLength () {\n    return this.bytes.byteLength\n  }\n\n  /**\n   * @returns {CID<Data, API.DAG_PB, API.SHA_256, 0>}\n   */\n  toV0 () {\n    switch (this.version) {\n      case 0: {\n        return /** @type {CID<Data, API.DAG_PB, API.SHA_256, 0>} */ (this)\n      }\n      case 1: {\n        const { code, multihash } = this\n\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0')\n        }\n\n        // sha2-256\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0')\n        }\n\n        return /** @type {CID<Data, API.DAG_PB, API.SHA_256, 0>} */ (\n          CID.createV0(\n            /** @type {API.MultihashDigest<API.SHA_256>} */ (multihash)\n          )\n        )\n      }\n      default: {\n        throw Error(\n          `Can not convert CID version ${this.version} to version 0. This is a bug please report`\n        )\n      }\n    }\n  }\n\n  /**\n   * @returns {CID<Data, Format, Alg, 1>}\n   */\n  toV1 () {\n    switch (this.version) {\n      case 0: {\n        const { code, digest } = this.multihash\n        const multihash = _hashes_digest_js__WEBPACK_IMPORTED_MODULE_3__.create(code, digest)\n        return /** @type {CID<Data, Format, Alg, 1>} */ (\n          CID.createV1(this.code, multihash)\n        )\n      }\n      case 1: {\n        return /** @type {CID<Data, Format, Alg, 1>} */ (this)\n      }\n      default: {\n        throw Error(\n          `Can not convert CID version ${this.version} to version 1. This is a bug please report`\n        )\n      }\n    }\n  }\n\n  /**\n   * @param {unknown} other\n   * @returns {other is CID<Data, Format, Alg, Version>}\n   */\n  equals (other) {\n    return CID.equals(this, other)\n  }\n\n  /**\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @param {API.Link<Data, Format, Alg, Version>} self\n   * @param {unknown} other\n   * @returns {other is CID}\n   */\n  static equals (self, other) {\n    const unknown =\n      /** @type {{code?:unknown, version?:unknown, multihash?:unknown}} */ (\n        other\n      )\n    return (\n      unknown &&\n      self.code === unknown.code &&\n      self.version === unknown.version &&\n      _hashes_digest_js__WEBPACK_IMPORTED_MODULE_3__.equals(self.multihash, unknown.multihash)\n    )\n  }\n\n  /**\n   * @param {API.MultibaseEncoder<string>} [base]\n   * @returns {string}\n   */\n  toString (base) {\n    return format(this, base)\n  }\n\n  /**\n   * @returns {API.LinkJSON<this>}\n   */\n  toJSON () {\n    return { '/': format(this) }\n  }\n\n  link () {\n    return this\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'CID'\n  }\n\n  // Legacy\n\n  [Symbol.for('nodejs.util.inspect.custom')] () {\n    return `CID(${this.toString()})`\n  }\n\n  /**\n   * Takes any input `value` and returns a `CID` instance if it was\n   * a `CID` otherwise returns `null`. If `value` is instanceof `CID`\n   * it will return value back. If `value` is not instance of this CID\n   * class, but is compatible CID it will return new instance of this\n   * `CID` class. Otherwise returns null.\n   *\n   * This allows two different incompatible versions of CID library to\n   * co-exist and interop as long as binary interface is compatible.\n   *\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @template {unknown} U\n   * @param {API.Link<Data, Format, Alg, Version>|U} input\n   * @returns {CID<Data, Format, Alg, Version>|null}\n   */\n  static asCID (input) {\n    if (input == null) {\n      return null\n    }\n\n    const value = /** @type {any} */ (input)\n    if (value instanceof CID) {\n      // If value is instance of CID then we're all set.\n      return value\n    } else if ((value['/'] != null && value['/'] === value.bytes) || value.asCID === value) {\n      // If value isn't instance of this CID class but `this.asCID === this` or\n      // `value['/'] === value.bytes` is true it is CID instance coming from a\n      // different implementation (diff version or duplicate). In that case we\n      // rebase it to this `CID` implementation so caller is guaranteed to get\n      // instance with expected API.\n      const { version, code, multihash, bytes } = value\n      return new CID(\n        version,\n        code,\n        /** @type {API.MultihashDigest<Alg>} */ (multihash),\n        bytes || encodeCID(version, code, multihash.bytes)\n      )\n    } else if (value[cidSymbol] === true) {\n      // If value is a CID from older implementation that used to be tagged via\n      // symbol we still rebase it to the this `CID` implementation by\n      // delegating that to a constructor.\n      const { version, multihash, code } = value\n      const digest =\n        /** @type {API.MultihashDigest<Alg>} */\n        (_hashes_digest_js__WEBPACK_IMPORTED_MODULE_3__.decode(multihash))\n      return CID.create(version, code, digest)\n    } else {\n      // Otherwise value is not a CID (or an incompatible version of it) in\n      // which case we return `null`.\n      return null\n    }\n  }\n\n  /**\n   *\n   * @template {unknown} Data\n   * @template {number} Format\n   * @template {number} Alg\n   * @template {API.Version} Version\n   * @param {Version} version - Version of the CID\n   * @param {Format} code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n   * @param {API.MultihashDigest<Alg>} digest - (Multi)hash of the of the content.\n   * @returns {CID<Data, Format, Alg, Version>}\n   */\n  static create (version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported')\n    }\n\n    if (!(digest.bytes instanceof Uint8Array)) {\n      throw new Error('Invalid digest')\n    }\n\n    switch (version) {\n      case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(\n            `Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`\n          )\n        } else {\n          return new CID(version, code, digest, digest.bytes)\n        }\n      }\n      case 1: {\n        const bytes = encodeCID(version, code, digest.bytes)\n        return new CID(version, code, digest, bytes)\n      }\n      default: {\n        throw new Error('Invalid version')\n      }\n    }\n  }\n\n  /**\n   * Simplified version of `create` for CIDv0.\n   *\n   * @template {unknown} [T=unknown]\n   * @param {API.MultihashDigest<typeof SHA_256_CODE>} digest - Multihash.\n   * @returns {CID<T, typeof DAG_PB_CODE, typeof SHA_256_CODE, 0>}\n   */\n  static createV0 (digest) {\n    return CID.create(0, DAG_PB_CODE, digest)\n  }\n\n  /**\n   * Simplified version of `create` for CIDv1.\n   *\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @param {Code} code - Content encoding format code.\n   * @param {API.MultihashDigest<Alg>} digest - Miltihash of the content.\n   * @returns {CID<Data, Code, Alg, 1>}\n   */\n  static createV1 (code, digest) {\n    return CID.create(1, code, digest)\n  }\n\n  /**\n   * Decoded a CID from its binary representation. The byte array must contain\n   * only the CID with no additional bytes.\n   *\n   * An error will be thrown if the bytes provided do not contain a valid\n   * binary representation of a CID.\n   *\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @template {API.Version} Ver\n   * @param {API.ByteView<API.Link<Data, Code, Alg, Ver>>} bytes\n   * @returns {CID<Data, Code, Alg, Ver>}\n   */\n  static decode (bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes)\n    if (remainder.length) {\n      throw new Error('Incorrect length')\n    }\n    return cid\n  }\n\n  /**\n   * Decoded a CID from its binary representation at the beginning of a byte\n   * array.\n   *\n   * Returns an array with the first element containing the CID and the second\n   * element containing the remainder of the original byte array. The remainder\n   * will be a zero-length byte array if the provided bytes only contained a\n   * binary CID representation.\n   *\n   * @template {unknown} T\n   * @template {number} C\n   * @template {number} A\n   * @template {API.Version} V\n   * @param {API.ByteView<API.Link<T, C, A, V>>} bytes\n   * @returns {[CID<T, C, A, V>, Uint8Array]}\n   */\n  static decodeFirst (bytes) {\n    const specs = CID.inspectBytes(bytes)\n    const prefixSize = specs.size - specs.multihashSize\n    const multihashBytes = (0,_bytes_js__WEBPACK_IMPORTED_MODULE_2__.coerce)(\n      bytes.subarray(prefixSize, prefixSize + specs.multihashSize)\n    )\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length')\n    }\n    const digestBytes = multihashBytes.subarray(\n      specs.multihashSize - specs.digestSize\n    )\n    const digest = new _hashes_digest_js__WEBPACK_IMPORTED_MODULE_3__.Digest(\n      specs.multihashCode,\n      specs.digestSize,\n      digestBytes,\n      multihashBytes\n    )\n    const cid =\n      specs.version === 0\n        ? CID.createV0(/** @type {API.MultihashDigest<API.SHA_256>} */ (digest))\n        : CID.createV1(specs.codec, digest)\n    return [/** @type {CID<T, C, A, V>} */(cid), bytes.subarray(specs.size)]\n  }\n\n  /**\n   * Inspect the initial bytes of a CID to determine its properties.\n   *\n   * Involves decoding up to 4 varints. Typically this will require only 4 to 6\n   * bytes but for larger multicodec code values and larger multihash digest\n   * lengths these varints can be quite large. It is recommended that at least\n   * 10 bytes be made available in the `initialBytes` argument for a complete\n   * inspection.\n   *\n   * @template {unknown} T\n   * @template {number} C\n   * @template {number} A\n   * @template {API.Version} V\n   * @param {API.ByteView<API.Link<T, C, A, V>>} initialBytes\n   * @returns {{ version:V, codec:C, multihashCode:A, digestSize:number, multihashSize:number, size:number }}\n   */\n  static inspectBytes (initialBytes) {\n    let offset = 0\n    const next = () => {\n      const [i, length] = _varint_js__WEBPACK_IMPORTED_MODULE_5__.decode(initialBytes.subarray(offset))\n      offset += length\n      return i\n    }\n\n    let version = /** @type {V} */ (next())\n    let codec = /** @type {C} */ (DAG_PB_CODE)\n    if (/** @type {number} */(version) === 18) {\n      // CIDv0\n      version = /** @type {V} */ (0)\n      offset = 0\n    } else {\n      codec = /** @type {C} */ (next())\n    }\n\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${version}`)\n    }\n\n    const prefixSize = offset\n    const multihashCode = /** @type {A} */ (next()) // multihash code\n    const digestSize = next() // multihash length\n    const size = offset + digestSize\n    const multihashSize = size - prefixSize\n\n    return { version, codec, multihashCode, digestSize, multihashSize, size }\n  }\n\n  /**\n   * Takes cid in a string representation and creates an instance. If `base`\n   * decoder is not provided will use a default from the configuration. It will\n   * throw an error if encoding of the CID is not compatible with supplied (or\n   * a default decoder).\n   *\n   * @template {string} Prefix\n   * @template {unknown} Data\n   * @template {number} Code\n   * @template {number} Alg\n   * @template {API.Version} Ver\n   * @param {API.ToString<API.Link<Data, Code, Alg, Ver>, Prefix>} source\n   * @param {API.MultibaseDecoder<Prefix>} [base]\n   * @returns {CID<Data, Code, Alg, Ver>}\n   */\n  static parse (source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base)\n\n    const cid = CID.decode(bytes)\n\n    if (cid.version === 0 && source[0] !== 'Q') {\n      throw Error('Version 0 CID string must not include multibase prefix')\n    }\n\n    // Cache string representation to avoid computing it on `this.toString()`\n    baseCache(cid).set(prefix, source)\n\n    return cid\n  }\n}\n\n/**\n * @template {string} Prefix\n * @template {unknown} Data\n * @template {number} Code\n * @template {number} Alg\n * @template {API.Version} Ver\n * @param {API.ToString<API.Link<Data, Code, Alg, Ver>, Prefix>} source\n * @param {API.MultibaseDecoder<Prefix>} [base]\n * @returns {[Prefix, API.ByteView<API.Link<Data, Code, Alg, Ver>>]}\n */\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n    // CIDv0 is parsed differently\n    case 'Q': {\n      const decoder = base || _bases_base58_js__WEBPACK_IMPORTED_MODULE_1__.base58btc\n      return [\n        /** @type {Prefix} */ (_bases_base58_js__WEBPACK_IMPORTED_MODULE_1__.base58btc.prefix),\n        decoder.decode(`${_bases_base58_js__WEBPACK_IMPORTED_MODULE_1__.base58btc.prefix}${source}`)\n      ]\n    }\n    case _bases_base58_js__WEBPACK_IMPORTED_MODULE_1__.base58btc.prefix: {\n      const decoder = base || _bases_base58_js__WEBPACK_IMPORTED_MODULE_1__.base58btc\n      return [/** @type {Prefix} */(_bases_base58_js__WEBPACK_IMPORTED_MODULE_1__.base58btc.prefix), decoder.decode(source)]\n    }\n    case _bases_base32_js__WEBPACK_IMPORTED_MODULE_0__.base32.prefix: {\n      const decoder = base || _bases_base32_js__WEBPACK_IMPORTED_MODULE_0__.base32\n      return [/** @type {Prefix} */(_bases_base32_js__WEBPACK_IMPORTED_MODULE_0__.base32.prefix), decoder.decode(source)]\n    }\n    default: {\n      if (base == null) {\n        throw Error(\n          'To parse non base32 or base58btc encoded CID multibase decoder must be provided'\n        )\n      }\n      return [/** @type {Prefix} */(source[0]), base.decode(source)]\n    }\n  }\n}\n\n/**\n *\n * @param {Uint8Array} bytes\n * @param {Map<string, string>} cache\n * @param {API.MultibaseEncoder<'z'>} base\n */\nconst toStringV0 = (bytes, cache, base) => {\n  const { prefix } = base\n  if (prefix !== _bases_base58_js__WEBPACK_IMPORTED_MODULE_1__.base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${base.name} encoding`)\n  }\n\n  const cid = cache.get(prefix)\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1)\n    cache.set(prefix, cid)\n    return cid\n  } else {\n    return cid\n  }\n}\n\n/**\n * @template {string} Prefix\n * @param {Uint8Array} bytes\n * @param {Map<string, string>} cache\n * @param {API.MultibaseEncoder<Prefix>} base\n */\nconst toStringV1 = (bytes, cache, base) => {\n  const { prefix } = base\n  const cid = cache.get(prefix)\n  if (cid == null) {\n    const cid = base.encode(bytes)\n    cache.set(prefix, cid)\n    return cid\n  } else {\n    return cid\n  }\n}\n\nconst DAG_PB_CODE = 0x70\nconst SHA_256_CODE = 0x12\n\n/**\n * @param {API.Version} version\n * @param {number} code\n * @param {Uint8Array} multihash\n * @returns {Uint8Array}\n */\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = _varint_js__WEBPACK_IMPORTED_MODULE_5__.encodingLength(version)\n  const hashOffset = codeOffset + _varint_js__WEBPACK_IMPORTED_MODULE_5__.encodingLength(code)\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength)\n  _varint_js__WEBPACK_IMPORTED_MODULE_5__.encodeTo(version, bytes, 0)\n  _varint_js__WEBPACK_IMPORTED_MODULE_5__.encodeTo(code, bytes, codeOffset)\n  bytes.set(multihash, hashOffset)\n  return bytes\n}\n\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID')\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/cid.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/codecs/json.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/codecs/json.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   code: () => (/* binding */ code),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   name: () => (/* binding */ name)\n/* harmony export */ });\n// @ts-check\n\n/**\n * @template T\n * @typedef {import('./interface.js').ByteView<T>} ByteView\n */\n\nconst textEncoder = new TextEncoder()\nconst textDecoder = new TextDecoder()\n\nconst name = 'json'\nconst code = 0x0200\n\n/**\n * @template T\n * @param {T} node\n * @returns {ByteView<T>}\n */\nconst encode = (node) => textEncoder.encode(JSON.stringify(node))\n\n/**\n * @template T\n * @param {ByteView<T>} data\n * @returns {T}\n */\nconst decode = (data) => JSON.parse(textDecoder.decode(data))\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL3NyYy9jb2RlY3MvanNvbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBRUE7QUFDQTtBQUNBLGFBQWEsc0NBQXNDO0FBQ25EOztBQUVBO0FBQ0E7O0FBRU87QUFDQTs7QUFFUDtBQUNBO0FBQ0EsV0FBVyxHQUFHO0FBQ2QsYUFBYTtBQUNiO0FBQ087O0FBRVA7QUFDQTtBQUNBLFdBQVcsYUFBYTtBQUN4QixhQUFhO0FBQ2I7QUFDTyIsInNvdXJjZXMiOlsid2VicGFjazovL0BzZS0yL25leHRqcy8uL25vZGVfbW9kdWxlcy9pcGZzLWNvcmUtdXRpbHMvbm9kZV9tb2R1bGVzL3VpbnQ4YXJyYXlzL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvc3JjL2NvZGVjcy9qc29uLmpzP2E3M2YiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLWNoZWNrXG5cbi8qKlxuICogQHRlbXBsYXRlIFRcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vaW50ZXJmYWNlLmpzJykuQnl0ZVZpZXc8VD59IEJ5dGVWaWV3XG4gKi9cblxuY29uc3QgdGV4dEVuY29kZXIgPSBuZXcgVGV4dEVuY29kZXIoKVxuY29uc3QgdGV4dERlY29kZXIgPSBuZXcgVGV4dERlY29kZXIoKVxuXG5leHBvcnQgY29uc3QgbmFtZSA9ICdqc29uJ1xuZXhwb3J0IGNvbnN0IGNvZGUgPSAweDAyMDBcblxuLyoqXG4gKiBAdGVtcGxhdGUgVFxuICogQHBhcmFtIHtUfSBub2RlXG4gKiBAcmV0dXJucyB7Qnl0ZVZpZXc8VD59XG4gKi9cbmV4cG9ydCBjb25zdCBlbmNvZGUgPSAobm9kZSkgPT4gdGV4dEVuY29kZXIuZW5jb2RlKEpTT04uc3RyaW5naWZ5KG5vZGUpKVxuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAcGFyYW0ge0J5dGVWaWV3PFQ+fSBkYXRhXG4gKiBAcmV0dXJucyB7VH1cbiAqL1xuZXhwb3J0IGNvbnN0IGRlY29kZSA9IChkYXRhKSA9PiBKU09OLnBhcnNlKHRleHREZWNvZGVyLmRlY29kZShkYXRhKSlcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/codecs/json.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/codecs/raw.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/codecs/raw.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   code: () => (/* binding */ code),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   name: () => (/* binding */ name)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bytes.js\");\n// @ts-check\n\n\n\n/**\n * @template T\n * @typedef {import('./interface.js').ByteView<T>} ByteView\n */\n\nconst name = 'raw'\nconst code = 0x55\n\n/**\n * @param {Uint8Array} node\n * @returns {ByteView<Uint8Array>}\n */\nconst encode = (node) => (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce)(node)\n\n/**\n * @param {ByteView<Uint8Array>} data\n * @returns {Uint8Array}\n */\nconst decode = (data) => (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce)(data)\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL3NyYy9jb2RlY3MvcmF3LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7O0FBRW9DOztBQUVwQztBQUNBO0FBQ0EsYUFBYSxzQ0FBc0M7QUFDbkQ7O0FBRU87QUFDQTs7QUFFUDtBQUNBLFdBQVcsWUFBWTtBQUN2QixhQUFhO0FBQ2I7QUFDTyx5QkFBeUIsaURBQU07O0FBRXRDO0FBQ0EsV0FBVyxzQkFBc0I7QUFDakMsYUFBYTtBQUNiO0FBQ08seUJBQXlCLGlEQUFNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNlLTIvbmV4dGpzLy4vbm9kZV9tb2R1bGVzL2lwZnMtY29yZS11dGlscy9ub2RlX21vZHVsZXMvdWludDhhcnJheXMvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9zcmMvY29kZWNzL3Jhdy5qcz8xNzFiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1jaGVja1xuXG5pbXBvcnQgeyBjb2VyY2UgfSBmcm9tICcuLi9ieXRlcy5qcydcblxuLyoqXG4gKiBAdGVtcGxhdGUgVFxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9pbnRlcmZhY2UuanMnKS5CeXRlVmlldzxUPn0gQnl0ZVZpZXdcbiAqL1xuXG5leHBvcnQgY29uc3QgbmFtZSA9ICdyYXcnXG5leHBvcnQgY29uc3QgY29kZSA9IDB4NTVcblxuLyoqXG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IG5vZGVcbiAqIEByZXR1cm5zIHtCeXRlVmlldzxVaW50OEFycmF5Pn1cbiAqL1xuZXhwb3J0IGNvbnN0IGVuY29kZSA9IChub2RlKSA9PiBjb2VyY2Uobm9kZSlcblxuLyoqXG4gKiBAcGFyYW0ge0J5dGVWaWV3PFVpbnQ4QXJyYXk+fSBkYXRhXG4gKiBAcmV0dXJucyB7VWludDhBcnJheX1cbiAqL1xuZXhwb3J0IGNvbnN0IGRlY29kZSA9IChkYXRhKSA9PiBjb2VyY2UoZGF0YSlcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/codecs/raw.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/hashes/digest.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/hashes/digest.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Digest: () => (/* binding */ Digest),\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   equals: () => (/* binding */ equals)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bytes.js\");\n/* harmony import */ var _varint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../varint.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/varint.js\");\n\n\n\n/**\n * Creates a multihash digest.\n *\n * @template {number} Code\n * @param {Code} code\n * @param {Uint8Array} digest\n */\nconst create = (code, digest) => {\n  const size = digest.byteLength\n  const sizeOffset = _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodingLength(code)\n  const digestOffset = sizeOffset + _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodingLength(size)\n\n  const bytes = new Uint8Array(digestOffset + size)\n  _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodeTo(code, bytes, 0)\n  _varint_js__WEBPACK_IMPORTED_MODULE_1__.encodeTo(size, bytes, sizeOffset)\n  bytes.set(digest, digestOffset)\n\n  return new Digest(code, size, digest, bytes)\n}\n\n/**\n * Turns bytes representation of multihash digest into an instance.\n *\n * @param {Uint8Array} multihash\n * @returns {MultihashDigest}\n */\nconst decode = (multihash) => {\n  const bytes = (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce)(multihash)\n  const [code, sizeOffset] = _varint_js__WEBPACK_IMPORTED_MODULE_1__.decode(bytes)\n  const [size, digestOffset] = _varint_js__WEBPACK_IMPORTED_MODULE_1__.decode(bytes.subarray(sizeOffset))\n  const digest = bytes.subarray(sizeOffset + digestOffset)\n\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length')\n  }\n\n  return new Digest(code, size, digest, bytes)\n}\n\n/**\n * @param {MultihashDigest} a\n * @param {unknown} b\n * @returns {b is MultihashDigest}\n */\nconst equals = (a, b) => {\n  if (a === b) {\n    return true\n  } else {\n    const data = /** @type {{code?:unknown, size?:unknown, bytes?:unknown}} */(b)\n\n    return (\n      a.code === data.code &&\n      a.size === data.size &&\n      data.bytes instanceof Uint8Array &&\n      (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.equals)(a.bytes, data.bytes)\n    )\n  }\n}\n\n/**\n * @typedef {import('./interface.js').MultihashDigest} MultihashDigest\n */\n\n/**\n * Represents a multihash digest which carries information about the\n * hashing algorithm and an actual hash digest.\n *\n * @template {number} Code\n * @template {number} Size\n * @class\n * @implements {MultihashDigest}\n */\nclass Digest {\n  /**\n   * Creates a multihash digest.\n   *\n   * @param {Code} code\n   * @param {Size} size\n   * @param {Uint8Array} digest\n   * @param {Uint8Array} bytes\n   */\n  constructor (code, size, digest, bytes) {\n    this.code = code\n    this.size = size\n    this.digest = digest\n    this.bytes = bytes\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL3NyYy9oYXNoZXMvZGlnZXN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUEwRDtBQUNwQjs7QUFFdEM7QUFDQTtBQUNBO0FBQ0EsY0FBYyxRQUFRO0FBQ3RCLFdBQVcsTUFBTTtBQUNqQixXQUFXLFlBQVk7QUFDdkI7QUFDTztBQUNQO0FBQ0EscUJBQXFCLHNEQUFxQjtBQUMxQyxvQ0FBb0Msc0RBQXFCOztBQUV6RDtBQUNBLEVBQUUsZ0RBQWU7QUFDakIsRUFBRSxnREFBZTtBQUNqQjs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixhQUFhO0FBQ2I7QUFDTztBQUNQLGdCQUFnQixpREFBTTtBQUN0Qiw2QkFBNkIsOENBQWE7QUFDMUMsK0JBQStCLDhDQUFhO0FBQzVDOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsV0FBVyxpQkFBaUI7QUFDNUIsV0FBVyxTQUFTO0FBQ3BCLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTtBQUNBLElBQUk7QUFDSiw2QkFBNkIsK0NBQStDOztBQUU1RTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0saURBQVU7QUFDaEI7QUFDQTtBQUNBOztBQUVBO0FBQ0EsYUFBYSwwQ0FBMEM7QUFDdkQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLFFBQVE7QUFDdEIsY0FBYyxRQUFRO0FBQ3RCO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxhQUFhLE1BQU07QUFDbkIsYUFBYSxNQUFNO0FBQ25CLGFBQWEsWUFBWTtBQUN6QixhQUFhLFlBQVk7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BzZS0yL25leHRqcy8uL25vZGVfbW9kdWxlcy9pcGZzLWNvcmUtdXRpbHMvbm9kZV9tb2R1bGVzL3VpbnQ4YXJyYXlzL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvc3JjL2hhc2hlcy9kaWdlc3QuanM/MzZmYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb2VyY2UsIGVxdWFscyBhcyBlcXVhbEJ5dGVzIH0gZnJvbSAnLi4vYnl0ZXMuanMnXG5pbXBvcnQgKiBhcyB2YXJpbnQgZnJvbSAnLi4vdmFyaW50LmpzJ1xuXG4vKipcbiAqIENyZWF0ZXMgYSBtdWx0aWhhc2ggZGlnZXN0LlxuICpcbiAqIEB0ZW1wbGF0ZSB7bnVtYmVyfSBDb2RlXG4gKiBAcGFyYW0ge0NvZGV9IGNvZGVcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gZGlnZXN0XG4gKi9cbmV4cG9ydCBjb25zdCBjcmVhdGUgPSAoY29kZSwgZGlnZXN0KSA9PiB7XG4gIGNvbnN0IHNpemUgPSBkaWdlc3QuYnl0ZUxlbmd0aFxuICBjb25zdCBzaXplT2Zmc2V0ID0gdmFyaW50LmVuY29kaW5nTGVuZ3RoKGNvZGUpXG4gIGNvbnN0IGRpZ2VzdE9mZnNldCA9IHNpemVPZmZzZXQgKyB2YXJpbnQuZW5jb2RpbmdMZW5ndGgoc2l6ZSlcblxuICBjb25zdCBieXRlcyA9IG5ldyBVaW50OEFycmF5KGRpZ2VzdE9mZnNldCArIHNpemUpXG4gIHZhcmludC5lbmNvZGVUbyhjb2RlLCBieXRlcywgMClcbiAgdmFyaW50LmVuY29kZVRvKHNpemUsIGJ5dGVzLCBzaXplT2Zmc2V0KVxuICBieXRlcy5zZXQoZGlnZXN0LCBkaWdlc3RPZmZzZXQpXG5cbiAgcmV0dXJuIG5ldyBEaWdlc3QoY29kZSwgc2l6ZSwgZGlnZXN0LCBieXRlcylcbn1cblxuLyoqXG4gKiBUdXJucyBieXRlcyByZXByZXNlbnRhdGlvbiBvZiBtdWx0aWhhc2ggZGlnZXN0IGludG8gYW4gaW5zdGFuY2UuXG4gKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBtdWx0aWhhc2hcbiAqIEByZXR1cm5zIHtNdWx0aWhhc2hEaWdlc3R9XG4gKi9cbmV4cG9ydCBjb25zdCBkZWNvZGUgPSAobXVsdGloYXNoKSA9PiB7XG4gIGNvbnN0IGJ5dGVzID0gY29lcmNlKG11bHRpaGFzaClcbiAgY29uc3QgW2NvZGUsIHNpemVPZmZzZXRdID0gdmFyaW50LmRlY29kZShieXRlcylcbiAgY29uc3QgW3NpemUsIGRpZ2VzdE9mZnNldF0gPSB2YXJpbnQuZGVjb2RlKGJ5dGVzLnN1YmFycmF5KHNpemVPZmZzZXQpKVxuICBjb25zdCBkaWdlc3QgPSBieXRlcy5zdWJhcnJheShzaXplT2Zmc2V0ICsgZGlnZXN0T2Zmc2V0KVxuXG4gIGlmIChkaWdlc3QuYnl0ZUxlbmd0aCAhPT0gc2l6ZSkge1xuICAgIHRocm93IG5ldyBFcnJvcignSW5jb3JyZWN0IGxlbmd0aCcpXG4gIH1cblxuICByZXR1cm4gbmV3IERpZ2VzdChjb2RlLCBzaXplLCBkaWdlc3QsIGJ5dGVzKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7TXVsdGloYXNoRGlnZXN0fSBhXG4gKiBAcGFyYW0ge3Vua25vd259IGJcbiAqIEByZXR1cm5zIHtiIGlzIE11bHRpaGFzaERpZ2VzdH1cbiAqL1xuZXhwb3J0IGNvbnN0IGVxdWFscyA9IChhLCBiKSA9PiB7XG4gIGlmIChhID09PSBiKSB7XG4gICAgcmV0dXJuIHRydWVcbiAgfSBlbHNlIHtcbiAgICBjb25zdCBkYXRhID0gLyoqIEB0eXBlIHt7Y29kZT86dW5rbm93biwgc2l6ZT86dW5rbm93biwgYnl0ZXM/OnVua25vd259fSAqLyhiKVxuXG4gICAgcmV0dXJuIChcbiAgICAgIGEuY29kZSA9PT0gZGF0YS5jb2RlICYmXG4gICAgICBhLnNpemUgPT09IGRhdGEuc2l6ZSAmJlxuICAgICAgZGF0YS5ieXRlcyBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkgJiZcbiAgICAgIGVxdWFsQnl0ZXMoYS5ieXRlcywgZGF0YS5ieXRlcylcbiAgICApXG4gIH1cbn1cblxuLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2ludGVyZmFjZS5qcycpLk11bHRpaGFzaERpZ2VzdH0gTXVsdGloYXNoRGlnZXN0XG4gKi9cblxuLyoqXG4gKiBSZXByZXNlbnRzIGEgbXVsdGloYXNoIGRpZ2VzdCB3aGljaCBjYXJyaWVzIGluZm9ybWF0aW9uIGFib3V0IHRoZVxuICogaGFzaGluZyBhbGdvcml0aG0gYW5kIGFuIGFjdHVhbCBoYXNoIGRpZ2VzdC5cbiAqXG4gKiBAdGVtcGxhdGUge251bWJlcn0gQ29kZVxuICogQHRlbXBsYXRlIHtudW1iZXJ9IFNpemVcbiAqIEBjbGFzc1xuICogQGltcGxlbWVudHMge011bHRpaGFzaERpZ2VzdH1cbiAqL1xuZXhwb3J0IGNsYXNzIERpZ2VzdCB7XG4gIC8qKlxuICAgKiBDcmVhdGVzIGEgbXVsdGloYXNoIGRpZ2VzdC5cbiAgICpcbiAgICogQHBhcmFtIHtDb2RlfSBjb2RlXG4gICAqIEBwYXJhbSB7U2l6ZX0gc2l6ZVxuICAgKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGRpZ2VzdFxuICAgKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IGJ5dGVzXG4gICAqL1xuICBjb25zdHJ1Y3RvciAoY29kZSwgc2l6ZSwgZGlnZXN0LCBieXRlcykge1xuICAgIHRoaXMuY29kZSA9IGNvZGVcbiAgICB0aGlzLnNpemUgPSBzaXplXG4gICAgdGhpcy5kaWdlc3QgPSBkaWdlc3RcbiAgICB0aGlzLmJ5dGVzID0gYnl0ZXNcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/hashes/digest.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/hashes/hasher.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/hashes/hasher.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Hasher: () => (/* binding */ Hasher),\n/* harmony export */   from: () => (/* binding */ from)\n/* harmony export */ });\n/* harmony import */ var _digest_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./digest.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/hashes/digest.js\");\n\n\n/**\n * @template {string} Name\n * @template {number} Code\n * @param {object} options\n * @param {Name} options.name\n * @param {Code} options.code\n * @param {(input: Uint8Array) => Await<Uint8Array>} options.encode\n */\nconst from = ({ name, code, encode }) => new Hasher(name, code, encode)\n\n/**\n * Hasher represents a hashing algorithm implementation that produces as\n * `MultihashDigest`.\n *\n * @template {string} Name\n * @template {number} Code\n * @class\n * @implements {MultihashHasher<Code>}\n */\nclass Hasher {\n  /**\n   *\n   * @param {Name} name\n   * @param {Code} code\n   * @param {(input: Uint8Array) => Await<Uint8Array>} encode\n   */\n  constructor (name, code, encode) {\n    this.name = name\n    this.code = code\n    this.encode = encode\n  }\n\n  /**\n   * @param {Uint8Array} input\n   * @returns {Await<Digest.Digest<Code, number>>}\n   */\n  digest (input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input)\n      return result instanceof Uint8Array\n        ? _digest_js__WEBPACK_IMPORTED_MODULE_0__.create(this.code, result)\n        /* c8 ignore next 1 */\n        : result.then(digest => _digest_js__WEBPACK_IMPORTED_MODULE_0__.create(this.code, digest))\n    } else {\n      throw Error('Unknown type, must be binary type')\n      /* c8 ignore next 1 */\n    }\n  }\n}\n\n/**\n * @template {number} Alg\n * @typedef {import('./interface.js').MultihashHasher} MultihashHasher\n */\n\n/**\n * @template T\n * @typedef {Promise<T>|T} Await\n */\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL3NyYy9oYXNoZXMvaGFzaGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFxQzs7QUFFckM7QUFDQSxjQUFjLFFBQVE7QUFDdEIsY0FBYyxRQUFRO0FBQ3RCLFdBQVcsUUFBUTtBQUNuQixXQUFXLE1BQU07QUFDakIsV0FBVyxNQUFNO0FBQ2pCLFdBQVcsMENBQTBDO0FBQ3JEO0FBQ08sZ0JBQWdCLG9CQUFvQjs7QUFFM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLFFBQVE7QUFDdEIsY0FBYyxRQUFRO0FBQ3RCO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ087QUFDUDtBQUNBO0FBQ0EsYUFBYSxNQUFNO0FBQ25CLGFBQWEsTUFBTTtBQUNuQixhQUFhLDBDQUEwQztBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxhQUFhLFlBQVk7QUFDekIsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLDhDQUFhO0FBQ3ZCO0FBQ0EsZ0NBQWdDLDhDQUFhO0FBQzdDLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsY0FBYyxRQUFRO0FBQ3RCLGFBQWEsMENBQTBDO0FBQ3ZEOztBQUVBO0FBQ0E7QUFDQSxhQUFhLGNBQWM7QUFDM0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2UtMi9uZXh0anMvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL3NyYy9oYXNoZXMvaGFzaGVyLmpzPzdiNjkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgRGlnZXN0IGZyb20gJy4vZGlnZXN0LmpzJ1xuXG4vKipcbiAqIEB0ZW1wbGF0ZSB7c3RyaW5nfSBOYW1lXG4gKiBAdGVtcGxhdGUge251bWJlcn0gQ29kZVxuICogQHBhcmFtIHtvYmplY3R9IG9wdGlvbnNcbiAqIEBwYXJhbSB7TmFtZX0gb3B0aW9ucy5uYW1lXG4gKiBAcGFyYW0ge0NvZGV9IG9wdGlvbnMuY29kZVxuICogQHBhcmFtIHsoaW5wdXQ6IFVpbnQ4QXJyYXkpID0+IEF3YWl0PFVpbnQ4QXJyYXk+fSBvcHRpb25zLmVuY29kZVxuICovXG5leHBvcnQgY29uc3QgZnJvbSA9ICh7IG5hbWUsIGNvZGUsIGVuY29kZSB9KSA9PiBuZXcgSGFzaGVyKG5hbWUsIGNvZGUsIGVuY29kZSlcblxuLyoqXG4gKiBIYXNoZXIgcmVwcmVzZW50cyBhIGhhc2hpbmcgYWxnb3JpdGhtIGltcGxlbWVudGF0aW9uIHRoYXQgcHJvZHVjZXMgYXNcbiAqIGBNdWx0aWhhc2hEaWdlc3RgLlxuICpcbiAqIEB0ZW1wbGF0ZSB7c3RyaW5nfSBOYW1lXG4gKiBAdGVtcGxhdGUge251bWJlcn0gQ29kZVxuICogQGNsYXNzXG4gKiBAaW1wbGVtZW50cyB7TXVsdGloYXNoSGFzaGVyPENvZGU+fVxuICovXG5leHBvcnQgY2xhc3MgSGFzaGVyIHtcbiAgLyoqXG4gICAqXG4gICAqIEBwYXJhbSB7TmFtZX0gbmFtZVxuICAgKiBAcGFyYW0ge0NvZGV9IGNvZGVcbiAgICogQHBhcmFtIHsoaW5wdXQ6IFVpbnQ4QXJyYXkpID0+IEF3YWl0PFVpbnQ4QXJyYXk+fSBlbmNvZGVcbiAgICovXG4gIGNvbnN0cnVjdG9yIChuYW1lLCBjb2RlLCBlbmNvZGUpIHtcbiAgICB0aGlzLm5hbWUgPSBuYW1lXG4gICAgdGhpcy5jb2RlID0gY29kZVxuICAgIHRoaXMuZW5jb2RlID0gZW5jb2RlXG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtVaW50OEFycmF5fSBpbnB1dFxuICAgKiBAcmV0dXJucyB7QXdhaXQ8RGlnZXN0LkRpZ2VzdDxDb2RlLCBudW1iZXI+Pn1cbiAgICovXG4gIGRpZ2VzdCAoaW5wdXQpIHtcbiAgICBpZiAoaW5wdXQgaW5zdGFuY2VvZiBVaW50OEFycmF5KSB7XG4gICAgICBjb25zdCByZXN1bHQgPSB0aGlzLmVuY29kZShpbnB1dClcbiAgICAgIHJldHVybiByZXN1bHQgaW5zdGFuY2VvZiBVaW50OEFycmF5XG4gICAgICAgID8gRGlnZXN0LmNyZWF0ZSh0aGlzLmNvZGUsIHJlc3VsdClcbiAgICAgICAgLyogYzggaWdub3JlIG5leHQgMSAqL1xuICAgICAgICA6IHJlc3VsdC50aGVuKGRpZ2VzdCA9PiBEaWdlc3QuY3JlYXRlKHRoaXMuY29kZSwgZGlnZXN0KSlcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgRXJyb3IoJ1Vua25vd24gdHlwZSwgbXVzdCBiZSBiaW5hcnkgdHlwZScpXG4gICAgICAvKiBjOCBpZ25vcmUgbmV4dCAxICovXG4gICAgfVxuICB9XG59XG5cbi8qKlxuICogQHRlbXBsYXRlIHtudW1iZXJ9IEFsZ1xuICogQHR5cGVkZWYge2ltcG9ydCgnLi9pbnRlcmZhY2UuanMnKS5NdWx0aWhhc2hIYXNoZXJ9IE11bHRpaGFzaEhhc2hlclxuICovXG5cbi8qKlxuICogQHRlbXBsYXRlIFRcbiAqIEB0eXBlZGVmIHtQcm9taXNlPFQ+fFR9IEF3YWl0XG4gKi9cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/hashes/hasher.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/hashes/identity.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/hashes/identity.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   identity: () => (/* binding */ identity)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bytes.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bytes.js\");\n/* harmony import */ var _digest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./digest.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/hashes/digest.js\");\n\n\n\nconst code = 0x0\nconst name = 'identity'\n\n/** @type {(input:Uint8Array) => Uint8Array} */\nconst encode = _bytes_js__WEBPACK_IMPORTED_MODULE_0__.coerce\n\n/**\n * @param {Uint8Array} input\n * @returns {Digest.Digest<typeof code, number>}\n */\nconst digest = (input) => _digest_js__WEBPACK_IMPORTED_MODULE_1__.create(code, encode(input))\n\nconst identity = { code, name, encode, digest }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL3NyYy9oYXNoZXMvaWRlbnRpdHkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQW9DO0FBQ0M7O0FBRXJDO0FBQ0E7O0FBRUEsV0FBVyxrQ0FBa0M7QUFDN0MsZUFBZSw2Q0FBTTs7QUFFckI7QUFDQSxXQUFXLFlBQVk7QUFDdkIsYUFBYTtBQUNiO0FBQ0EsMEJBQTBCLDhDQUFhOztBQUVoQyxtQkFBbUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2UtMi9uZXh0anMvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL3NyYy9oYXNoZXMvaWRlbnRpdHkuanM/NjU3ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb2VyY2UgfSBmcm9tICcuLi9ieXRlcy5qcydcbmltcG9ydCAqIGFzIERpZ2VzdCBmcm9tICcuL2RpZ2VzdC5qcydcblxuY29uc3QgY29kZSA9IDB4MFxuY29uc3QgbmFtZSA9ICdpZGVudGl0eSdcblxuLyoqIEB0eXBlIHsoaW5wdXQ6VWludDhBcnJheSkgPT4gVWludDhBcnJheX0gKi9cbmNvbnN0IGVuY29kZSA9IGNvZXJjZVxuXG4vKipcbiAqIEBwYXJhbSB7VWludDhBcnJheX0gaW5wdXRcbiAqIEByZXR1cm5zIHtEaWdlc3QuRGlnZXN0PHR5cGVvZiBjb2RlLCBudW1iZXI+fVxuICovXG5jb25zdCBkaWdlc3QgPSAoaW5wdXQpID0+IERpZ2VzdC5jcmVhdGUoY29kZSwgZW5jb2RlKGlucHV0KSlcblxuZXhwb3J0IGNvbnN0IGlkZW50aXR5ID0geyBjb2RlLCBuYW1lLCBlbmNvZGUsIGRpZ2VzdCB9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/hashes/identity.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/hashes/sha2.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/hashes/sha2.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sha256: () => (/* binding */ sha256),\n/* harmony export */   sha512: () => (/* binding */ sha512)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../bytes.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bytes.js\");\n/* harmony import */ var _hasher_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hasher.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/hashes/hasher.js\");\n// @ts-check\n\n\n\n\n\nconst sha256 = (0,_hasher_js__WEBPACK_IMPORTED_MODULE_2__.from)({\n  name: 'sha2-256',\n  code: 0x12,\n  encode: (input) => (0,_bytes_js__WEBPACK_IMPORTED_MODULE_1__.coerce)(crypto__WEBPACK_IMPORTED_MODULE_0__.createHash('sha256').update(input).digest())\n})\n\nconst sha512 = (0,_hasher_js__WEBPACK_IMPORTED_MODULE_2__.from)({\n  name: 'sha2-512',\n  code: 0x13,\n  encode: input => (0,_bytes_js__WEBPACK_IMPORTED_MODULE_1__.coerce)(crypto__WEBPACK_IMPORTED_MODULE_0__.createHash('sha512').update(input).digest())\n})\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL3NyYy9oYXNoZXMvc2hhMi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOztBQUUyQjtBQUNTO0FBQ0Y7O0FBRTNCLGVBQWUsZ0RBQUk7QUFDMUI7QUFDQTtBQUNBLHFCQUFxQixpREFBTSxDQUFDLDhDQUFpQjtBQUM3QyxDQUFDOztBQUVNLGVBQWUsZ0RBQUk7QUFDMUI7QUFDQTtBQUNBLG1CQUFtQixpREFBTSxDQUFDLDhDQUFpQjtBQUMzQyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNlLTIvbmV4dGpzLy4vbm9kZV9tb2R1bGVzL2lwZnMtY29yZS11dGlscy9ub2RlX21vZHVsZXMvdWludDhhcnJheXMvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9zcmMvaGFzaGVzL3NoYTIuanM/NTRlYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtY2hlY2tcblxuaW1wb3J0IGNyeXB0byBmcm9tICdjcnlwdG8nXG5pbXBvcnQgeyBjb2VyY2UgfSBmcm9tICcuLi9ieXRlcy5qcydcbmltcG9ydCB7IGZyb20gfSBmcm9tICcuL2hhc2hlci5qcydcblxuZXhwb3J0IGNvbnN0IHNoYTI1NiA9IGZyb20oe1xuICBuYW1lOiAnc2hhMi0yNTYnLFxuICBjb2RlOiAweDEyLFxuICBlbmNvZGU6IChpbnB1dCkgPT4gY29lcmNlKGNyeXB0by5jcmVhdGVIYXNoKCdzaGEyNTYnKS51cGRhdGUoaW5wdXQpLmRpZ2VzdCgpKVxufSlcblxuZXhwb3J0IGNvbnN0IHNoYTUxMiA9IGZyb20oe1xuICBuYW1lOiAnc2hhMi01MTInLFxuICBjb2RlOiAweDEzLFxuICBlbmNvZGU6IGlucHV0ID0+IGNvZXJjZShjcnlwdG8uY3JlYXRlSGFzaCgnc2hhNTEyJykudXBkYXRlKGlucHV0KS5kaWdlc3QoKSlcbn0pXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/hashes/sha2.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/index.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/index.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CID: () => (/* reexport safe */ _cid_js__WEBPACK_IMPORTED_MODULE_1__.CID),\n/* harmony export */   bytes: () => (/* reexport module object */ _bytes_js__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   digest: () => (/* reexport module object */ _hashes_digest_js__WEBPACK_IMPORTED_MODULE_2__),\n/* harmony export */   hasher: () => (/* reexport module object */ _hashes_hasher_js__WEBPACK_IMPORTED_MODULE_3__),\n/* harmony export */   varint: () => (/* reexport module object */ _varint_js__WEBPACK_IMPORTED_MODULE_4__)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bytes.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/bytes.js\");\n/* harmony import */ var _cid_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cid.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/cid.js\");\n/* harmony import */ var _hashes_digest_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hashes/digest.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/hashes/digest.js\");\n/* harmony import */ var _hashes_hasher_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./hashes/hasher.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/hashes/hasher.js\");\n/* harmony import */ var _varint_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./varint.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/varint.js\");\n/* harmony import */ var _interface_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./interface.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/interface.js\");\n\n\n\n\n\n\n// This way TS will also expose all the types from module\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL3NyYy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFtQztBQUNMO0FBQ2M7QUFDQTtBQUNQOztBQUVyQztBQUM4Qjs7QUFFZSIsInNvdXJjZXMiOlsid2VicGFjazovL0BzZS0yL25leHRqcy8uL25vZGVfbW9kdWxlcy9pcGZzLWNvcmUtdXRpbHMvbm9kZV9tb2R1bGVzL3VpbnQ4YXJyYXlzL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvc3JjL2luZGV4LmpzPzY0YzEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgYnl0ZXMgZnJvbSAnLi9ieXRlcy5qcydcbmltcG9ydCB7IENJRCB9IGZyb20gJy4vY2lkLmpzJ1xuaW1wb3J0ICogYXMgZGlnZXN0IGZyb20gJy4vaGFzaGVzL2RpZ2VzdC5qcydcbmltcG9ydCAqIGFzIGhhc2hlciBmcm9tICcuL2hhc2hlcy9oYXNoZXIuanMnXG5pbXBvcnQgKiBhcyB2YXJpbnQgZnJvbSAnLi92YXJpbnQuanMnXG5cbi8vIFRoaXMgd2F5IFRTIHdpbGwgYWxzbyBleHBvc2UgYWxsIHRoZSB0eXBlcyBmcm9tIG1vZHVsZVxuZXhwb3J0ICogZnJvbSAnLi9pbnRlcmZhY2UuanMnXG5cbmV4cG9ydCB7IENJRCwgaGFzaGVyLCBkaWdlc3QsIHZhcmludCwgYnl0ZXMgfVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/interface.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/interface.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// this is dummy module overlayed by interface.ts\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL3NyYy9pbnRlcmZhY2UuanMiLCJtYXBwaW5ncyI6IjtBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNlLTIvbmV4dGpzLy4vbm9kZV9tb2R1bGVzL2lwZnMtY29yZS11dGlscy9ub2RlX21vZHVsZXMvdWludDhhcnJheXMvbm9kZV9tb2R1bGVzL211bHRpZm9ybWF0cy9zcmMvaW50ZXJmYWNlLmpzPzc5NmUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gdGhpcyBpcyBkdW1teSBtb2R1bGUgb3ZlcmxheWVkIGJ5IGludGVyZmFjZS50c1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/interface.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/link/interface.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/link/interface.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// this is dummy module overlayed by interface.ts\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL3NyYy9saW5rL2ludGVyZmFjZS5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2UtMi9uZXh0anMvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL3NyYy9saW5rL2ludGVyZmFjZS5qcz80ZGJlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHRoaXMgaXMgZHVtbXkgbW9kdWxlIG92ZXJsYXllZCBieSBpbnRlcmZhY2UudHNcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/link/interface.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/varint.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/varint.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encodeTo: () => (/* binding */ encodeTo),\n/* harmony export */   encodingLength: () => (/* binding */ encodingLength)\n/* harmony export */ });\n/* harmony import */ var _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../vendor/varint.js */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/vendor/varint.js\");\n\n\n/**\n * @param {Uint8Array} data\n * @param {number} [offset=0]\n * @returns {[number, number]}\n */\nconst decode = (data, offset = 0) => {\n  const code = _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].decode(data, offset)\n  return [code, _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].decode.bytes]\n}\n\n/**\n * @param {number} int\n * @param {Uint8Array} target\n * @param {number} [offset=0]\n */\nconst encodeTo = (int, target, offset = 0) => {\n  _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].encode(int, target, offset)\n  return target\n}\n\n/**\n * @param {number} int\n * @returns {number}\n */\nconst encodingLength = (int) => {\n  return _vendor_varint_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].encodingLength(int)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL3NyYy92YXJpbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF3Qzs7QUFFeEM7QUFDQSxXQUFXLFlBQVk7QUFDdkIsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNPO0FBQ1AsZUFBZSx5REFBTTtBQUNyQixnQkFBZ0IseURBQU07QUFDdEI7O0FBRUE7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxZQUFZO0FBQ3ZCLFdBQVcsUUFBUTtBQUNuQjtBQUNPO0FBQ1AsRUFBRSx5REFBTTtBQUNSO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYTtBQUNiO0FBQ087QUFDUCxTQUFTLHlEQUFNO0FBQ2YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2UtMi9uZXh0anMvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL3NyYy92YXJpbnQuanM/MGMzZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdmFyaW50IGZyb20gJy4uL3ZlbmRvci92YXJpbnQuanMnXG5cbi8qKlxuICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhXG4gKiBAcGFyYW0ge251bWJlcn0gW29mZnNldD0wXVxuICogQHJldHVybnMge1tudW1iZXIsIG51bWJlcl19XG4gKi9cbmV4cG9ydCBjb25zdCBkZWNvZGUgPSAoZGF0YSwgb2Zmc2V0ID0gMCkgPT4ge1xuICBjb25zdCBjb2RlID0gdmFyaW50LmRlY29kZShkYXRhLCBvZmZzZXQpXG4gIHJldHVybiBbY29kZSwgdmFyaW50LmRlY29kZS5ieXRlc11cbn1cblxuLyoqXG4gKiBAcGFyYW0ge251bWJlcn0gaW50XG4gKiBAcGFyYW0ge1VpbnQ4QXJyYXl9IHRhcmdldFxuICogQHBhcmFtIHtudW1iZXJ9IFtvZmZzZXQ9MF1cbiAqL1xuZXhwb3J0IGNvbnN0IGVuY29kZVRvID0gKGludCwgdGFyZ2V0LCBvZmZzZXQgPSAwKSA9PiB7XG4gIHZhcmludC5lbmNvZGUoaW50LCB0YXJnZXQsIG9mZnNldClcbiAgcmV0dXJuIHRhcmdldFxufVxuXG4vKipcbiAqIEBwYXJhbSB7bnVtYmVyfSBpbnRcbiAqIEByZXR1cm5zIHtudW1iZXJ9XG4gKi9cbmV4cG9ydCBjb25zdCBlbmNvZGluZ0xlbmd0aCA9IChpbnQpID0+IHtcbiAgcmV0dXJuIHZhcmludC5lbmNvZGluZ0xlbmd0aChpbnQpXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/src/varint.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/vendor/base-x.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/vendor/base-x.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET, name) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) ; else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0;\n    var b58 = new Uint8Array(size);\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0;\n        b58[it1] = (carry % BASE) >>> 0;\n        carry = (carry / BASE) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      pbegin++;\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]); }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0;\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0; // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size);\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0;\n        b256[it3] = (carry % 256) >>> 0;\n        carry = (carry / 256) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      psz++;\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) { return buffer }\n    throw new Error(`Non-${name} character`)\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nvar src = base;\n\nvar _brrp__multiformats_scope_baseX = src;\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_brrp__multiformats_scope_baseX);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL3ZlbmRvci9iYXNlLXguanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQztBQUNoQztBQUNBLGtCQUFrQixxQkFBcUI7QUFDdkM7QUFDQTtBQUNBLGtCQUFrQixxQkFBcUI7QUFDdkM7QUFDQTtBQUNBLGdDQUFnQztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBLCtDQUErQztBQUMvQyxnREFBZ0Q7QUFDaEQ7QUFDQSx3Q0FBd0M7QUFDeEM7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLDJDQUEyQztBQUMzQywrQkFBK0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQiw2Q0FBNkM7QUFDNUU7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFlBQVksU0FBUztBQUNoQztBQUNBO0FBQ0E7QUFDQSxzQ0FBc0M7QUFDdEMsK0JBQStCO0FBQy9CO0FBQ0E7QUFDQSwrQkFBK0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZEQUE2RDtBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQSwrQkFBK0IsNkNBQTZDO0FBQzVFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEIsMkJBQTJCLE1BQU07QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxpRUFBZSwrQkFBK0IsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0BzZS0yL25leHRqcy8uL25vZGVfbW9kdWxlcy9pcGZzLWNvcmUtdXRpbHMvbm9kZV9tb2R1bGVzL3VpbnQ4YXJyYXlzL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvdmVuZG9yL2Jhc2UteC5qcz9iN2Y2Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGJhc2UteCBlbmNvZGluZyAvIGRlY29kaW5nXG4vLyBDb3B5cmlnaHQgKGMpIDIwMTggYmFzZS14IGNvbnRyaWJ1dG9yc1xuLy8gQ29weXJpZ2h0IChjKSAyMDE0LTIwMTggVGhlIEJpdGNvaW4gQ29yZSBkZXZlbG9wZXJzIChiYXNlNTguY3BwKVxuLy8gRGlzdHJpYnV0ZWQgdW5kZXIgdGhlIE1JVCBzb2Z0d2FyZSBsaWNlbnNlLCBzZWUgdGhlIGFjY29tcGFueWluZ1xuLy8gZmlsZSBMSUNFTlNFIG9yIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwLlxuZnVuY3Rpb24gYmFzZSAoQUxQSEFCRVQsIG5hbWUpIHtcbiAgaWYgKEFMUEhBQkVULmxlbmd0aCA+PSAyNTUpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcignQWxwaGFiZXQgdG9vIGxvbmcnKSB9XG4gIHZhciBCQVNFX01BUCA9IG5ldyBVaW50OEFycmF5KDI1Nik7XG4gIGZvciAodmFyIGogPSAwOyBqIDwgQkFTRV9NQVAubGVuZ3RoOyBqKyspIHtcbiAgICBCQVNFX01BUFtqXSA9IDI1NTtcbiAgfVxuICBmb3IgKHZhciBpID0gMDsgaSA8IEFMUEhBQkVULmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHggPSBBTFBIQUJFVC5jaGFyQXQoaSk7XG4gICAgdmFyIHhjID0geC5jaGFyQ29kZUF0KDApO1xuICAgIGlmIChCQVNFX01BUFt4Y10gIT09IDI1NSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKHggKyAnIGlzIGFtYmlndW91cycpIH1cbiAgICBCQVNFX01BUFt4Y10gPSBpO1xuICB9XG4gIHZhciBCQVNFID0gQUxQSEFCRVQubGVuZ3RoO1xuICB2YXIgTEVBREVSID0gQUxQSEFCRVQuY2hhckF0KDApO1xuICB2YXIgRkFDVE9SID0gTWF0aC5sb2coQkFTRSkgLyBNYXRoLmxvZygyNTYpOyAvLyBsb2coQkFTRSkgLyBsb2coMjU2KSwgcm91bmRlZCB1cFxuICB2YXIgaUZBQ1RPUiA9IE1hdGgubG9nKDI1NikgLyBNYXRoLmxvZyhCQVNFKTsgLy8gbG9nKDI1NikgLyBsb2coQkFTRSksIHJvdW5kZWQgdXBcbiAgZnVuY3Rpb24gZW5jb2RlIChzb3VyY2UpIHtcbiAgICBpZiAoc291cmNlIGluc3RhbmNlb2YgVWludDhBcnJheSkgOyBlbHNlIGlmIChBcnJheUJ1ZmZlci5pc1ZpZXcoc291cmNlKSkge1xuICAgICAgc291cmNlID0gbmV3IFVpbnQ4QXJyYXkoc291cmNlLmJ1ZmZlciwgc291cmNlLmJ5dGVPZmZzZXQsIHNvdXJjZS5ieXRlTGVuZ3RoKTtcbiAgICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkoc291cmNlKSkge1xuICAgICAgc291cmNlID0gVWludDhBcnJheS5mcm9tKHNvdXJjZSk7XG4gICAgfVxuICAgIGlmICghKHNvdXJjZSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFVpbnQ4QXJyYXknKSB9XG4gICAgaWYgKHNvdXJjZS5sZW5ndGggPT09IDApIHsgcmV0dXJuICcnIH1cbiAgICAgICAgLy8gU2tpcCAmIGNvdW50IGxlYWRpbmcgemVyb2VzLlxuICAgIHZhciB6ZXJvZXMgPSAwO1xuICAgIHZhciBsZW5ndGggPSAwO1xuICAgIHZhciBwYmVnaW4gPSAwO1xuICAgIHZhciBwZW5kID0gc291cmNlLmxlbmd0aDtcbiAgICB3aGlsZSAocGJlZ2luICE9PSBwZW5kICYmIHNvdXJjZVtwYmVnaW5dID09PSAwKSB7XG4gICAgICBwYmVnaW4rKztcbiAgICAgIHplcm9lcysrO1xuICAgIH1cbiAgICAgICAgLy8gQWxsb2NhdGUgZW5vdWdoIHNwYWNlIGluIGJpZy1lbmRpYW4gYmFzZTU4IHJlcHJlc2VudGF0aW9uLlxuICAgIHZhciBzaXplID0gKChwZW5kIC0gcGJlZ2luKSAqIGlGQUNUT1IgKyAxKSA+Pj4gMDtcbiAgICB2YXIgYjU4ID0gbmV3IFVpbnQ4QXJyYXkoc2l6ZSk7XG4gICAgICAgIC8vIFByb2Nlc3MgdGhlIGJ5dGVzLlxuICAgIHdoaWxlIChwYmVnaW4gIT09IHBlbmQpIHtcbiAgICAgIHZhciBjYXJyeSA9IHNvdXJjZVtwYmVnaW5dO1xuICAgICAgICAgICAgLy8gQXBwbHkgXCJiNTggPSBiNTggKiAyNTYgKyBjaFwiLlxuICAgICAgdmFyIGkgPSAwO1xuICAgICAgZm9yICh2YXIgaXQxID0gc2l6ZSAtIDE7IChjYXJyeSAhPT0gMCB8fCBpIDwgbGVuZ3RoKSAmJiAoaXQxICE9PSAtMSk7IGl0MS0tLCBpKyspIHtcbiAgICAgICAgY2FycnkgKz0gKDI1NiAqIGI1OFtpdDFdKSA+Pj4gMDtcbiAgICAgICAgYjU4W2l0MV0gPSAoY2FycnkgJSBCQVNFKSA+Pj4gMDtcbiAgICAgICAgY2FycnkgPSAoY2FycnkgLyBCQVNFKSA+Pj4gMDtcbiAgICAgIH1cbiAgICAgIGlmIChjYXJyeSAhPT0gMCkgeyB0aHJvdyBuZXcgRXJyb3IoJ05vbi16ZXJvIGNhcnJ5JykgfVxuICAgICAgbGVuZ3RoID0gaTtcbiAgICAgIHBiZWdpbisrO1xuICAgIH1cbiAgICAgICAgLy8gU2tpcCBsZWFkaW5nIHplcm9lcyBpbiBiYXNlNTggcmVzdWx0LlxuICAgIHZhciBpdDIgPSBzaXplIC0gbGVuZ3RoO1xuICAgIHdoaWxlIChpdDIgIT09IHNpemUgJiYgYjU4W2l0Ml0gPT09IDApIHtcbiAgICAgIGl0MisrO1xuICAgIH1cbiAgICAgICAgLy8gVHJhbnNsYXRlIHRoZSByZXN1bHQgaW50byBhIHN0cmluZy5cbiAgICB2YXIgc3RyID0gTEVBREVSLnJlcGVhdCh6ZXJvZXMpO1xuICAgIGZvciAoOyBpdDIgPCBzaXplOyArK2l0MikgeyBzdHIgKz0gQUxQSEFCRVQuY2hhckF0KGI1OFtpdDJdKTsgfVxuICAgIHJldHVybiBzdHJcbiAgfVxuICBmdW5jdGlvbiBkZWNvZGVVbnNhZmUgKHNvdXJjZSkge1xuICAgIGlmICh0eXBlb2Ygc291cmNlICE9PSAnc3RyaW5nJykgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBTdHJpbmcnKSB9XG4gICAgaWYgKHNvdXJjZS5sZW5ndGggPT09IDApIHsgcmV0dXJuIG5ldyBVaW50OEFycmF5KCkgfVxuICAgIHZhciBwc3ogPSAwO1xuICAgICAgICAvLyBTa2lwIGxlYWRpbmcgc3BhY2VzLlxuICAgIGlmIChzb3VyY2VbcHN6XSA9PT0gJyAnKSB7IHJldHVybiB9XG4gICAgICAgIC8vIFNraXAgYW5kIGNvdW50IGxlYWRpbmcgJzEncy5cbiAgICB2YXIgemVyb2VzID0gMDtcbiAgICB2YXIgbGVuZ3RoID0gMDtcbiAgICB3aGlsZSAoc291cmNlW3Bzel0gPT09IExFQURFUikge1xuICAgICAgemVyb2VzKys7XG4gICAgICBwc3orKztcbiAgICB9XG4gICAgICAgIC8vIEFsbG9jYXRlIGVub3VnaCBzcGFjZSBpbiBiaWctZW5kaWFuIGJhc2UyNTYgcmVwcmVzZW50YXRpb24uXG4gICAgdmFyIHNpemUgPSAoKChzb3VyY2UubGVuZ3RoIC0gcHN6KSAqIEZBQ1RPUikgKyAxKSA+Pj4gMDsgLy8gbG9nKDU4KSAvIGxvZygyNTYpLCByb3VuZGVkIHVwLlxuICAgIHZhciBiMjU2ID0gbmV3IFVpbnQ4QXJyYXkoc2l6ZSk7XG4gICAgICAgIC8vIFByb2Nlc3MgdGhlIGNoYXJhY3RlcnMuXG4gICAgd2hpbGUgKHNvdXJjZVtwc3pdKSB7XG4gICAgICAgICAgICAvLyBEZWNvZGUgY2hhcmFjdGVyXG4gICAgICB2YXIgY2FycnkgPSBCQVNFX01BUFtzb3VyY2UuY2hhckNvZGVBdChwc3opXTtcbiAgICAgICAgICAgIC8vIEludmFsaWQgY2hhcmFjdGVyXG4gICAgICBpZiAoY2FycnkgPT09IDI1NSkgeyByZXR1cm4gfVxuICAgICAgdmFyIGkgPSAwO1xuICAgICAgZm9yICh2YXIgaXQzID0gc2l6ZSAtIDE7IChjYXJyeSAhPT0gMCB8fCBpIDwgbGVuZ3RoKSAmJiAoaXQzICE9PSAtMSk7IGl0My0tLCBpKyspIHtcbiAgICAgICAgY2FycnkgKz0gKEJBU0UgKiBiMjU2W2l0M10pID4+PiAwO1xuICAgICAgICBiMjU2W2l0M10gPSAoY2FycnkgJSAyNTYpID4+PiAwO1xuICAgICAgICBjYXJyeSA9IChjYXJyeSAvIDI1NikgPj4+IDA7XG4gICAgICB9XG4gICAgICBpZiAoY2FycnkgIT09IDApIHsgdGhyb3cgbmV3IEVycm9yKCdOb24temVybyBjYXJyeScpIH1cbiAgICAgIGxlbmd0aCA9IGk7XG4gICAgICBwc3orKztcbiAgICB9XG4gICAgICAgIC8vIFNraXAgdHJhaWxpbmcgc3BhY2VzLlxuICAgIGlmIChzb3VyY2VbcHN6XSA9PT0gJyAnKSB7IHJldHVybiB9XG4gICAgICAgIC8vIFNraXAgbGVhZGluZyB6ZXJvZXMgaW4gYjI1Ni5cbiAgICB2YXIgaXQ0ID0gc2l6ZSAtIGxlbmd0aDtcbiAgICB3aGlsZSAoaXQ0ICE9PSBzaXplICYmIGIyNTZbaXQ0XSA9PT0gMCkge1xuICAgICAgaXQ0Kys7XG4gICAgfVxuICAgIHZhciB2Y2ggPSBuZXcgVWludDhBcnJheSh6ZXJvZXMgKyAoc2l6ZSAtIGl0NCkpO1xuICAgIHZhciBqID0gemVyb2VzO1xuICAgIHdoaWxlIChpdDQgIT09IHNpemUpIHtcbiAgICAgIHZjaFtqKytdID0gYjI1NltpdDQrK107XG4gICAgfVxuICAgIHJldHVybiB2Y2hcbiAgfVxuICBmdW5jdGlvbiBkZWNvZGUgKHN0cmluZykge1xuICAgIHZhciBidWZmZXIgPSBkZWNvZGVVbnNhZmUoc3RyaW5nKTtcbiAgICBpZiAoYnVmZmVyKSB7IHJldHVybiBidWZmZXIgfVxuICAgIHRocm93IG5ldyBFcnJvcihgTm9uLSR7bmFtZX0gY2hhcmFjdGVyYClcbiAgfVxuICByZXR1cm4ge1xuICAgIGVuY29kZTogZW5jb2RlLFxuICAgIGRlY29kZVVuc2FmZTogZGVjb2RlVW5zYWZlLFxuICAgIGRlY29kZTogZGVjb2RlXG4gIH1cbn1cbnZhciBzcmMgPSBiYXNlO1xuXG52YXIgX2JycnBfX211bHRpZm9ybWF0c19zY29wZV9iYXNlWCA9IHNyYztcblxuZXhwb3J0IGRlZmF1bHQgX2JycnBfX211bHRpZm9ybWF0c19zY29wZV9iYXNlWDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/vendor/base-x.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/vendor/varint.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/vendor/varint.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nvar encode_1 = encode;\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31);\n\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB;\n    num /= 128;\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  \n  encode.bytes = offset - oldOffset + 1;\n  \n  return out\n}\n\nvar decode = read;\n\nvar MSB$1 = 0x80\n  , REST$1 = 0x7F;\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length;\n\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++];\n    res += shift < 28\n      ? (b & REST$1) << shift\n      : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1)\n\n  read.bytes = counter - offset;\n\n  return res\n}\n\nvar N1 = Math.pow(2,  7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\n\nvar length = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n};\n\nvar varint = {\n    encode: encode_1\n  , decode: decode\n  , encodingLength: length\n};\n\nvar _brrp_varint = varint;\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_brrp_varint);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL25vZGVfbW9kdWxlcy91aW50OGFycmF5cy9ub2RlX21vZHVsZXMvbXVsdGlmb3JtYXRzL3ZlbmRvci92YXJpbnQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7O0FBRUo7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLGlFQUFlLFlBQVksRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0BzZS0yL25leHRqcy8uL25vZGVfbW9kdWxlcy9pcGZzLWNvcmUtdXRpbHMvbm9kZV9tb2R1bGVzL3VpbnQ4YXJyYXlzL25vZGVfbW9kdWxlcy9tdWx0aWZvcm1hdHMvdmVuZG9yL3ZhcmludC5qcz83MDMxIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBlbmNvZGVfMSA9IGVuY29kZTtcblxudmFyIE1TQiA9IDB4ODBcbiAgLCBSRVNUID0gMHg3RlxuICAsIE1TQkFMTCA9IH5SRVNUXG4gICwgSU5UID0gTWF0aC5wb3coMiwgMzEpO1xuXG5mdW5jdGlvbiBlbmNvZGUobnVtLCBvdXQsIG9mZnNldCkge1xuICBvdXQgPSBvdXQgfHwgW107XG4gIG9mZnNldCA9IG9mZnNldCB8fCAwO1xuICB2YXIgb2xkT2Zmc2V0ID0gb2Zmc2V0O1xuXG4gIHdoaWxlKG51bSA+PSBJTlQpIHtcbiAgICBvdXRbb2Zmc2V0KytdID0gKG51bSAmIDB4RkYpIHwgTVNCO1xuICAgIG51bSAvPSAxMjg7XG4gIH1cbiAgd2hpbGUobnVtICYgTVNCQUxMKSB7XG4gICAgb3V0W29mZnNldCsrXSA9IChudW0gJiAweEZGKSB8IE1TQjtcbiAgICBudW0gPj4+PSA3O1xuICB9XG4gIG91dFtvZmZzZXRdID0gbnVtIHwgMDtcbiAgXG4gIGVuY29kZS5ieXRlcyA9IG9mZnNldCAtIG9sZE9mZnNldCArIDE7XG4gIFxuICByZXR1cm4gb3V0XG59XG5cbnZhciBkZWNvZGUgPSByZWFkO1xuXG52YXIgTVNCJDEgPSAweDgwXG4gICwgUkVTVCQxID0gMHg3RjtcblxuZnVuY3Rpb24gcmVhZChidWYsIG9mZnNldCkge1xuICB2YXIgcmVzICAgID0gMFxuICAgICwgb2Zmc2V0ID0gb2Zmc2V0IHx8IDBcbiAgICAsIHNoaWZ0ICA9IDBcbiAgICAsIGNvdW50ZXIgPSBvZmZzZXRcbiAgICAsIGJcbiAgICAsIGwgPSBidWYubGVuZ3RoO1xuXG4gIGRvIHtcbiAgICBpZiAoY291bnRlciA+PSBsKSB7XG4gICAgICByZWFkLmJ5dGVzID0gMDtcbiAgICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdDb3VsZCBub3QgZGVjb2RlIHZhcmludCcpXG4gICAgfVxuICAgIGIgPSBidWZbY291bnRlcisrXTtcbiAgICByZXMgKz0gc2hpZnQgPCAyOFxuICAgICAgPyAoYiAmIFJFU1QkMSkgPDwgc2hpZnRcbiAgICAgIDogKGIgJiBSRVNUJDEpICogTWF0aC5wb3coMiwgc2hpZnQpO1xuICAgIHNoaWZ0ICs9IDc7XG4gIH0gd2hpbGUgKGIgPj0gTVNCJDEpXG5cbiAgcmVhZC5ieXRlcyA9IGNvdW50ZXIgLSBvZmZzZXQ7XG5cbiAgcmV0dXJuIHJlc1xufVxuXG52YXIgTjEgPSBNYXRoLnBvdygyLCAgNyk7XG52YXIgTjIgPSBNYXRoLnBvdygyLCAxNCk7XG52YXIgTjMgPSBNYXRoLnBvdygyLCAyMSk7XG52YXIgTjQgPSBNYXRoLnBvdygyLCAyOCk7XG52YXIgTjUgPSBNYXRoLnBvdygyLCAzNSk7XG52YXIgTjYgPSBNYXRoLnBvdygyLCA0Mik7XG52YXIgTjcgPSBNYXRoLnBvdygyLCA0OSk7XG52YXIgTjggPSBNYXRoLnBvdygyLCA1Nik7XG52YXIgTjkgPSBNYXRoLnBvdygyLCA2Myk7XG5cbnZhciBsZW5ndGggPSBmdW5jdGlvbiAodmFsdWUpIHtcbiAgcmV0dXJuIChcbiAgICB2YWx1ZSA8IE4xID8gMVxuICA6IHZhbHVlIDwgTjIgPyAyXG4gIDogdmFsdWUgPCBOMyA/IDNcbiAgOiB2YWx1ZSA8IE40ID8gNFxuICA6IHZhbHVlIDwgTjUgPyA1XG4gIDogdmFsdWUgPCBONiA/IDZcbiAgOiB2YWx1ZSA8IE43ID8gN1xuICA6IHZhbHVlIDwgTjggPyA4XG4gIDogdmFsdWUgPCBOOSA/IDlcbiAgOiAgICAgICAgICAgICAgMTBcbiAgKVxufTtcblxudmFyIHZhcmludCA9IHtcbiAgICBlbmNvZGU6IGVuY29kZV8xXG4gICwgZGVjb2RlOiBkZWNvZGVcbiAgLCBlbmNvZGluZ0xlbmd0aDogbGVuZ3RoXG59O1xuXG52YXIgX2JycnBfdmFyaW50ID0gdmFyaW50O1xuXG5leHBvcnQgZGVmYXVsdCBfYnJycF92YXJpbnQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/node_modules/multiformats/vendor/varint.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/src/agent.js":
/*!***************************************************!*\
  !*** ./node_modules/ipfs-core-utils/src/agent.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! http */ \"http\");\n/* harmony import */ var https__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! https */ \"https\");\n\n\n\n/**\n * @param {URL} [url]\n */\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((url) => {\n  if (!url) {\n    throw new Error('URL required')\n  }\n\n  return url.protocol.startsWith('https') ? https__WEBPACK_IMPORTED_MODULE_1__.Agent : http__WEBPACK_IMPORTED_MODULE_0__.Agent\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL3NyYy9hZ2VudC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBdUI7QUFDRTs7QUFFekI7QUFDQSxXQUFXLEtBQUs7QUFDaEI7QUFDQSxpRUFBZTtBQUNmO0FBQ0E7QUFDQTs7QUFFQSw0Q0FBNEMsd0NBQVcsR0FBRyx1Q0FBVTtBQUNwRSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNlLTIvbmV4dGpzLy4vbm9kZV9tb2R1bGVzL2lwZnMtY29yZS11dGlscy9zcmMvYWdlbnQuanM/MWM0MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgaHR0cCBmcm9tICdodHRwJ1xuaW1wb3J0IGh0dHBzIGZyb20gJ2h0dHBzJ1xuXG4vKipcbiAqIEBwYXJhbSB7VVJMfSBbdXJsXVxuICovXG5leHBvcnQgZGVmYXVsdCAodXJsKSA9PiB7XG4gIGlmICghdXJsKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdVUkwgcmVxdWlyZWQnKVxuICB9XG5cbiAgcmV0dXJuIHVybC5wcm90b2NvbC5zdGFydHNXaXRoKCdodHRwcycpID8gaHR0cHMuQWdlbnQgOiBodHRwLkFnZW50XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/src/agent.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/src/files/normalise-candidate-multiple.js":
/*!********************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/src/files/normalise-candidate-multiple.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normaliseCandidateMultiple: () => (/* binding */ normaliseCandidateMultiple)\n/* harmony export */ });\n/* harmony import */ var err_code__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! err-code */ \"(rsc)/./node_modules/err-code/index.js\");\n/* harmony import */ var browser_readablestream_to_it__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! browser-readablestream-to-it */ \"(rsc)/./node_modules/browser-readablestream-to-it/dist/src/index.js\");\n/* harmony import */ var it_peekable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! it-peekable */ \"(rsc)/./node_modules/it-peekable/dist/src/index.js\");\n/* harmony import */ var it_map__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! it-map */ \"(rsc)/./node_modules/it-map/dist/src/index.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/ipfs-core-utils/src/files/utils.js\");\n/* harmony import */ var ipfs_unixfs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ipfs-unixfs */ \"(rsc)/./node_modules/ipfs-unixfs/src/index.js\");\n\n\n\n\n\n\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidate} ImportCandidate\n * @typedef {import('ipfs-core-types/src/utils').ToContent} ToContent\n * @typedef {import('ipfs-unixfs-importer').ImportCandidate} ImporterImportCandidate\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidateStream} ImportCandidateStream\n */\n\n/**\n * @param {ImportCandidateStream} input\n * @param {(content:ToContent) => Promise<AsyncIterable<Uint8Array>>} normaliseContent\n */\n// eslint-disable-next-line complexity\nasync function * normaliseCandidateMultiple (input, normaliseContent) {\n  // String\n  // Uint8Array|ArrayBuffer|TypedArray\n  // Blob|File\n  // fs.ReadStream\n  // @ts-expect-error _readableState is a property of a node fs.ReadStream\n  if (typeof input === 'string' || input instanceof String || (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isBytes)(input) || (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isBlob)(input) || input._readableState) {\n    throw err_code__WEBPACK_IMPORTED_MODULE_0__(new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  // Browser ReadableStream\n  if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isReadableStream)(input)) {\n    input = (0,browser_readablestream_to_it__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(input)\n  }\n\n  // Iterable<?>\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    const peekable = (0,it_peekable__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(input)\n    const { value, done } = await peekable.peek()\n\n    if (done) {\n      // make sure empty iterators result in empty files\n      yield * []\n      return\n    }\n\n    peekable.push(value)\n\n    // (Async)Iterable<Number>\n    // (Async)Iterable<Bytes>\n    if (Number.isInteger(value)) {\n      throw err_code__WEBPACK_IMPORTED_MODULE_0__(new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT')\n    }\n\n    // (Async)Iterable<fs.ReadStream>\n    // @ts-expect-error private field\n    if (value._readableState) {\n      // @ts-expect-error Node fs.ReadStreams have a `.path` property so we need to pass it as the content\n      yield * (0,it_map__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(peekable, (/** @type {ImportCandidate} */ value) => toFileObject({ content: value }, normaliseContent))\n      return\n    }\n\n    if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isBytes)(value)) {\n      // @ts-expect-error peekable is still an iterable of ImportCandidates\n      yield toFileObject({ content: peekable }, normaliseContent)\n      return\n    }\n\n    // (Async)Iterable<(Async)Iterable<?>>\n    // (Async)Iterable<ReadableStream<?>>\n    // ReadableStream<(Async)Iterable<?>>\n    // ReadableStream<ReadableStream<?>>\n    if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isFileObject)(value) || value[Symbol.iterator] || value[Symbol.asyncIterator] || (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isReadableStream)(value) || (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isBlob)(value)) {\n      yield * (0,it_map__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(peekable, (/** @type {ImportCandidate} */ value) => toFileObject(value, normaliseContent))\n      return\n    }\n  }\n\n  // { path, content: ? }\n  // Note: Detected _after_ (Async)Iterable<?> because Node.js fs.ReadStreams have a\n  // `path` property that passes this check.\n  if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isFileObject)(input)) {\n    throw err_code__WEBPACK_IMPORTED_MODULE_0__(new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  throw err_code__WEBPACK_IMPORTED_MODULE_0__(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\n}\n\n/**\n * @param {ImportCandidate} input\n * @param {(content:ToContent) => Promise<AsyncIterable<Uint8Array>>} normaliseContent\n */\nasync function toFileObject (input, normaliseContent) {\n  // @ts-expect-error - Those properties don't exist on most input types\n  const { path, mode, mtime, content } = input\n\n  /** @type {ImporterImportCandidate} */\n  const file = {\n    path: path || '',\n    mode: (0,ipfs_unixfs__WEBPACK_IMPORTED_MODULE_5__.parseMode)(mode),\n    mtime: (0,ipfs_unixfs__WEBPACK_IMPORTED_MODULE_5__.parseMtime)(mtime)\n  }\n\n  if (content) {\n    file.content = await normaliseContent(content)\n  } else if (!path) { // Not already a file object with path or content prop\n    // @ts-expect-error - input still can be different ToContent\n    file.content = await normaliseContent(input)\n  }\n\n  return file\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL3NyYy9maWxlcy9ub3JtYWxpc2UtY2FuZGlkYXRlLW11bHRpcGxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBOEI7QUFDOEI7QUFDeEI7QUFDWjtBQU1MO0FBSUM7O0FBRXBCO0FBQ0EsYUFBYSxxREFBcUQ7QUFDbEUsYUFBYSwrQ0FBK0M7QUFDNUQsYUFBYSxnREFBZ0Q7QUFDN0QsYUFBYSwyREFBMkQ7QUFDeEU7O0FBRUE7QUFDQSxXQUFXLHVCQUF1QjtBQUNsQyxXQUFXLDJEQUEyRDtBQUN0RTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOERBQThELGtEQUFPLFdBQVcsaURBQU07QUFDdEYsVUFBVSxxQ0FBTztBQUNqQjs7QUFFQTtBQUNBLE1BQU0sMkRBQWdCO0FBQ3RCLFlBQVksd0VBQWlCO0FBQzdCOztBQUVBO0FBQ0E7QUFDQSxxQkFBcUIsdURBQVU7QUFDL0IsWUFBWSxjQUFjOztBQUUxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFlBQVkscUNBQU87QUFDbkI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLGtEQUFHLHVCQUF1QixpQkFBaUIsNEJBQTRCLGdCQUFnQjtBQUNyRztBQUNBOztBQUVBLFFBQVEsa0RBQU87QUFDZjtBQUNBLDJCQUEyQixtQkFBbUI7QUFDOUM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsdURBQVksb0VBQW9FLDJEQUFnQixXQUFXLGlEQUFNO0FBQ3pILGNBQWMsa0RBQUcsdUJBQXVCLGlCQUFpQjtBQUN6RDtBQUNBO0FBQ0E7O0FBRUEsT0FBTztBQUNQO0FBQ0E7QUFDQSxNQUFNLHVEQUFZO0FBQ2xCLFVBQVUscUNBQU87QUFDakI7O0FBRUEsUUFBUSxxQ0FBTztBQUNmOztBQUVBO0FBQ0EsV0FBVyxpQkFBaUI7QUFDNUIsV0FBVywyREFBMkQ7QUFDdEU7QUFDQTtBQUNBO0FBQ0EsVUFBVSw2QkFBNkI7O0FBRXZDLGFBQWEseUJBQXlCO0FBQ3RDO0FBQ0E7QUFDQSxVQUFVLHNEQUFTO0FBQ25CLFdBQVcsdURBQVU7QUFDckI7O0FBRUE7QUFDQTtBQUNBLElBQUksa0JBQWtCO0FBQ3RCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNlLTIvbmV4dGpzLy4vbm9kZV9tb2R1bGVzL2lwZnMtY29yZS11dGlscy9zcmMvZmlsZXMvbm9ybWFsaXNlLWNhbmRpZGF0ZS1tdWx0aXBsZS5qcz8zMWNhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBlcnJDb2RlIGZyb20gJ2Vyci1jb2RlJ1xuaW1wb3J0IGJyb3dzZXJTdHJlYW1Ub0l0IGZyb20gJ2Jyb3dzZXItcmVhZGFibGVzdHJlYW0tdG8taXQnXG5pbXBvcnQgaXRQZWVrYWJsZSBmcm9tICdpdC1wZWVrYWJsZSdcbmltcG9ydCBtYXAgZnJvbSAnaXQtbWFwJ1xuaW1wb3J0IHtcbiAgaXNCeXRlcyxcbiAgaXNCbG9iLFxuICBpc1JlYWRhYmxlU3RyZWFtLFxuICBpc0ZpbGVPYmplY3Rcbn0gZnJvbSAnLi91dGlscy5qcydcbmltcG9ydCB7XG4gIHBhcnNlTXRpbWUsXG4gIHBhcnNlTW9kZVxufSBmcm9tICdpcGZzLXVuaXhmcydcblxuLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdpcGZzLWNvcmUtdHlwZXMvc3JjL3V0aWxzJykuSW1wb3J0Q2FuZGlkYXRlfSBJbXBvcnRDYW5kaWRhdGVcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2lwZnMtY29yZS10eXBlcy9zcmMvdXRpbHMnKS5Ub0NvbnRlbnR9IFRvQ29udGVudFxuICogQHR5cGVkZWYge2ltcG9ydCgnaXBmcy11bml4ZnMtaW1wb3J0ZXInKS5JbXBvcnRDYW5kaWRhdGV9IEltcG9ydGVySW1wb3J0Q2FuZGlkYXRlXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdpcGZzLWNvcmUtdHlwZXMvc3JjL3V0aWxzJykuSW1wb3J0Q2FuZGlkYXRlU3RyZWFtfSBJbXBvcnRDYW5kaWRhdGVTdHJlYW1cbiAqL1xuXG4vKipcbiAqIEBwYXJhbSB7SW1wb3J0Q2FuZGlkYXRlU3RyZWFtfSBpbnB1dFxuICogQHBhcmFtIHsoY29udGVudDpUb0NvbnRlbnQpID0+IFByb21pc2U8QXN5bmNJdGVyYWJsZTxVaW50OEFycmF5Pj59IG5vcm1hbGlzZUNvbnRlbnRcbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNvbXBsZXhpdHlcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiAqIG5vcm1hbGlzZUNhbmRpZGF0ZU11bHRpcGxlIChpbnB1dCwgbm9ybWFsaXNlQ29udGVudCkge1xuICAvLyBTdHJpbmdcbiAgLy8gVWludDhBcnJheXxBcnJheUJ1ZmZlcnxUeXBlZEFycmF5XG4gIC8vIEJsb2J8RmlsZVxuICAvLyBmcy5SZWFkU3RyZWFtXG4gIC8vIEB0cy1leHBlY3QtZXJyb3IgX3JlYWRhYmxlU3RhdGUgaXMgYSBwcm9wZXJ0eSBvZiBhIG5vZGUgZnMuUmVhZFN0cmVhbVxuICBpZiAodHlwZW9mIGlucHV0ID09PSAnc3RyaW5nJyB8fCBpbnB1dCBpbnN0YW5jZW9mIFN0cmluZyB8fCBpc0J5dGVzKGlucHV0KSB8fCBpc0Jsb2IoaW5wdXQpIHx8IGlucHV0Ll9yZWFkYWJsZVN0YXRlKSB7XG4gICAgdGhyb3cgZXJyQ29kZShuZXcgRXJyb3IoJ1VuZXhwZWN0ZWQgaW5wdXQ6IHNpbmdsZSBpdGVtIHBhc3NlZCAtIGlmIHlvdSBhcmUgdXNpbmcgaXBmcy5hZGRBbGwsIHBsZWFzZSB1c2UgaXBmcy5hZGQgaW5zdGVhZCcpLCAnRVJSX1VORVhQRUNURURfSU5QVVQnKVxuICB9XG5cbiAgLy8gQnJvd3NlciBSZWFkYWJsZVN0cmVhbVxuICBpZiAoaXNSZWFkYWJsZVN0cmVhbShpbnB1dCkpIHtcbiAgICBpbnB1dCA9IGJyb3dzZXJTdHJlYW1Ub0l0KGlucHV0KVxuICB9XG5cbiAgLy8gSXRlcmFibGU8Pz5cbiAgaWYgKFN5bWJvbC5pdGVyYXRvciBpbiBpbnB1dCB8fCBTeW1ib2wuYXN5bmNJdGVyYXRvciBpbiBpbnB1dCkge1xuICAgIGNvbnN0IHBlZWthYmxlID0gaXRQZWVrYWJsZShpbnB1dClcbiAgICBjb25zdCB7IHZhbHVlLCBkb25lIH0gPSBhd2FpdCBwZWVrYWJsZS5wZWVrKClcblxuICAgIGlmIChkb25lKSB7XG4gICAgICAvLyBtYWtlIHN1cmUgZW1wdHkgaXRlcmF0b3JzIHJlc3VsdCBpbiBlbXB0eSBmaWxlc1xuICAgICAgeWllbGQgKiBbXVxuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgcGVla2FibGUucHVzaCh2YWx1ZSlcblxuICAgIC8vIChBc3luYylJdGVyYWJsZTxOdW1iZXI+XG4gICAgLy8gKEFzeW5jKUl0ZXJhYmxlPEJ5dGVzPlxuICAgIGlmIChOdW1iZXIuaXNJbnRlZ2VyKHZhbHVlKSkge1xuICAgICAgdGhyb3cgZXJyQ29kZShuZXcgRXJyb3IoJ1VuZXhwZWN0ZWQgaW5wdXQ6IHNpbmdsZSBpdGVtIHBhc3NlZCAtIGlmIHlvdSBhcmUgdXNpbmcgaXBmcy5hZGRBbGwsIHBsZWFzZSB1c2UgaXBmcy5hZGQgaW5zdGVhZCcpLCAnRVJSX1VORVhQRUNURURfSU5QVVQnKVxuICAgIH1cblxuICAgIC8vIChBc3luYylJdGVyYWJsZTxmcy5SZWFkU3RyZWFtPlxuICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgcHJpdmF0ZSBmaWVsZFxuICAgIGlmICh2YWx1ZS5fcmVhZGFibGVTdGF0ZSkge1xuICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciBOb2RlIGZzLlJlYWRTdHJlYW1zIGhhdmUgYSBgLnBhdGhgIHByb3BlcnR5IHNvIHdlIG5lZWQgdG8gcGFzcyBpdCBhcyB0aGUgY29udGVudFxuICAgICAgeWllbGQgKiBtYXAocGVla2FibGUsICgvKiogQHR5cGUge0ltcG9ydENhbmRpZGF0ZX0gKi8gdmFsdWUpID0+IHRvRmlsZU9iamVjdCh7IGNvbnRlbnQ6IHZhbHVlIH0sIG5vcm1hbGlzZUNvbnRlbnQpKVxuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgaWYgKGlzQnl0ZXModmFsdWUpKSB7XG4gICAgICAvLyBAdHMtZXhwZWN0LWVycm9yIHBlZWthYmxlIGlzIHN0aWxsIGFuIGl0ZXJhYmxlIG9mIEltcG9ydENhbmRpZGF0ZXNcbiAgICAgIHlpZWxkIHRvRmlsZU9iamVjdCh7IGNvbnRlbnQ6IHBlZWthYmxlIH0sIG5vcm1hbGlzZUNvbnRlbnQpXG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICAvLyAoQXN5bmMpSXRlcmFibGU8KEFzeW5jKUl0ZXJhYmxlPD8+PlxuICAgIC8vIChBc3luYylJdGVyYWJsZTxSZWFkYWJsZVN0cmVhbTw/Pj5cbiAgICAvLyBSZWFkYWJsZVN0cmVhbTwoQXN5bmMpSXRlcmFibGU8Pz4+XG4gICAgLy8gUmVhZGFibGVTdHJlYW08UmVhZGFibGVTdHJlYW08Pz4+XG4gICAgaWYgKGlzRmlsZU9iamVjdCh2YWx1ZSkgfHwgdmFsdWVbU3ltYm9sLml0ZXJhdG9yXSB8fCB2YWx1ZVtTeW1ib2wuYXN5bmNJdGVyYXRvcl0gfHwgaXNSZWFkYWJsZVN0cmVhbSh2YWx1ZSkgfHwgaXNCbG9iKHZhbHVlKSkge1xuICAgICAgeWllbGQgKiBtYXAocGVla2FibGUsICgvKiogQHR5cGUge0ltcG9ydENhbmRpZGF0ZX0gKi8gdmFsdWUpID0+IHRvRmlsZU9iamVjdCh2YWx1ZSwgbm9ybWFsaXNlQ29udGVudCkpXG4gICAgICByZXR1cm5cbiAgICB9XG4gIH1cblxuICAvLyB7IHBhdGgsIGNvbnRlbnQ6ID8gfVxuICAvLyBOb3RlOiBEZXRlY3RlZCBfYWZ0ZXJfIChBc3luYylJdGVyYWJsZTw/PiBiZWNhdXNlIE5vZGUuanMgZnMuUmVhZFN0cmVhbXMgaGF2ZSBhXG4gIC8vIGBwYXRoYCBwcm9wZXJ0eSB0aGF0IHBhc3NlcyB0aGlzIGNoZWNrLlxuICBpZiAoaXNGaWxlT2JqZWN0KGlucHV0KSkge1xuICAgIHRocm93IGVyckNvZGUobmV3IEVycm9yKCdVbmV4cGVjdGVkIGlucHV0OiBzaW5nbGUgaXRlbSBwYXNzZWQgLSBpZiB5b3UgYXJlIHVzaW5nIGlwZnMuYWRkQWxsLCBwbGVhc2UgdXNlIGlwZnMuYWRkIGluc3RlYWQnKSwgJ0VSUl9VTkVYUEVDVEVEX0lOUFVUJylcbiAgfVxuXG4gIHRocm93IGVyckNvZGUobmV3IEVycm9yKCdVbmV4cGVjdGVkIGlucHV0OiAnICsgdHlwZW9mIGlucHV0KSwgJ0VSUl9VTkVYUEVDVEVEX0lOUFVUJylcbn1cblxuLyoqXG4gKiBAcGFyYW0ge0ltcG9ydENhbmRpZGF0ZX0gaW5wdXRcbiAqIEBwYXJhbSB7KGNvbnRlbnQ6VG9Db250ZW50KSA9PiBQcm9taXNlPEFzeW5jSXRlcmFibGU8VWludDhBcnJheT4+fSBub3JtYWxpc2VDb250ZW50XG4gKi9cbmFzeW5jIGZ1bmN0aW9uIHRvRmlsZU9iamVjdCAoaW5wdXQsIG5vcm1hbGlzZUNvbnRlbnQpIHtcbiAgLy8gQHRzLWV4cGVjdC1lcnJvciAtIFRob3NlIHByb3BlcnRpZXMgZG9uJ3QgZXhpc3Qgb24gbW9zdCBpbnB1dCB0eXBlc1xuICBjb25zdCB7IHBhdGgsIG1vZGUsIG10aW1lLCBjb250ZW50IH0gPSBpbnB1dFxuXG4gIC8qKiBAdHlwZSB7SW1wb3J0ZXJJbXBvcnRDYW5kaWRhdGV9ICovXG4gIGNvbnN0IGZpbGUgPSB7XG4gICAgcGF0aDogcGF0aCB8fCAnJyxcbiAgICBtb2RlOiBwYXJzZU1vZGUobW9kZSksXG4gICAgbXRpbWU6IHBhcnNlTXRpbWUobXRpbWUpXG4gIH1cblxuICBpZiAoY29udGVudCkge1xuICAgIGZpbGUuY29udGVudCA9IGF3YWl0IG5vcm1hbGlzZUNvbnRlbnQoY29udGVudClcbiAgfSBlbHNlIGlmICghcGF0aCkgeyAvLyBOb3QgYWxyZWFkeSBhIGZpbGUgb2JqZWN0IHdpdGggcGF0aCBvciBjb250ZW50IHByb3BcbiAgICAvLyBAdHMtZXhwZWN0LWVycm9yIC0gaW5wdXQgc3RpbGwgY2FuIGJlIGRpZmZlcmVudCBUb0NvbnRlbnRcbiAgICBmaWxlLmNvbnRlbnQgPSBhd2FpdCBub3JtYWxpc2VDb250ZW50KGlucHV0KVxuICB9XG5cbiAgcmV0dXJuIGZpbGVcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/src/files/normalise-candidate-multiple.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/src/files/normalise-candidate-single.js":
/*!******************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/src/files/normalise-candidate-single.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normaliseCandidateSingle: () => (/* binding */ normaliseCandidateSingle)\n/* harmony export */ });\n/* harmony import */ var err_code__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! err-code */ \"(rsc)/./node_modules/err-code/index.js\");\n/* harmony import */ var browser_readablestream_to_it__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! browser-readablestream-to-it */ \"(rsc)/./node_modules/browser-readablestream-to-it/dist/src/index.js\");\n/* harmony import */ var it_peekable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! it-peekable */ \"(rsc)/./node_modules/it-peekable/dist/src/index.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/ipfs-core-utils/src/files/utils.js\");\n/* harmony import */ var ipfs_unixfs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ipfs-unixfs */ \"(rsc)/./node_modules/ipfs-unixfs/src/index.js\");\n\n\n\n\n\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ToContent} ToContent\n * @typedef {import('ipfs-unixfs-importer').ImportCandidate} ImporterImportCandidate\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidate} ImportCandidate\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidateStream} ImportCandidateStream\n */\n\n/**\n * @param {ImportCandidate} input\n * @param {(content:ToContent) => Promise<AsyncIterable<Uint8Array>>} normaliseContent\n */\n// eslint-disable-next-line complexity\nasync function * normaliseCandidateSingle (input, normaliseContent) {\n  if (input === null || input === undefined) {\n    throw err_code__WEBPACK_IMPORTED_MODULE_0__(new Error(`Unexpected input: ${input}`), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  // String\n  if (typeof input === 'string' || input instanceof String) {\n    yield toFileObject(input.toString(), normaliseContent)\n    return\n  }\n\n  // Uint8Array|ArrayBuffer|TypedArray\n  // Blob|File\n  if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.isBytes)(input) || (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.isBlob)(input)) {\n    yield toFileObject(input, normaliseContent)\n    return\n  }\n\n  // Browser ReadableStream\n  if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.isReadableStream)(input)) {\n    input = (0,browser_readablestream_to_it__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(input)\n  }\n\n  // Iterable<?>\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    const peekable = (0,it_peekable__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(input)\n\n    /** @type {any} value **/\n    const { value, done } = await peekable.peek()\n\n    if (done) {\n      // make sure empty iterators result in empty files\n      yield { content: [] }\n      return\n    }\n\n    peekable.push(value)\n\n    // (Async)Iterable<Number>\n    // (Async)Iterable<Bytes>\n    // (Async)Iterable<String>\n    if (Number.isInteger(value) || (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.isBytes)(value) || typeof value === 'string' || value instanceof String) {\n      yield toFileObject(peekable, normaliseContent)\n      return\n    }\n\n    throw err_code__WEBPACK_IMPORTED_MODULE_0__(new Error('Unexpected input: multiple items passed - if you are using ipfs.add, please use ipfs.addAll instead'), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  // { path, content: ? }\n  // Note: Detected _after_ (Async)Iterable<?> because Node.js fs.ReadStreams have a\n  // `path` property that passes this check.\n  if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.isFileObject)(input)) {\n    yield toFileObject(input, normaliseContent)\n    return\n  }\n\n  throw err_code__WEBPACK_IMPORTED_MODULE_0__(new Error('Unexpected input: cannot convert \"' + typeof input + '\" into ImportCandidate'), 'ERR_UNEXPECTED_INPUT')\n}\n\n/**\n * @param {ImportCandidate} input\n * @param {(content:ToContent) => Promise<AsyncIterable<Uint8Array>>} normaliseContent\n */\nasync function toFileObject (input, normaliseContent) {\n  // @ts-expect-error - Those properties don't exist on most input types\n  const { path, mode, mtime, content } = input\n\n  /** @type {ImporterImportCandidate} */\n  const file = {\n    path: path || '',\n    mode: (0,ipfs_unixfs__WEBPACK_IMPORTED_MODULE_4__.parseMode)(mode),\n    mtime: (0,ipfs_unixfs__WEBPACK_IMPORTED_MODULE_4__.parseMtime)(mtime)\n  }\n\n  if (content) {\n    file.content = await normaliseContent(content)\n  } else if (!path) { // Not already a file object with path or content prop\n    // @ts-expect-error - input still can be different ToContent\n    file.content = await normaliseContent(input)\n  }\n\n  return file\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL3NyYy9maWxlcy9ub3JtYWxpc2UtY2FuZGlkYXRlLXNpbmdsZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBOEI7QUFDOEI7QUFDeEI7QUFNakI7QUFJQzs7QUFFcEI7QUFDQSxhQUFhLCtDQUErQztBQUM1RCxhQUFhLGdEQUFnRDtBQUM3RCxhQUFhLHFEQUFxRDtBQUNsRSxhQUFhLDJEQUEyRDtBQUN4RTs7QUFFQTtBQUNBLFdBQVcsaUJBQWlCO0FBQzVCLFdBQVcsMkRBQTJEO0FBQ3RFO0FBQ0E7QUFDTztBQUNQO0FBQ0EsVUFBVSxxQ0FBTyxnQ0FBZ0MsTUFBTTtBQUN2RDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxNQUFNLGtEQUFPLFdBQVcsaURBQU07QUFDOUI7QUFDQTtBQUNBOztBQUVBO0FBQ0EsTUFBTSwyREFBZ0I7QUFDdEIsWUFBWSx3RUFBaUI7QUFDN0I7O0FBRUE7QUFDQTtBQUNBLHFCQUFxQix1REFBVTs7QUFFL0IsZUFBZSxLQUFLO0FBQ3BCLFlBQVksY0FBYzs7QUFFMUI7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxrREFBTztBQUMxQztBQUNBO0FBQ0E7O0FBRUEsVUFBVSxxQ0FBTztBQUNqQjs7QUFFQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLE1BQU0sdURBQVk7QUFDbEI7QUFDQTtBQUNBOztBQUVBLFFBQVEscUNBQU87QUFDZjs7QUFFQTtBQUNBLFdBQVcsaUJBQWlCO0FBQzVCLFdBQVcsMkRBQTJEO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBLFVBQVUsNkJBQTZCOztBQUV2QyxhQUFhLHlCQUF5QjtBQUN0QztBQUNBO0FBQ0EsVUFBVSxzREFBUztBQUNuQixXQUFXLHVEQUFVO0FBQ3JCOztBQUVBO0FBQ0E7QUFDQSxJQUFJLGtCQUFrQjtBQUN0QjtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BzZS0yL25leHRqcy8uL25vZGVfbW9kdWxlcy9pcGZzLWNvcmUtdXRpbHMvc3JjL2ZpbGVzL25vcm1hbGlzZS1jYW5kaWRhdGUtc2luZ2xlLmpzPzk4N2QiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGVyckNvZGUgZnJvbSAnZXJyLWNvZGUnXG5pbXBvcnQgYnJvd3NlclN0cmVhbVRvSXQgZnJvbSAnYnJvd3Nlci1yZWFkYWJsZXN0cmVhbS10by1pdCdcbmltcG9ydCBpdFBlZWthYmxlIGZyb20gJ2l0LXBlZWthYmxlJ1xuaW1wb3J0IHtcbiAgaXNCeXRlcyxcbiAgaXNCbG9iLFxuICBpc1JlYWRhYmxlU3RyZWFtLFxuICBpc0ZpbGVPYmplY3Rcbn0gZnJvbSAnLi91dGlscy5qcydcbmltcG9ydCB7XG4gIHBhcnNlTXRpbWUsXG4gIHBhcnNlTW9kZVxufSBmcm9tICdpcGZzLXVuaXhmcydcblxuLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdpcGZzLWNvcmUtdHlwZXMvc3JjL3V0aWxzJykuVG9Db250ZW50fSBUb0NvbnRlbnRcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2lwZnMtdW5peGZzLWltcG9ydGVyJykuSW1wb3J0Q2FuZGlkYXRlfSBJbXBvcnRlckltcG9ydENhbmRpZGF0ZVxuICogQHR5cGVkZWYge2ltcG9ydCgnaXBmcy1jb3JlLXR5cGVzL3NyYy91dGlscycpLkltcG9ydENhbmRpZGF0ZX0gSW1wb3J0Q2FuZGlkYXRlXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdpcGZzLWNvcmUtdHlwZXMvc3JjL3V0aWxzJykuSW1wb3J0Q2FuZGlkYXRlU3RyZWFtfSBJbXBvcnRDYW5kaWRhdGVTdHJlYW1cbiAqL1xuXG4vKipcbiAqIEBwYXJhbSB7SW1wb3J0Q2FuZGlkYXRlfSBpbnB1dFxuICogQHBhcmFtIHsoY29udGVudDpUb0NvbnRlbnQpID0+IFByb21pc2U8QXN5bmNJdGVyYWJsZTxVaW50OEFycmF5Pj59IG5vcm1hbGlzZUNvbnRlbnRcbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNvbXBsZXhpdHlcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiAqIG5vcm1hbGlzZUNhbmRpZGF0ZVNpbmdsZSAoaW5wdXQsIG5vcm1hbGlzZUNvbnRlbnQpIHtcbiAgaWYgKGlucHV0ID09PSBudWxsIHx8IGlucHV0ID09PSB1bmRlZmluZWQpIHtcbiAgICB0aHJvdyBlcnJDb2RlKG5ldyBFcnJvcihgVW5leHBlY3RlZCBpbnB1dDogJHtpbnB1dH1gKSwgJ0VSUl9VTkVYUEVDVEVEX0lOUFVUJylcbiAgfVxuXG4gIC8vIFN0cmluZ1xuICBpZiAodHlwZW9mIGlucHV0ID09PSAnc3RyaW5nJyB8fCBpbnB1dCBpbnN0YW5jZW9mIFN0cmluZykge1xuICAgIHlpZWxkIHRvRmlsZU9iamVjdChpbnB1dC50b1N0cmluZygpLCBub3JtYWxpc2VDb250ZW50KVxuICAgIHJldHVyblxuICB9XG5cbiAgLy8gVWludDhBcnJheXxBcnJheUJ1ZmZlcnxUeXBlZEFycmF5XG4gIC8vIEJsb2J8RmlsZVxuICBpZiAoaXNCeXRlcyhpbnB1dCkgfHwgaXNCbG9iKGlucHV0KSkge1xuICAgIHlpZWxkIHRvRmlsZU9iamVjdChpbnB1dCwgbm9ybWFsaXNlQ29udGVudClcbiAgICByZXR1cm5cbiAgfVxuXG4gIC8vIEJyb3dzZXIgUmVhZGFibGVTdHJlYW1cbiAgaWYgKGlzUmVhZGFibGVTdHJlYW0oaW5wdXQpKSB7XG4gICAgaW5wdXQgPSBicm93c2VyU3RyZWFtVG9JdChpbnB1dClcbiAgfVxuXG4gIC8vIEl0ZXJhYmxlPD8+XG4gIGlmIChTeW1ib2wuaXRlcmF0b3IgaW4gaW5wdXQgfHwgU3ltYm9sLmFzeW5jSXRlcmF0b3IgaW4gaW5wdXQpIHtcbiAgICBjb25zdCBwZWVrYWJsZSA9IGl0UGVla2FibGUoaW5wdXQpXG5cbiAgICAvKiogQHR5cGUge2FueX0gdmFsdWUgKiovXG4gICAgY29uc3QgeyB2YWx1ZSwgZG9uZSB9ID0gYXdhaXQgcGVla2FibGUucGVlaygpXG5cbiAgICBpZiAoZG9uZSkge1xuICAgICAgLy8gbWFrZSBzdXJlIGVtcHR5IGl0ZXJhdG9ycyByZXN1bHQgaW4gZW1wdHkgZmlsZXNcbiAgICAgIHlpZWxkIHsgY29udGVudDogW10gfVxuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgcGVla2FibGUucHVzaCh2YWx1ZSlcblxuICAgIC8vIChBc3luYylJdGVyYWJsZTxOdW1iZXI+XG4gICAgLy8gKEFzeW5jKUl0ZXJhYmxlPEJ5dGVzPlxuICAgIC8vIChBc3luYylJdGVyYWJsZTxTdHJpbmc+XG4gICAgaWYgKE51bWJlci5pc0ludGVnZXIodmFsdWUpIHx8IGlzQnl0ZXModmFsdWUpIHx8IHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgfHwgdmFsdWUgaW5zdGFuY2VvZiBTdHJpbmcpIHtcbiAgICAgIHlpZWxkIHRvRmlsZU9iamVjdChwZWVrYWJsZSwgbm9ybWFsaXNlQ29udGVudClcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIHRocm93IGVyckNvZGUobmV3IEVycm9yKCdVbmV4cGVjdGVkIGlucHV0OiBtdWx0aXBsZSBpdGVtcyBwYXNzZWQgLSBpZiB5b3UgYXJlIHVzaW5nIGlwZnMuYWRkLCBwbGVhc2UgdXNlIGlwZnMuYWRkQWxsIGluc3RlYWQnKSwgJ0VSUl9VTkVYUEVDVEVEX0lOUFVUJylcbiAgfVxuXG4gIC8vIHsgcGF0aCwgY29udGVudDogPyB9XG4gIC8vIE5vdGU6IERldGVjdGVkIF9hZnRlcl8gKEFzeW5jKUl0ZXJhYmxlPD8+IGJlY2F1c2UgTm9kZS5qcyBmcy5SZWFkU3RyZWFtcyBoYXZlIGFcbiAgLy8gYHBhdGhgIHByb3BlcnR5IHRoYXQgcGFzc2VzIHRoaXMgY2hlY2suXG4gIGlmIChpc0ZpbGVPYmplY3QoaW5wdXQpKSB7XG4gICAgeWllbGQgdG9GaWxlT2JqZWN0KGlucHV0LCBub3JtYWxpc2VDb250ZW50KVxuICAgIHJldHVyblxuICB9XG5cbiAgdGhyb3cgZXJyQ29kZShuZXcgRXJyb3IoJ1VuZXhwZWN0ZWQgaW5wdXQ6IGNhbm5vdCBjb252ZXJ0IFwiJyArIHR5cGVvZiBpbnB1dCArICdcIiBpbnRvIEltcG9ydENhbmRpZGF0ZScpLCAnRVJSX1VORVhQRUNURURfSU5QVVQnKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7SW1wb3J0Q2FuZGlkYXRlfSBpbnB1dFxuICogQHBhcmFtIHsoY29udGVudDpUb0NvbnRlbnQpID0+IFByb21pc2U8QXN5bmNJdGVyYWJsZTxVaW50OEFycmF5Pj59IG5vcm1hbGlzZUNvbnRlbnRcbiAqL1xuYXN5bmMgZnVuY3Rpb24gdG9GaWxlT2JqZWN0IChpbnB1dCwgbm9ybWFsaXNlQ29udGVudCkge1xuICAvLyBAdHMtZXhwZWN0LWVycm9yIC0gVGhvc2UgcHJvcGVydGllcyBkb24ndCBleGlzdCBvbiBtb3N0IGlucHV0IHR5cGVzXG4gIGNvbnN0IHsgcGF0aCwgbW9kZSwgbXRpbWUsIGNvbnRlbnQgfSA9IGlucHV0XG5cbiAgLyoqIEB0eXBlIHtJbXBvcnRlckltcG9ydENhbmRpZGF0ZX0gKi9cbiAgY29uc3QgZmlsZSA9IHtcbiAgICBwYXRoOiBwYXRoIHx8ICcnLFxuICAgIG1vZGU6IHBhcnNlTW9kZShtb2RlKSxcbiAgICBtdGltZTogcGFyc2VNdGltZShtdGltZSlcbiAgfVxuXG4gIGlmIChjb250ZW50KSB7XG4gICAgZmlsZS5jb250ZW50ID0gYXdhaXQgbm9ybWFsaXNlQ29udGVudChjb250ZW50KVxuICB9IGVsc2UgaWYgKCFwYXRoKSB7IC8vIE5vdCBhbHJlYWR5IGEgZmlsZSBvYmplY3Qgd2l0aCBwYXRoIG9yIGNvbnRlbnQgcHJvcFxuICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgLSBpbnB1dCBzdGlsbCBjYW4gYmUgZGlmZmVyZW50IFRvQ29udGVudFxuICAgIGZpbGUuY29udGVudCA9IGF3YWl0IG5vcm1hbGlzZUNvbnRlbnQoaW5wdXQpXG4gIH1cblxuICByZXR1cm4gZmlsZVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/src/files/normalise-candidate-single.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/src/files/normalise-content.browser.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/src/files/normalise-content.browser.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normaliseContent: () => (/* binding */ normaliseContent)\n/* harmony export */ });\n/* harmony import */ var err_code__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! err-code */ \"(rsc)/./node_modules/err-code/index.js\");\n/* harmony import */ var it_peekable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! it-peekable */ \"(rsc)/./node_modules/it-peekable/dist/src/index.js\");\n/* harmony import */ var browser_readablestream_to_it__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! browser-readablestream-to-it */ \"(rsc)/./node_modules/browser-readablestream-to-it/dist/src/index.js\");\n/* harmony import */ var it_all__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! it-all */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/it-all/dist/src/index.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/ipfs-core-utils/src/files/utils.js\");\n\n\n\n\n\n\n/**\n * @param {import('ipfs-core-types/src/utils').ToContent} input\n */\nasync function normaliseContent (input) {\n  // Bytes\n  if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isBytes)(input)) {\n    return new Blob([input])\n  }\n\n  // String\n  if (typeof input === 'string' || input instanceof String) {\n    return new Blob([input.toString()])\n  }\n\n  // Blob | File\n  if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isBlob)(input)) {\n    return input\n  }\n\n  // Browser stream\n  if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isReadableStream)(input)) {\n    input = (0,browser_readablestream_to_it__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(input)\n  }\n\n  // (Async)Iterator<?>\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    /** @type {any} peekable */\n    const peekable = (0,it_peekable__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(input)\n\n    /** @type {any} value **/\n    const { value, done } = await peekable.peek()\n\n    if (done) {\n      // make sure empty iterators result in empty files\n      return itToBlob(peekable)\n    }\n\n    peekable.push(value)\n\n    // (Async)Iterable<Number>\n    if (Number.isInteger(value)) {\n      return new Blob([Uint8Array.from(await (0,it_all__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(peekable))])\n    }\n\n    // (Async)Iterable<Bytes|String>\n    if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isBytes)(value) || typeof value === 'string' || value instanceof String) {\n      return itToBlob(peekable)\n    }\n  }\n\n  throw err_code__WEBPACK_IMPORTED_MODULE_0__(new Error(`Unexpected input: ${input}`), 'ERR_UNEXPECTED_INPUT')\n}\n\n/**\n * @param {AsyncIterable<BlobPart>|Iterable<BlobPart>} stream\n */\nasync function itToBlob (stream) {\n  const parts = []\n\n  for await (const chunk of stream) {\n    parts.push(chunk)\n  }\n\n  return new Blob(parts)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL3NyYy9maWxlcy9ub3JtYWxpc2UtY29udGVudC5icm93c2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUE4QjtBQUNNO0FBQ3dCO0FBQ3BDO0FBS0w7O0FBRW5CO0FBQ0EsV0FBVywrQ0FBK0M7QUFDMUQ7QUFDTztBQUNQO0FBQ0EsTUFBTSxrREFBTztBQUNiO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxNQUFNLGlEQUFNO0FBQ1o7QUFDQTs7QUFFQTtBQUNBLE1BQU0sMkRBQWdCO0FBQ3RCLFlBQVksd0VBQWlCO0FBQzdCOztBQUVBO0FBQ0E7QUFDQSxlQUFlLEtBQUs7QUFDcEIscUJBQXFCLHVEQUFVOztBQUUvQixlQUFlLEtBQUs7QUFDcEIsWUFBWSxjQUFjOztBQUUxQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsNkNBQTZDLGtEQUFHO0FBQ2hEOztBQUVBO0FBQ0EsUUFBUSxrREFBTztBQUNmO0FBQ0E7QUFDQTs7QUFFQSxRQUFRLHFDQUFPLGdDQUFnQyxNQUFNO0FBQ3JEOztBQUVBO0FBQ0EsV0FBVyw0Q0FBNEM7QUFDdkQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNlLTIvbmV4dGpzLy4vbm9kZV9tb2R1bGVzL2lwZnMtY29yZS11dGlscy9zcmMvZmlsZXMvbm9ybWFsaXNlLWNvbnRlbnQuYnJvd3Nlci5qcz8zZjBlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBlcnJDb2RlIGZyb20gJ2Vyci1jb2RlJ1xuaW1wb3J0IGl0UGVla2FibGUgZnJvbSAnaXQtcGVla2FibGUnXG5pbXBvcnQgYnJvd3NlclN0cmVhbVRvSXQgZnJvbSAnYnJvd3Nlci1yZWFkYWJsZXN0cmVhbS10by1pdCdcbmltcG9ydCBhbGwgZnJvbSAnaXQtYWxsJ1xuaW1wb3J0IHtcbiAgaXNCeXRlcyxcbiAgaXNCbG9iLFxuICBpc1JlYWRhYmxlU3RyZWFtXG59IGZyb20gJy4vdXRpbHMuanMnXG5cbi8qKlxuICogQHBhcmFtIHtpbXBvcnQoJ2lwZnMtY29yZS10eXBlcy9zcmMvdXRpbHMnKS5Ub0NvbnRlbnR9IGlucHV0XG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBub3JtYWxpc2VDb250ZW50IChpbnB1dCkge1xuICAvLyBCeXRlc1xuICBpZiAoaXNCeXRlcyhpbnB1dCkpIHtcbiAgICByZXR1cm4gbmV3IEJsb2IoW2lucHV0XSlcbiAgfVxuXG4gIC8vIFN0cmluZ1xuICBpZiAodHlwZW9mIGlucHV0ID09PSAnc3RyaW5nJyB8fCBpbnB1dCBpbnN0YW5jZW9mIFN0cmluZykge1xuICAgIHJldHVybiBuZXcgQmxvYihbaW5wdXQudG9TdHJpbmcoKV0pXG4gIH1cblxuICAvLyBCbG9iIHwgRmlsZVxuICBpZiAoaXNCbG9iKGlucHV0KSkge1xuICAgIHJldHVybiBpbnB1dFxuICB9XG5cbiAgLy8gQnJvd3NlciBzdHJlYW1cbiAgaWYgKGlzUmVhZGFibGVTdHJlYW0oaW5wdXQpKSB7XG4gICAgaW5wdXQgPSBicm93c2VyU3RyZWFtVG9JdChpbnB1dClcbiAgfVxuXG4gIC8vIChBc3luYylJdGVyYXRvcjw/PlxuICBpZiAoU3ltYm9sLml0ZXJhdG9yIGluIGlucHV0IHx8IFN5bWJvbC5hc3luY0l0ZXJhdG9yIGluIGlucHV0KSB7XG4gICAgLyoqIEB0eXBlIHthbnl9IHBlZWthYmxlICovXG4gICAgY29uc3QgcGVla2FibGUgPSBpdFBlZWthYmxlKGlucHV0KVxuXG4gICAgLyoqIEB0eXBlIHthbnl9IHZhbHVlICoqL1xuICAgIGNvbnN0IHsgdmFsdWUsIGRvbmUgfSA9IGF3YWl0IHBlZWthYmxlLnBlZWsoKVxuXG4gICAgaWYgKGRvbmUpIHtcbiAgICAgIC8vIG1ha2Ugc3VyZSBlbXB0eSBpdGVyYXRvcnMgcmVzdWx0IGluIGVtcHR5IGZpbGVzXG4gICAgICByZXR1cm4gaXRUb0Jsb2IocGVla2FibGUpXG4gICAgfVxuXG4gICAgcGVla2FibGUucHVzaCh2YWx1ZSlcblxuICAgIC8vIChBc3luYylJdGVyYWJsZTxOdW1iZXI+XG4gICAgaWYgKE51bWJlci5pc0ludGVnZXIodmFsdWUpKSB7XG4gICAgICByZXR1cm4gbmV3IEJsb2IoW1VpbnQ4QXJyYXkuZnJvbShhd2FpdCBhbGwocGVla2FibGUpKV0pXG4gICAgfVxuXG4gICAgLy8gKEFzeW5jKUl0ZXJhYmxlPEJ5dGVzfFN0cmluZz5cbiAgICBpZiAoaXNCeXRlcyh2YWx1ZSkgfHwgdHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyB8fCB2YWx1ZSBpbnN0YW5jZW9mIFN0cmluZykge1xuICAgICAgcmV0dXJuIGl0VG9CbG9iKHBlZWthYmxlKVxuICAgIH1cbiAgfVxuXG4gIHRocm93IGVyckNvZGUobmV3IEVycm9yKGBVbmV4cGVjdGVkIGlucHV0OiAke2lucHV0fWApLCAnRVJSX1VORVhQRUNURURfSU5QVVQnKVxufVxuXG4vKipcbiAqIEBwYXJhbSB7QXN5bmNJdGVyYWJsZTxCbG9iUGFydD58SXRlcmFibGU8QmxvYlBhcnQ+fSBzdHJlYW1cbiAqL1xuYXN5bmMgZnVuY3Rpb24gaXRUb0Jsb2IgKHN0cmVhbSkge1xuICBjb25zdCBwYXJ0cyA9IFtdXG5cbiAgZm9yIGF3YWl0IChjb25zdCBjaHVuayBvZiBzdHJlYW0pIHtcbiAgICBwYXJ0cy5wdXNoKGNodW5rKVxuICB9XG5cbiAgcmV0dXJuIG5ldyBCbG9iKHBhcnRzKVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/src/files/normalise-content.browser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/src/files/normalise-content.js":
/*!*********************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/src/files/normalise-content.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normaliseContent: () => (/* binding */ normaliseContent)\n/* harmony export */ });\n/* harmony import */ var err_code__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! err-code */ \"(rsc)/./node_modules/err-code/index.js\");\n/* harmony import */ var uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uint8arrays/from-string */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/uint8arrays/dist/src/from-string.js\");\n/* harmony import */ var browser_readablestream_to_it__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! browser-readablestream-to-it */ \"(rsc)/./node_modules/browser-readablestream-to-it/dist/src/index.js\");\n/* harmony import */ var blob_to_it__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! blob-to-it */ \"(rsc)/./node_modules/blob-to-it/dist/src/index.js\");\n/* harmony import */ var it_peekable__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! it-peekable */ \"(rsc)/./node_modules/it-peekable/dist/src/index.js\");\n/* harmony import */ var it_all__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! it-all */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/it-all/dist/src/index.js\");\n/* harmony import */ var it_map__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! it-map */ \"(rsc)/./node_modules/it-map/dist/src/index.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/ipfs-core-utils/src/files/utils.js\");\n\n\n\n\n\n\n\n\n\n/**\n * @template T\n * @param {T} thing\n */\nasync function * toAsyncIterable (thing) {\n  yield thing\n}\n\n/**\n * @param {import('ipfs-core-types/src/utils').ToContent} input\n */\nasync function normaliseContent (input) {\n  // Bytes | String\n  if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_7__.isBytes)(input)) {\n    return toAsyncIterable(toBytes(input))\n  }\n\n  if (typeof input === 'string' || input instanceof String) {\n    return toAsyncIterable(toBytes(input.toString()))\n  }\n\n  // Blob\n  if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_7__.isBlob)(input)) {\n    return (0,blob_to_it__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(input)\n  }\n\n  // Browser stream\n  if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_7__.isReadableStream)(input)) {\n    input = (0,browser_readablestream_to_it__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(input)\n  }\n\n  // (Async)Iterator<?>\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    /** @type {any} peekable */\n    const peekable = (0,it_peekable__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(input)\n\n    /** @type {any} value */\n    const { value, done } = await peekable.peek()\n\n    if (done) {\n      // make sure empty iterators result in empty files\n      return toAsyncIterable(new Uint8Array(0))\n    }\n\n    peekable.push(value)\n\n    // (Async)Iterable<Number>\n    if (Number.isInteger(value)) {\n      return toAsyncIterable(Uint8Array.from(await (0,it_all__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(peekable)))\n    }\n\n    // (Async)Iterable<Bytes|String>\n    if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_7__.isBytes)(value) || typeof value === 'string' || value instanceof String) {\n      return (0,it_map__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(peekable, toBytes)\n    }\n  }\n\n  throw err_code__WEBPACK_IMPORTED_MODULE_0__(new Error(`Unexpected input: ${input}`), 'ERR_UNEXPECTED_INPUT')\n}\n\n/**\n * @param {ArrayBuffer | ArrayBufferView | string | InstanceType<typeof window.String> | number[]} chunk\n */\nfunction toBytes (chunk) {\n  if (chunk instanceof Uint8Array) {\n    return chunk\n  }\n\n  if (ArrayBuffer.isView(chunk)) {\n    return new Uint8Array(chunk.buffer, chunk.byteOffset, chunk.byteLength)\n  }\n\n  if (chunk instanceof ArrayBuffer) {\n    return new Uint8Array(chunk)\n  }\n\n  if (Array.isArray(chunk)) {\n    return Uint8Array.from(chunk)\n  }\n\n  return (0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_1__.fromString)(chunk.toString())\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL3NyYy9maWxlcy9ub3JtYWxpc2UtY29udGVudC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBOEI7QUFDOEM7QUFDaEI7QUFDM0I7QUFDRztBQUNaO0FBQ0E7QUFLTDs7QUFFbkI7QUFDQTtBQUNBLFdBQVcsR0FBRztBQUNkO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsV0FBVywrQ0FBK0M7QUFDMUQ7QUFDTztBQUNQO0FBQ0EsTUFBTSxrREFBTztBQUNiO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsTUFBTSxpREFBTTtBQUNaLFdBQVcsc0RBQVE7QUFDbkI7O0FBRUE7QUFDQSxNQUFNLDJEQUFnQjtBQUN0QixZQUFZLHdFQUFpQjtBQUM3Qjs7QUFFQTtBQUNBO0FBQ0EsZUFBZSxLQUFLO0FBQ3BCLHFCQUFxQix1REFBVTs7QUFFL0IsZUFBZSxLQUFLO0FBQ3BCLFlBQVksY0FBYzs7QUFFMUI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLG1EQUFtRCxrREFBRztBQUN0RDs7QUFFQTtBQUNBLFFBQVEsa0RBQU87QUFDZixhQUFhLGtEQUFHO0FBQ2hCO0FBQ0E7O0FBRUEsUUFBUSxxQ0FBTyxnQ0FBZ0MsTUFBTTtBQUNyRDs7QUFFQTtBQUNBLFdBQVcsd0ZBQXdGO0FBQ25HO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsU0FBUyxtRUFBb0I7QUFDN0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2UtMi9uZXh0anMvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL3NyYy9maWxlcy9ub3JtYWxpc2UtY29udGVudC5qcz9hMDlkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBlcnJDb2RlIGZyb20gJ2Vyci1jb2RlJ1xuaW1wb3J0IHsgZnJvbVN0cmluZyBhcyB1aW50OEFycmF5RnJvbVN0cmluZyB9IGZyb20gJ3VpbnQ4YXJyYXlzL2Zyb20tc3RyaW5nJ1xuaW1wb3J0IGJyb3dzZXJTdHJlYW1Ub0l0IGZyb20gJ2Jyb3dzZXItcmVhZGFibGVzdHJlYW0tdG8taXQnXG5pbXBvcnQgYmxvYlRvSXQgZnJvbSAnYmxvYi10by1pdCdcbmltcG9ydCBpdFBlZWthYmxlIGZyb20gJ2l0LXBlZWthYmxlJ1xuaW1wb3J0IGFsbCBmcm9tICdpdC1hbGwnXG5pbXBvcnQgbWFwIGZyb20gJ2l0LW1hcCdcbmltcG9ydCB7XG4gIGlzQnl0ZXMsXG4gIGlzUmVhZGFibGVTdHJlYW0sXG4gIGlzQmxvYlxufSBmcm9tICcuL3V0aWxzLmpzJ1xuXG4vKipcbiAqIEB0ZW1wbGF0ZSBUXG4gKiBAcGFyYW0ge1R9IHRoaW5nXG4gKi9cbmFzeW5jIGZ1bmN0aW9uICogdG9Bc3luY0l0ZXJhYmxlICh0aGluZykge1xuICB5aWVsZCB0aGluZ1xufVxuXG4vKipcbiAqIEBwYXJhbSB7aW1wb3J0KCdpcGZzLWNvcmUtdHlwZXMvc3JjL3V0aWxzJykuVG9Db250ZW50fSBpbnB1dFxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbm9ybWFsaXNlQ29udGVudCAoaW5wdXQpIHtcbiAgLy8gQnl0ZXMgfCBTdHJpbmdcbiAgaWYgKGlzQnl0ZXMoaW5wdXQpKSB7XG4gICAgcmV0dXJuIHRvQXN5bmNJdGVyYWJsZSh0b0J5dGVzKGlucHV0KSlcbiAgfVxuXG4gIGlmICh0eXBlb2YgaW5wdXQgPT09ICdzdHJpbmcnIHx8IGlucHV0IGluc3RhbmNlb2YgU3RyaW5nKSB7XG4gICAgcmV0dXJuIHRvQXN5bmNJdGVyYWJsZSh0b0J5dGVzKGlucHV0LnRvU3RyaW5nKCkpKVxuICB9XG5cbiAgLy8gQmxvYlxuICBpZiAoaXNCbG9iKGlucHV0KSkge1xuICAgIHJldHVybiBibG9iVG9JdChpbnB1dClcbiAgfVxuXG4gIC8vIEJyb3dzZXIgc3RyZWFtXG4gIGlmIChpc1JlYWRhYmxlU3RyZWFtKGlucHV0KSkge1xuICAgIGlucHV0ID0gYnJvd3NlclN0cmVhbVRvSXQoaW5wdXQpXG4gIH1cblxuICAvLyAoQXN5bmMpSXRlcmF0b3I8Pz5cbiAgaWYgKFN5bWJvbC5pdGVyYXRvciBpbiBpbnB1dCB8fCBTeW1ib2wuYXN5bmNJdGVyYXRvciBpbiBpbnB1dCkge1xuICAgIC8qKiBAdHlwZSB7YW55fSBwZWVrYWJsZSAqL1xuICAgIGNvbnN0IHBlZWthYmxlID0gaXRQZWVrYWJsZShpbnB1dClcblxuICAgIC8qKiBAdHlwZSB7YW55fSB2YWx1ZSAqL1xuICAgIGNvbnN0IHsgdmFsdWUsIGRvbmUgfSA9IGF3YWl0IHBlZWthYmxlLnBlZWsoKVxuXG4gICAgaWYgKGRvbmUpIHtcbiAgICAgIC8vIG1ha2Ugc3VyZSBlbXB0eSBpdGVyYXRvcnMgcmVzdWx0IGluIGVtcHR5IGZpbGVzXG4gICAgICByZXR1cm4gdG9Bc3luY0l0ZXJhYmxlKG5ldyBVaW50OEFycmF5KDApKVxuICAgIH1cblxuICAgIHBlZWthYmxlLnB1c2godmFsdWUpXG5cbiAgICAvLyAoQXN5bmMpSXRlcmFibGU8TnVtYmVyPlxuICAgIGlmIChOdW1iZXIuaXNJbnRlZ2VyKHZhbHVlKSkge1xuICAgICAgcmV0dXJuIHRvQXN5bmNJdGVyYWJsZShVaW50OEFycmF5LmZyb20oYXdhaXQgYWxsKHBlZWthYmxlKSkpXG4gICAgfVxuXG4gICAgLy8gKEFzeW5jKUl0ZXJhYmxlPEJ5dGVzfFN0cmluZz5cbiAgICBpZiAoaXNCeXRlcyh2YWx1ZSkgfHwgdHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyB8fCB2YWx1ZSBpbnN0YW5jZW9mIFN0cmluZykge1xuICAgICAgcmV0dXJuIG1hcChwZWVrYWJsZSwgdG9CeXRlcylcbiAgICB9XG4gIH1cblxuICB0aHJvdyBlcnJDb2RlKG5ldyBFcnJvcihgVW5leHBlY3RlZCBpbnB1dDogJHtpbnB1dH1gKSwgJ0VSUl9VTkVYUEVDVEVEX0lOUFVUJylcbn1cblxuLyoqXG4gKiBAcGFyYW0ge0FycmF5QnVmZmVyIHwgQXJyYXlCdWZmZXJWaWV3IHwgc3RyaW5nIHwgSW5zdGFuY2VUeXBlPHR5cGVvZiB3aW5kb3cuU3RyaW5nPiB8IG51bWJlcltdfSBjaHVua1xuICovXG5mdW5jdGlvbiB0b0J5dGVzIChjaHVuaykge1xuICBpZiAoY2h1bmsgaW5zdGFuY2VvZiBVaW50OEFycmF5KSB7XG4gICAgcmV0dXJuIGNodW5rXG4gIH1cblxuICBpZiAoQXJyYXlCdWZmZXIuaXNWaWV3KGNodW5rKSkge1xuICAgIHJldHVybiBuZXcgVWludDhBcnJheShjaHVuay5idWZmZXIsIGNodW5rLmJ5dGVPZmZzZXQsIGNodW5rLmJ5dGVMZW5ndGgpXG4gIH1cblxuICBpZiAoY2h1bmsgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcikge1xuICAgIHJldHVybiBuZXcgVWludDhBcnJheShjaHVuaylcbiAgfVxuXG4gIGlmIChBcnJheS5pc0FycmF5KGNodW5rKSkge1xuICAgIHJldHVybiBVaW50OEFycmF5LmZyb20oY2h1bmspXG4gIH1cblxuICByZXR1cm4gdWludDhBcnJheUZyb21TdHJpbmcoY2h1bmsudG9TdHJpbmcoKSlcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/src/files/normalise-content.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/src/files/normalise-input-multiple.browser.js":
/*!************************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/src/files/normalise-input-multiple.browser.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normaliseInput: () => (/* binding */ normaliseInput)\n/* harmony export */ });\n/* harmony import */ var _normalise_content_browser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./normalise-content.browser.js */ \"(rsc)/./node_modules/ipfs-core-utils/src/files/normalise-content.browser.js\");\n/* harmony import */ var _normalise_candidate_multiple_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./normalise-candidate-multiple.js */ \"(rsc)/./node_modules/ipfs-core-utils/src/files/normalise-candidate-multiple.js\");\n\n\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidateStream} ImportCandidateStream\n * @typedef {import('ipfs-core-types/src/utils').BrowserImportCandidate} BrowserImportCandidate\n */\n\n/**\n * Transforms any of the `ipfs.addAll` input types into\n *\n * ```\n * AsyncIterable<{ path, mode, mtime, content: Blob }>\n * ```\n *\n * See https://github.com/ipfs/js-ipfs/blob/master/docs/core-api/FILES.md#ipfsadddata-options\n *\n * @param {ImportCandidateStream} input\n * @returns {AsyncGenerator<BrowserImportCandidate, void, undefined>}\n */\nfunction normaliseInput (input) {\n  // @ts-expect-error browser normaliseContent returns a Blob not an AsyncIterable<Uint8Array>\n  return (0,_normalise_candidate_multiple_js__WEBPACK_IMPORTED_MODULE_1__.normaliseCandidateMultiple)(input, _normalise_content_browser_js__WEBPACK_IMPORTED_MODULE_0__.normaliseContent, true)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL3NyYy9maWxlcy9ub3JtYWxpc2UtaW5wdXQtbXVsdGlwbGUuYnJvd3Nlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBaUU7QUFDYTs7QUFFOUU7QUFDQSxhQUFhLDJEQUEyRDtBQUN4RSxhQUFhLDREQUE0RDtBQUN6RTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixrQ0FBa0M7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLHVCQUF1QjtBQUNsQyxhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0EsU0FBUyw0RkFBMEIsUUFBUSwyRUFBZ0I7QUFDM0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2UtMi9uZXh0anMvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL3NyYy9maWxlcy9ub3JtYWxpc2UtaW5wdXQtbXVsdGlwbGUuYnJvd3Nlci5qcz9kZjMwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG5vcm1hbGlzZUNvbnRlbnQgfSBmcm9tICcuL25vcm1hbGlzZS1jb250ZW50LmJyb3dzZXIuanMnXG5pbXBvcnQgeyBub3JtYWxpc2VDYW5kaWRhdGVNdWx0aXBsZSB9IGZyb20gJy4vbm9ybWFsaXNlLWNhbmRpZGF0ZS1tdWx0aXBsZS5qcydcblxuLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdpcGZzLWNvcmUtdHlwZXMvc3JjL3V0aWxzJykuSW1wb3J0Q2FuZGlkYXRlU3RyZWFtfSBJbXBvcnRDYW5kaWRhdGVTdHJlYW1cbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2lwZnMtY29yZS10eXBlcy9zcmMvdXRpbHMnKS5Ccm93c2VySW1wb3J0Q2FuZGlkYXRlfSBCcm93c2VySW1wb3J0Q2FuZGlkYXRlXG4gKi9cblxuLyoqXG4gKiBUcmFuc2Zvcm1zIGFueSBvZiB0aGUgYGlwZnMuYWRkQWxsYCBpbnB1dCB0eXBlcyBpbnRvXG4gKlxuICogYGBgXG4gKiBBc3luY0l0ZXJhYmxlPHsgcGF0aCwgbW9kZSwgbXRpbWUsIGNvbnRlbnQ6IEJsb2IgfT5cbiAqIGBgYFxuICpcbiAqIFNlZSBodHRwczovL2dpdGh1Yi5jb20vaXBmcy9qcy1pcGZzL2Jsb2IvbWFzdGVyL2RvY3MvY29yZS1hcGkvRklMRVMubWQjaXBmc2FkZGRhdGEtb3B0aW9uc1xuICpcbiAqIEBwYXJhbSB7SW1wb3J0Q2FuZGlkYXRlU3RyZWFtfSBpbnB1dFxuICogQHJldHVybnMge0FzeW5jR2VuZXJhdG9yPEJyb3dzZXJJbXBvcnRDYW5kaWRhdGUsIHZvaWQsIHVuZGVmaW5lZD59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBub3JtYWxpc2VJbnB1dCAoaW5wdXQpIHtcbiAgLy8gQHRzLWV4cGVjdC1lcnJvciBicm93c2VyIG5vcm1hbGlzZUNvbnRlbnQgcmV0dXJucyBhIEJsb2Igbm90IGFuIEFzeW5jSXRlcmFibGU8VWludDhBcnJheT5cbiAgcmV0dXJuIG5vcm1hbGlzZUNhbmRpZGF0ZU11bHRpcGxlKGlucHV0LCBub3JtYWxpc2VDb250ZW50LCB0cnVlKVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/src/files/normalise-input-multiple.browser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/src/files/normalise-input-multiple.js":
/*!****************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/src/files/normalise-input-multiple.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normaliseInput: () => (/* binding */ normaliseInput)\n/* harmony export */ });\n/* harmony import */ var _normalise_content_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./normalise-content.js */ \"(rsc)/./node_modules/ipfs-core-utils/src/files/normalise-content.js\");\n/* harmony import */ var _normalise_candidate_multiple_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./normalise-candidate-multiple.js */ \"(rsc)/./node_modules/ipfs-core-utils/src/files/normalise-candidate-multiple.js\");\n\n\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidateStream} ImportCandidateStream\n */\n\n/**\n * Transforms any of the `ipfs.addAll` input types into\n *\n * ```\n * AsyncIterable<{ path, mode, mtime, content: AsyncIterable<Uint8Array> }>\n * ```\n *\n * See https://github.com/ipfs/js-ipfs/blob/master/docs/core-api/FILES.md#ipfsadddata-options\n *\n * @param {ImportCandidateStream} input\n */\nfunction normaliseInput (input) {\n  return (0,_normalise_candidate_multiple_js__WEBPACK_IMPORTED_MODULE_1__.normaliseCandidateMultiple)(input, _normalise_content_js__WEBPACK_IMPORTED_MODULE_0__.normaliseContent)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL3NyYy9maWxlcy9ub3JtYWxpc2UtaW5wdXQtbXVsdGlwbGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXlEO0FBQ3FCOztBQUU5RTtBQUNBLGFBQWEsMkRBQTJEO0FBQ3hFOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHVEQUF1RDtBQUMxRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsdUJBQXVCO0FBQ2xDO0FBQ087QUFDUCxTQUFTLDRGQUEwQixRQUFRLG1FQUFnQjtBQUMzRCIsInNvdXJjZXMiOlsid2VicGFjazovL0BzZS0yL25leHRqcy8uL25vZGVfbW9kdWxlcy9pcGZzLWNvcmUtdXRpbHMvc3JjL2ZpbGVzL25vcm1hbGlzZS1pbnB1dC1tdWx0aXBsZS5qcz9kMzBiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG5vcm1hbGlzZUNvbnRlbnQgfSBmcm9tICcuL25vcm1hbGlzZS1jb250ZW50LmpzJ1xuaW1wb3J0IHsgbm9ybWFsaXNlQ2FuZGlkYXRlTXVsdGlwbGUgfSBmcm9tICcuL25vcm1hbGlzZS1jYW5kaWRhdGUtbXVsdGlwbGUuanMnXG5cbi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnaXBmcy1jb3JlLXR5cGVzL3NyYy91dGlscycpLkltcG9ydENhbmRpZGF0ZVN0cmVhbX0gSW1wb3J0Q2FuZGlkYXRlU3RyZWFtXG4gKi9cblxuLyoqXG4gKiBUcmFuc2Zvcm1zIGFueSBvZiB0aGUgYGlwZnMuYWRkQWxsYCBpbnB1dCB0eXBlcyBpbnRvXG4gKlxuICogYGBgXG4gKiBBc3luY0l0ZXJhYmxlPHsgcGF0aCwgbW9kZSwgbXRpbWUsIGNvbnRlbnQ6IEFzeW5jSXRlcmFibGU8VWludDhBcnJheT4gfT5cbiAqIGBgYFxuICpcbiAqIFNlZSBodHRwczovL2dpdGh1Yi5jb20vaXBmcy9qcy1pcGZzL2Jsb2IvbWFzdGVyL2RvY3MvY29yZS1hcGkvRklMRVMubWQjaXBmc2FkZGRhdGEtb3B0aW9uc1xuICpcbiAqIEBwYXJhbSB7SW1wb3J0Q2FuZGlkYXRlU3RyZWFtfSBpbnB1dFxuICovXG5leHBvcnQgZnVuY3Rpb24gbm9ybWFsaXNlSW5wdXQgKGlucHV0KSB7XG4gIHJldHVybiBub3JtYWxpc2VDYW5kaWRhdGVNdWx0aXBsZShpbnB1dCwgbm9ybWFsaXNlQ29udGVudClcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/src/files/normalise-input-multiple.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/src/files/normalise-input-single.js":
/*!**************************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/src/files/normalise-input-single.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normaliseInput: () => (/* binding */ normaliseInput)\n/* harmony export */ });\n/* harmony import */ var _normalise_content_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./normalise-content.js */ \"(rsc)/./node_modules/ipfs-core-utils/src/files/normalise-content.js\");\n/* harmony import */ var _normalise_candidate_single_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./normalise-candidate-single.js */ \"(rsc)/./node_modules/ipfs-core-utils/src/files/normalise-candidate-single.js\");\n\n\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidate} ImportCandidate\n */\n\n/**\n * Transforms any of the `ipfs.add` input types into\n *\n * ```\n * AsyncIterable<{ path, mode, mtime, content: AsyncIterable<Uint8Array> }>\n * ```\n *\n * See https://github.com/ipfs/js-ipfs/blob/master/docs/core-api/FILES.md#ipfsadddata-options\n *\n * @param {ImportCandidate} input\n */\nfunction normaliseInput (input) {\n  return (0,_normalise_candidate_single_js__WEBPACK_IMPORTED_MODULE_1__.normaliseCandidateSingle)(input, _normalise_content_js__WEBPACK_IMPORTED_MODULE_0__.normaliseContent)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL3NyYy9maWxlcy9ub3JtYWxpc2UtaW5wdXQtc2luZ2xlLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF5RDtBQUNpQjs7QUFFMUU7QUFDQSxhQUFhLHFEQUFxRDtBQUNsRTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQix1REFBdUQ7QUFDMUU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGlCQUFpQjtBQUM1QjtBQUNPO0FBQ1AsU0FBUyx3RkFBd0IsUUFBUSxtRUFBZ0I7QUFDekQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2UtMi9uZXh0anMvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL3NyYy9maWxlcy9ub3JtYWxpc2UtaW5wdXQtc2luZ2xlLmpzPzZiOTIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbm9ybWFsaXNlQ29udGVudCB9IGZyb20gJy4vbm9ybWFsaXNlLWNvbnRlbnQuanMnXG5pbXBvcnQgeyBub3JtYWxpc2VDYW5kaWRhdGVTaW5nbGUgfSBmcm9tICcuL25vcm1hbGlzZS1jYW5kaWRhdGUtc2luZ2xlLmpzJ1xuXG4vKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2lwZnMtY29yZS10eXBlcy9zcmMvdXRpbHMnKS5JbXBvcnRDYW5kaWRhdGV9IEltcG9ydENhbmRpZGF0ZVxuICovXG5cbi8qKlxuICogVHJhbnNmb3JtcyBhbnkgb2YgdGhlIGBpcGZzLmFkZGAgaW5wdXQgdHlwZXMgaW50b1xuICpcbiAqIGBgYFxuICogQXN5bmNJdGVyYWJsZTx7IHBhdGgsIG1vZGUsIG10aW1lLCBjb250ZW50OiBBc3luY0l0ZXJhYmxlPFVpbnQ4QXJyYXk+IH0+XG4gKiBgYGBcbiAqXG4gKiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2lwZnMvanMtaXBmcy9ibG9iL21hc3Rlci9kb2NzL2NvcmUtYXBpL0ZJTEVTLm1kI2lwZnNhZGRkYXRhLW9wdGlvbnNcbiAqXG4gKiBAcGFyYW0ge0ltcG9ydENhbmRpZGF0ZX0gaW5wdXRcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG5vcm1hbGlzZUlucHV0IChpbnB1dCkge1xuICByZXR1cm4gbm9ybWFsaXNlQ2FuZGlkYXRlU2luZ2xlKGlucHV0LCBub3JtYWxpc2VDb250ZW50KVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/src/files/normalise-input-single.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/src/files/utils.js":
/*!*********************************************************!*\
  !*** ./node_modules/ipfs-core-utils/src/files/utils.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isBlob: () => (/* binding */ isBlob),\n/* harmony export */   isBytes: () => (/* binding */ isBytes),\n/* harmony export */   isFileObject: () => (/* binding */ isFileObject),\n/* harmony export */   isReadableStream: () => (/* binding */ isReadableStream)\n/* harmony export */ });\n/**\n * @param {any} obj\n * @returns {obj is ArrayBufferView|ArrayBuffer}\n */\nfunction isBytes (obj) {\n  return ArrayBuffer.isView(obj) || obj instanceof ArrayBuffer\n}\n\n/**\n * @param {any} obj\n * @returns {obj is globalThis.Blob}\n */\nfunction isBlob (obj) {\n  return obj.constructor &&\n    (obj.constructor.name === 'Blob' || obj.constructor.name === 'File') &&\n    typeof obj.stream === 'function'\n}\n\n/**\n * An object with a path or content property\n *\n * @param {any} obj\n * @returns {obj is import('ipfs-core-types/src/utils').ImportCandidate}\n */\nfunction isFileObject (obj) {\n  return typeof obj === 'object' && (obj.path || obj.content)\n}\n\n/**\n * @param {any} value\n * @returns {value is ReadableStream}\n */\nconst isReadableStream = (value) =>\n  value && typeof value.getReader === 'function'\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL3NyYy9maWxlcy91dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQSxXQUFXLEtBQUs7QUFDaEIsYUFBYTtBQUNiO0FBQ087QUFDUDtBQUNBOztBQUVBO0FBQ0EsV0FBVyxLQUFLO0FBQ2hCLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxLQUFLO0FBQ2hCLGFBQWE7QUFDYjtBQUNPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBLFdBQVcsS0FBSztBQUNoQixhQUFhO0FBQ2I7QUFDTztBQUNQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNlLTIvbmV4dGpzLy4vbm9kZV9tb2R1bGVzL2lwZnMtY29yZS11dGlscy9zcmMvZmlsZXMvdXRpbHMuanM/ZDdlNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBwYXJhbSB7YW55fSBvYmpcbiAqIEByZXR1cm5zIHtvYmogaXMgQXJyYXlCdWZmZXJWaWV3fEFycmF5QnVmZmVyfVxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNCeXRlcyAob2JqKSB7XG4gIHJldHVybiBBcnJheUJ1ZmZlci5pc1ZpZXcob2JqKSB8fCBvYmogaW5zdGFuY2VvZiBBcnJheUJ1ZmZlclxufVxuXG4vKipcbiAqIEBwYXJhbSB7YW55fSBvYmpcbiAqIEByZXR1cm5zIHtvYmogaXMgZ2xvYmFsVGhpcy5CbG9ifVxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNCbG9iIChvYmopIHtcbiAgcmV0dXJuIG9iai5jb25zdHJ1Y3RvciAmJlxuICAgIChvYmouY29uc3RydWN0b3IubmFtZSA9PT0gJ0Jsb2InIHx8IG9iai5jb25zdHJ1Y3Rvci5uYW1lID09PSAnRmlsZScpICYmXG4gICAgdHlwZW9mIG9iai5zdHJlYW0gPT09ICdmdW5jdGlvbidcbn1cblxuLyoqXG4gKiBBbiBvYmplY3Qgd2l0aCBhIHBhdGggb3IgY29udGVudCBwcm9wZXJ0eVxuICpcbiAqIEBwYXJhbSB7YW55fSBvYmpcbiAqIEByZXR1cm5zIHtvYmogaXMgaW1wb3J0KCdpcGZzLWNvcmUtdHlwZXMvc3JjL3V0aWxzJykuSW1wb3J0Q2FuZGlkYXRlfVxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNGaWxlT2JqZWN0IChvYmopIHtcbiAgcmV0dXJuIHR5cGVvZiBvYmogPT09ICdvYmplY3QnICYmIChvYmoucGF0aCB8fCBvYmouY29udGVudClcbn1cblxuLyoqXG4gKiBAcGFyYW0ge2FueX0gdmFsdWVcbiAqIEByZXR1cm5zIHt2YWx1ZSBpcyBSZWFkYWJsZVN0cmVhbX1cbiAqL1xuZXhwb3J0IGNvbnN0IGlzUmVhZGFibGVTdHJlYW0gPSAodmFsdWUpID0+XG4gIHZhbHVlICYmIHR5cGVvZiB2YWx1ZS5nZXRSZWFkZXIgPT09ICdmdW5jdGlvbidcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/src/files/utils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/src/mode-to-string.js":
/*!************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/src/mode-to-string.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   modeToString: () => (/* binding */ modeToString)\n/* harmony export */ });\n\n/**\n * @param {number | string | undefined} mode\n */\nfunction modeToString (mode) {\n  if (mode == null) {\n    return undefined\n  }\n\n  if (typeof mode === 'string') {\n    return mode\n  }\n\n  return mode.toString(8).padStart(4, '0')\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL3NyYy9tb2RlLXRvLXN0cmluZy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUNBO0FBQ0EsV0FBVyw2QkFBNkI7QUFDeEM7QUFDTztBQUNQO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BzZS0yL25leHRqcy8uL25vZGVfbW9kdWxlcy9pcGZzLWNvcmUtdXRpbHMvc3JjL21vZGUtdG8tc3RyaW5nLmpzPzI3ZDgiXSwic291cmNlc0NvbnRlbnQiOlsiXG4vKipcbiAqIEBwYXJhbSB7bnVtYmVyIHwgc3RyaW5nIHwgdW5kZWZpbmVkfSBtb2RlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBtb2RlVG9TdHJpbmcgKG1vZGUpIHtcbiAgaWYgKG1vZGUgPT0gbnVsbCkge1xuICAgIHJldHVybiB1bmRlZmluZWRcbiAgfVxuXG4gIGlmICh0eXBlb2YgbW9kZSA9PT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gbW9kZVxuICB9XG5cbiAgcmV0dXJuIG1vZGUudG9TdHJpbmcoOCkucGFkU3RhcnQoNCwgJzAnKVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/src/mode-to-string.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/src/multibases.js":
/*!********************************************************!*\
  !*** ./node_modules/ipfs-core-utils/src/multibases.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Multibases: () => (/* binding */ Multibases)\n/* harmony export */ });\n/**\n * @typedef {import('multiformats/bases/interface').MultibaseCodec<any>} MultibaseCodec\n * @typedef {import('./types').LoadBaseFn} LoadBaseFn\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\n/**\n * @type {LoadBaseFn}\n */\nconst LOAD_BASE = (name) => Promise.reject(new Error(`No base found for \"${name}\"`))\n\nclass Multibases {\n  /**\n   * @param {object} options\n   * @param {LoadBaseFn} [options.loadBase]\n   * @param {MultibaseCodec[]} options.bases\n   */\n  constructor (options) {\n    // Object with current list of active resolvers\n    /** @type {Record<string, MultibaseCodec>}} */\n    this._basesByName = {}\n\n    // Object with current list of active resolvers\n    /** @type {Record<string, MultibaseCodec>}} */\n    this._basesByPrefix = {}\n\n    this._loadBase = options.loadBase || LOAD_BASE\n\n    // Enable all supplied codecs\n    for (const base of options.bases) {\n      this.addBase(base)\n    }\n  }\n\n  /**\n   * Add support for a multibase codec\n   *\n   * @param {MultibaseCodec} base\n   */\n  addBase (base) {\n    if (this._basesByName[base.name] || this._basesByPrefix[base.prefix]) {\n      throw new Error(`Codec already exists for codec \"${base.name}\"`)\n    }\n\n    this._basesByName[base.name] = base\n    this._basesByPrefix[base.prefix] = base\n  }\n\n  /**\n   * Remove support for a multibase codec\n   *\n   * @param {MultibaseCodec} base\n   */\n  removeBase (base) {\n    delete this._basesByName[base.name]\n    delete this._basesByPrefix[base.prefix]\n  }\n\n  /**\n   * @param {string} nameOrPrefix\n   */\n  async getBase (nameOrPrefix) {\n    if (this._basesByName[nameOrPrefix]) {\n      return this._basesByName[nameOrPrefix]\n    }\n\n    if (this._basesByPrefix[nameOrPrefix]) {\n      return this._basesByPrefix[nameOrPrefix]\n    }\n\n    // If not supported, attempt to dynamically load this codec\n    const base = await this._loadBase(nameOrPrefix)\n\n    if (this._basesByName[base.name] == null && this._basesByPrefix[base.prefix] == null) {\n      this.addBase(base)\n    }\n\n    return base\n  }\n\n  listBases () {\n    return Object.values(this._basesByName)\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL3NyYy9tdWx0aWJhc2VzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBLGFBQWEsNERBQTREO0FBQ3pFLGFBQWEsOEJBQThCO0FBQzNDLGFBQWEsa0RBQWtEO0FBQy9EOztBQUVBO0FBQ0EsVUFBVTtBQUNWO0FBQ0EsMkVBQTJFLEtBQUs7O0FBRXpFO0FBQ1A7QUFDQSxhQUFhLFFBQVE7QUFDckIsYUFBYSxZQUFZO0FBQ3pCLGFBQWEsa0JBQWtCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBLGVBQWUsaUNBQWlDO0FBQ2hEOztBQUVBO0FBQ0EsZUFBZSxpQ0FBaUM7QUFDaEQ7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLGdCQUFnQjtBQUM3QjtBQUNBO0FBQ0E7QUFDQSx5REFBeUQsVUFBVTtBQUNuRTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsYUFBYSxnQkFBZ0I7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNlLTIvbmV4dGpzLy4vbm9kZV9tb2R1bGVzL2lwZnMtY29yZS11dGlscy9zcmMvbXVsdGliYXNlcy5qcz8zMTBmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnbXVsdGlmb3JtYXRzL2Jhc2VzL2ludGVyZmFjZScpLk11bHRpYmFzZUNvZGVjPGFueT59IE11bHRpYmFzZUNvZGVjXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL3R5cGVzJykuTG9hZEJhc2VGbn0gTG9hZEJhc2VGblxuICogQHR5cGVkZWYge2ltcG9ydCgnaXBmcy1jb3JlLXR5cGVzL3NyYy91dGlscycpLkFib3J0T3B0aW9uc30gQWJvcnRPcHRpb25zXG4gKi9cblxuLyoqXG4gKiBAdHlwZSB7TG9hZEJhc2VGbn1cbiAqL1xuY29uc3QgTE9BRF9CQVNFID0gKG5hbWUpID0+IFByb21pc2UucmVqZWN0KG5ldyBFcnJvcihgTm8gYmFzZSBmb3VuZCBmb3IgXCIke25hbWV9XCJgKSlcblxuZXhwb3J0IGNsYXNzIE11bHRpYmFzZXMge1xuICAvKipcbiAgICogQHBhcmFtIHtvYmplY3R9IG9wdGlvbnNcbiAgICogQHBhcmFtIHtMb2FkQmFzZUZufSBbb3B0aW9ucy5sb2FkQmFzZV1cbiAgICogQHBhcmFtIHtNdWx0aWJhc2VDb2RlY1tdfSBvcHRpb25zLmJhc2VzXG4gICAqL1xuICBjb25zdHJ1Y3RvciAob3B0aW9ucykge1xuICAgIC8vIE9iamVjdCB3aXRoIGN1cnJlbnQgbGlzdCBvZiBhY3RpdmUgcmVzb2x2ZXJzXG4gICAgLyoqIEB0eXBlIHtSZWNvcmQ8c3RyaW5nLCBNdWx0aWJhc2VDb2RlYz59fSAqL1xuICAgIHRoaXMuX2Jhc2VzQnlOYW1lID0ge31cblxuICAgIC8vIE9iamVjdCB3aXRoIGN1cnJlbnQgbGlzdCBvZiBhY3RpdmUgcmVzb2x2ZXJzXG4gICAgLyoqIEB0eXBlIHtSZWNvcmQ8c3RyaW5nLCBNdWx0aWJhc2VDb2RlYz59fSAqL1xuICAgIHRoaXMuX2Jhc2VzQnlQcmVmaXggPSB7fVxuXG4gICAgdGhpcy5fbG9hZEJhc2UgPSBvcHRpb25zLmxvYWRCYXNlIHx8IExPQURfQkFTRVxuXG4gICAgLy8gRW5hYmxlIGFsbCBzdXBwbGllZCBjb2RlY3NcbiAgICBmb3IgKGNvbnN0IGJhc2Ugb2Ygb3B0aW9ucy5iYXNlcykge1xuICAgICAgdGhpcy5hZGRCYXNlKGJhc2UpXG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEFkZCBzdXBwb3J0IGZvciBhIG11bHRpYmFzZSBjb2RlY1xuICAgKlxuICAgKiBAcGFyYW0ge011bHRpYmFzZUNvZGVjfSBiYXNlXG4gICAqL1xuICBhZGRCYXNlIChiYXNlKSB7XG4gICAgaWYgKHRoaXMuX2Jhc2VzQnlOYW1lW2Jhc2UubmFtZV0gfHwgdGhpcy5fYmFzZXNCeVByZWZpeFtiYXNlLnByZWZpeF0pIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgQ29kZWMgYWxyZWFkeSBleGlzdHMgZm9yIGNvZGVjIFwiJHtiYXNlLm5hbWV9XCJgKVxuICAgIH1cblxuICAgIHRoaXMuX2Jhc2VzQnlOYW1lW2Jhc2UubmFtZV0gPSBiYXNlXG4gICAgdGhpcy5fYmFzZXNCeVByZWZpeFtiYXNlLnByZWZpeF0gPSBiYXNlXG4gIH1cblxuICAvKipcbiAgICogUmVtb3ZlIHN1cHBvcnQgZm9yIGEgbXVsdGliYXNlIGNvZGVjXG4gICAqXG4gICAqIEBwYXJhbSB7TXVsdGliYXNlQ29kZWN9IGJhc2VcbiAgICovXG4gIHJlbW92ZUJhc2UgKGJhc2UpIHtcbiAgICBkZWxldGUgdGhpcy5fYmFzZXNCeU5hbWVbYmFzZS5uYW1lXVxuICAgIGRlbGV0ZSB0aGlzLl9iYXNlc0J5UHJlZml4W2Jhc2UucHJlZml4XVxuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lT3JQcmVmaXhcbiAgICovXG4gIGFzeW5jIGdldEJhc2UgKG5hbWVPclByZWZpeCkge1xuICAgIGlmICh0aGlzLl9iYXNlc0J5TmFtZVtuYW1lT3JQcmVmaXhdKSB7XG4gICAgICByZXR1cm4gdGhpcy5fYmFzZXNCeU5hbWVbbmFtZU9yUHJlZml4XVxuICAgIH1cblxuICAgIGlmICh0aGlzLl9iYXNlc0J5UHJlZml4W25hbWVPclByZWZpeF0pIHtcbiAgICAgIHJldHVybiB0aGlzLl9iYXNlc0J5UHJlZml4W25hbWVPclByZWZpeF1cbiAgICB9XG5cbiAgICAvLyBJZiBub3Qgc3VwcG9ydGVkLCBhdHRlbXB0IHRvIGR5bmFtaWNhbGx5IGxvYWQgdGhpcyBjb2RlY1xuICAgIGNvbnN0IGJhc2UgPSBhd2FpdCB0aGlzLl9sb2FkQmFzZShuYW1lT3JQcmVmaXgpXG5cbiAgICBpZiAodGhpcy5fYmFzZXNCeU5hbWVbYmFzZS5uYW1lXSA9PSBudWxsICYmIHRoaXMuX2Jhc2VzQnlQcmVmaXhbYmFzZS5wcmVmaXhdID09IG51bGwpIHtcbiAgICAgIHRoaXMuYWRkQmFzZShiYXNlKVxuICAgIH1cblxuICAgIHJldHVybiBiYXNlXG4gIH1cblxuICBsaXN0QmFzZXMgKCkge1xuICAgIHJldHVybiBPYmplY3QudmFsdWVzKHRoaXMuX2Jhc2VzQnlOYW1lKVxuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/src/multibases.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/src/multicodecs.js":
/*!*********************************************************!*\
  !*** ./node_modules/ipfs-core-utils/src/multicodecs.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Multicodecs: () => (/* binding */ Multicodecs)\n/* harmony export */ });\n/**\n * @typedef {import('multiformats/codecs/interface').BlockCodec<any, any>} BlockCodec\n * @typedef {import('./types').LoadCodecFn} LoadCodecFn\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\n/**\n * @type {LoadCodecFn}\n */\nconst LOAD_CODEC = (codeOrName) => Promise.reject(new Error(`No codec found for \"${codeOrName}\"`))\n\nclass Multicodecs {\n  /**\n   * @param {object} options\n   * @param {LoadCodecFn} [options.loadCodec]\n   * @param {BlockCodec[]} options.codecs\n   */\n  constructor (options) {\n    // Object with current list of active resolvers\n    /** @type {Record<string, BlockCodec>}} */\n    this._codecsByName = {}\n\n    // Object with current list of active resolvers\n    /** @type {Record<number, BlockCodec>}} */\n    this._codecsByCode = {}\n\n    this._loadCodec = options.loadCodec || LOAD_CODEC\n\n    // Enable all supplied codecs\n    for (const codec of options.codecs) {\n      this.addCodec(codec)\n    }\n  }\n\n  /**\n   * Add support for a block codec\n   *\n   * @param {BlockCodec} codec\n   */\n  addCodec (codec) {\n    if (this._codecsByName[codec.name] || this._codecsByCode[codec.code]) {\n      throw new Error(`Resolver already exists for codec \"${codec.name}\"`)\n    }\n\n    this._codecsByName[codec.name] = codec\n    this._codecsByCode[codec.code] = codec\n  }\n\n  /**\n   * Remove support for a block codec\n   *\n   * @param {BlockCodec} codec\n   */\n  removeCodec (codec) {\n    delete this._codecsByName[codec.name]\n    delete this._codecsByCode[codec.code]\n  }\n\n  /**\n   * @param {number | string} code\n   */\n  async getCodec (code) {\n    const table = typeof code === 'string' ? this._codecsByName : this._codecsByCode\n\n    if (table[code]) {\n      return table[code]\n    }\n\n    // If not supported, attempt to dynamically load this codec\n    const codec = await this._loadCodec(code)\n\n    if (table[code] == null) {\n      this.addCodec(codec)\n    }\n\n    return codec\n  }\n\n  listCodecs () {\n    return Object.values(this._codecsByName)\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL3NyYy9tdWx0aWNvZGVjcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQSxhQUFhLDhEQUE4RDtBQUMzRSxhQUFhLCtCQUErQjtBQUM1QyxhQUFhLGtEQUFrRDtBQUMvRDs7QUFFQTtBQUNBLFVBQVU7QUFDVjtBQUNBLG1GQUFtRixXQUFXOztBQUV2RjtBQUNQO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsYUFBYTtBQUMxQixhQUFhLGNBQWM7QUFDM0I7QUFDQTtBQUNBO0FBQ0EsZUFBZSw2QkFBNkI7QUFDNUM7O0FBRUE7QUFDQSxlQUFlLDZCQUE2QjtBQUM1Qzs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsWUFBWTtBQUN6QjtBQUNBO0FBQ0E7QUFDQSw0REFBNEQsV0FBVztBQUN2RTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsYUFBYSxZQUFZO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxhQUFhLGlCQUFpQjtBQUM5QjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2UtMi9uZXh0anMvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL3NyYy9tdWx0aWNvZGVjcy5qcz8xNWI4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnbXVsdGlmb3JtYXRzL2NvZGVjcy9pbnRlcmZhY2UnKS5CbG9ja0NvZGVjPGFueSwgYW55Pn0gQmxvY2tDb2RlY1xuICogQHR5cGVkZWYge2ltcG9ydCgnLi90eXBlcycpLkxvYWRDb2RlY0ZufSBMb2FkQ29kZWNGblxuICogQHR5cGVkZWYge2ltcG9ydCgnaXBmcy1jb3JlLXR5cGVzL3NyYy91dGlscycpLkFib3J0T3B0aW9uc30gQWJvcnRPcHRpb25zXG4gKi9cblxuLyoqXG4gKiBAdHlwZSB7TG9hZENvZGVjRm59XG4gKi9cbmNvbnN0IExPQURfQ09ERUMgPSAoY29kZU9yTmFtZSkgPT4gUHJvbWlzZS5yZWplY3QobmV3IEVycm9yKGBObyBjb2RlYyBmb3VuZCBmb3IgXCIke2NvZGVPck5hbWV9XCJgKSlcblxuZXhwb3J0IGNsYXNzIE11bHRpY29kZWNzIHtcbiAgLyoqXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBvcHRpb25zXG4gICAqIEBwYXJhbSB7TG9hZENvZGVjRm59IFtvcHRpb25zLmxvYWRDb2RlY11cbiAgICogQHBhcmFtIHtCbG9ja0NvZGVjW119IG9wdGlvbnMuY29kZWNzXG4gICAqL1xuICBjb25zdHJ1Y3RvciAob3B0aW9ucykge1xuICAgIC8vIE9iamVjdCB3aXRoIGN1cnJlbnQgbGlzdCBvZiBhY3RpdmUgcmVzb2x2ZXJzXG4gICAgLyoqIEB0eXBlIHtSZWNvcmQ8c3RyaW5nLCBCbG9ja0NvZGVjPn19ICovXG4gICAgdGhpcy5fY29kZWNzQnlOYW1lID0ge31cblxuICAgIC8vIE9iamVjdCB3aXRoIGN1cnJlbnQgbGlzdCBvZiBhY3RpdmUgcmVzb2x2ZXJzXG4gICAgLyoqIEB0eXBlIHtSZWNvcmQ8bnVtYmVyLCBCbG9ja0NvZGVjPn19ICovXG4gICAgdGhpcy5fY29kZWNzQnlDb2RlID0ge31cblxuICAgIHRoaXMuX2xvYWRDb2RlYyA9IG9wdGlvbnMubG9hZENvZGVjIHx8IExPQURfQ09ERUNcblxuICAgIC8vIEVuYWJsZSBhbGwgc3VwcGxpZWQgY29kZWNzXG4gICAgZm9yIChjb25zdCBjb2RlYyBvZiBvcHRpb25zLmNvZGVjcykge1xuICAgICAgdGhpcy5hZGRDb2RlYyhjb2RlYylcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQWRkIHN1cHBvcnQgZm9yIGEgYmxvY2sgY29kZWNcbiAgICpcbiAgICogQHBhcmFtIHtCbG9ja0NvZGVjfSBjb2RlY1xuICAgKi9cbiAgYWRkQ29kZWMgKGNvZGVjKSB7XG4gICAgaWYgKHRoaXMuX2NvZGVjc0J5TmFtZVtjb2RlYy5uYW1lXSB8fCB0aGlzLl9jb2RlY3NCeUNvZGVbY29kZWMuY29kZV0pIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgUmVzb2x2ZXIgYWxyZWFkeSBleGlzdHMgZm9yIGNvZGVjIFwiJHtjb2RlYy5uYW1lfVwiYClcbiAgICB9XG5cbiAgICB0aGlzLl9jb2RlY3NCeU5hbWVbY29kZWMubmFtZV0gPSBjb2RlY1xuICAgIHRoaXMuX2NvZGVjc0J5Q29kZVtjb2RlYy5jb2RlXSA9IGNvZGVjXG4gIH1cblxuICAvKipcbiAgICogUmVtb3ZlIHN1cHBvcnQgZm9yIGEgYmxvY2sgY29kZWNcbiAgICpcbiAgICogQHBhcmFtIHtCbG9ja0NvZGVjfSBjb2RlY1xuICAgKi9cbiAgcmVtb3ZlQ29kZWMgKGNvZGVjKSB7XG4gICAgZGVsZXRlIHRoaXMuX2NvZGVjc0J5TmFtZVtjb2RlYy5uYW1lXVxuICAgIGRlbGV0ZSB0aGlzLl9jb2RlY3NCeUNvZGVbY29kZWMuY29kZV1cbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge251bWJlciB8IHN0cmluZ30gY29kZVxuICAgKi9cbiAgYXN5bmMgZ2V0Q29kZWMgKGNvZGUpIHtcbiAgICBjb25zdCB0YWJsZSA9IHR5cGVvZiBjb2RlID09PSAnc3RyaW5nJyA/IHRoaXMuX2NvZGVjc0J5TmFtZSA6IHRoaXMuX2NvZGVjc0J5Q29kZVxuXG4gICAgaWYgKHRhYmxlW2NvZGVdKSB7XG4gICAgICByZXR1cm4gdGFibGVbY29kZV1cbiAgICB9XG5cbiAgICAvLyBJZiBub3Qgc3VwcG9ydGVkLCBhdHRlbXB0IHRvIGR5bmFtaWNhbGx5IGxvYWQgdGhpcyBjb2RlY1xuICAgIGNvbnN0IGNvZGVjID0gYXdhaXQgdGhpcy5fbG9hZENvZGVjKGNvZGUpXG5cbiAgICBpZiAodGFibGVbY29kZV0gPT0gbnVsbCkge1xuICAgICAgdGhpcy5hZGRDb2RlYyhjb2RlYylcbiAgICB9XG5cbiAgICByZXR1cm4gY29kZWNcbiAgfVxuXG4gIGxpc3RDb2RlY3MgKCkge1xuICAgIHJldHVybiBPYmplY3QudmFsdWVzKHRoaXMuX2NvZGVjc0J5TmFtZSlcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/src/multicodecs.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/src/multihashes.js":
/*!*********************************************************!*\
  !*** ./node_modules/ipfs-core-utils/src/multihashes.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Multihashes: () => (/* binding */ Multihashes)\n/* harmony export */ });\n/**\n * @typedef {import('multiformats/hashes/interface').MultihashHasher} MultihashHasher\n * @typedef {import('./types').LoadHasherFn} LoadHasherFn\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\n/**\n * @type {LoadHasherFn}\n */\nconst LOAD_HASHER = (codeOrName) => Promise.reject(new Error(`No hasher found for \"${codeOrName}\"`))\n\nclass Multihashes {\n  /**\n   * @param {object} options\n   * @param {LoadHasherFn} [options.loadHasher]\n   * @param {MultihashHasher[]} options.hashers\n   */\n  constructor (options) {\n    // Object with current list of active hashers\n    /** @type {Record<string, MultihashHasher>}} */\n    this._hashersByName = {}\n\n    // Object with current list of active hashers\n    /** @type {Record<number, MultihashHasher>}} */\n    this._hashersByCode = {}\n\n    this._loadHasher = options.loadHasher || LOAD_HASHER\n\n    // Enable all supplied hashers\n    for (const hasher of options.hashers) {\n      this.addHasher(hasher)\n    }\n  }\n\n  /**\n   * Add support for a multibase hasher\n   *\n   * @param {MultihashHasher} hasher\n   */\n  addHasher (hasher) {\n    if (this._hashersByName[hasher.name] || this._hashersByCode[hasher.code]) {\n      throw new Error(`Resolver already exists for codec \"${hasher.name}\"`)\n    }\n\n    this._hashersByName[hasher.name] = hasher\n    this._hashersByCode[hasher.code] = hasher\n  }\n\n  /**\n   * Remove support for a multibase hasher\n   *\n   * @param {MultihashHasher} hasher\n   */\n  removeHasher (hasher) {\n    delete this._hashersByName[hasher.name]\n    delete this._hashersByCode[hasher.code]\n  }\n\n  /**\n   * @param {number | string} code\n   */\n  async getHasher (code) {\n    const table = typeof code === 'string' ? this._hashersByName : this._hashersByCode\n\n    if (table[code]) {\n      return table[code]\n    }\n\n    // If not supported, attempt to dynamically load this hasher\n    const hasher = await this._loadHasher(code)\n\n    if (table[code] == null) {\n      this.addHasher(hasher)\n    }\n\n    return hasher\n  }\n\n  listHashers () {\n    return Object.values(this._hashersByName)\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL3NyYy9tdWx0aWhhc2hlcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQSxhQUFhLHlEQUF5RDtBQUN0RSxhQUFhLGdDQUFnQztBQUM3QyxhQUFhLGtEQUFrRDtBQUMvRDs7QUFFQTtBQUNBLFVBQVU7QUFDVjtBQUNBLHFGQUFxRixXQUFXOztBQUV6RjtBQUNQO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsY0FBYztBQUMzQixhQUFhLG1CQUFtQjtBQUNoQztBQUNBO0FBQ0E7QUFDQSxlQUFlLGtDQUFrQztBQUNqRDs7QUFFQTtBQUNBLGVBQWUsa0NBQWtDO0FBQ2pEOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsYUFBYSxpQkFBaUI7QUFDOUI7QUFDQTtBQUNBO0FBQ0EsNERBQTRELFlBQVk7QUFDeEU7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsaUJBQWlCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxhQUFhLGlCQUFpQjtBQUM5QjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2UtMi9uZXh0anMvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL3NyYy9tdWx0aWhhc2hlcy5qcz84NjU0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnbXVsdGlmb3JtYXRzL2hhc2hlcy9pbnRlcmZhY2UnKS5NdWx0aWhhc2hIYXNoZXJ9IE11bHRpaGFzaEhhc2hlclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi90eXBlcycpLkxvYWRIYXNoZXJGbn0gTG9hZEhhc2hlckZuXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdpcGZzLWNvcmUtdHlwZXMvc3JjL3V0aWxzJykuQWJvcnRPcHRpb25zfSBBYm9ydE9wdGlvbnNcbiAqL1xuXG4vKipcbiAqIEB0eXBlIHtMb2FkSGFzaGVyRm59XG4gKi9cbmNvbnN0IExPQURfSEFTSEVSID0gKGNvZGVPck5hbWUpID0+IFByb21pc2UucmVqZWN0KG5ldyBFcnJvcihgTm8gaGFzaGVyIGZvdW5kIGZvciBcIiR7Y29kZU9yTmFtZX1cImApKVxuXG5leHBvcnQgY2xhc3MgTXVsdGloYXNoZXMge1xuICAvKipcbiAgICogQHBhcmFtIHtvYmplY3R9IG9wdGlvbnNcbiAgICogQHBhcmFtIHtMb2FkSGFzaGVyRm59IFtvcHRpb25zLmxvYWRIYXNoZXJdXG4gICAqIEBwYXJhbSB7TXVsdGloYXNoSGFzaGVyW119IG9wdGlvbnMuaGFzaGVyc1xuICAgKi9cbiAgY29uc3RydWN0b3IgKG9wdGlvbnMpIHtcbiAgICAvLyBPYmplY3Qgd2l0aCBjdXJyZW50IGxpc3Qgb2YgYWN0aXZlIGhhc2hlcnNcbiAgICAvKiogQHR5cGUge1JlY29yZDxzdHJpbmcsIE11bHRpaGFzaEhhc2hlcj59fSAqL1xuICAgIHRoaXMuX2hhc2hlcnNCeU5hbWUgPSB7fVxuXG4gICAgLy8gT2JqZWN0IHdpdGggY3VycmVudCBsaXN0IG9mIGFjdGl2ZSBoYXNoZXJzXG4gICAgLyoqIEB0eXBlIHtSZWNvcmQ8bnVtYmVyLCBNdWx0aWhhc2hIYXNoZXI+fX0gKi9cbiAgICB0aGlzLl9oYXNoZXJzQnlDb2RlID0ge31cblxuICAgIHRoaXMuX2xvYWRIYXNoZXIgPSBvcHRpb25zLmxvYWRIYXNoZXIgfHwgTE9BRF9IQVNIRVJcblxuICAgIC8vIEVuYWJsZSBhbGwgc3VwcGxpZWQgaGFzaGVyc1xuICAgIGZvciAoY29uc3QgaGFzaGVyIG9mIG9wdGlvbnMuaGFzaGVycykge1xuICAgICAgdGhpcy5hZGRIYXNoZXIoaGFzaGVyKVxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBBZGQgc3VwcG9ydCBmb3IgYSBtdWx0aWJhc2UgaGFzaGVyXG4gICAqXG4gICAqIEBwYXJhbSB7TXVsdGloYXNoSGFzaGVyfSBoYXNoZXJcbiAgICovXG4gIGFkZEhhc2hlciAoaGFzaGVyKSB7XG4gICAgaWYgKHRoaXMuX2hhc2hlcnNCeU5hbWVbaGFzaGVyLm5hbWVdIHx8IHRoaXMuX2hhc2hlcnNCeUNvZGVbaGFzaGVyLmNvZGVdKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYFJlc29sdmVyIGFscmVhZHkgZXhpc3RzIGZvciBjb2RlYyBcIiR7aGFzaGVyLm5hbWV9XCJgKVxuICAgIH1cblxuICAgIHRoaXMuX2hhc2hlcnNCeU5hbWVbaGFzaGVyLm5hbWVdID0gaGFzaGVyXG4gICAgdGhpcy5faGFzaGVyc0J5Q29kZVtoYXNoZXIuY29kZV0gPSBoYXNoZXJcbiAgfVxuXG4gIC8qKlxuICAgKiBSZW1vdmUgc3VwcG9ydCBmb3IgYSBtdWx0aWJhc2UgaGFzaGVyXG4gICAqXG4gICAqIEBwYXJhbSB7TXVsdGloYXNoSGFzaGVyfSBoYXNoZXJcbiAgICovXG4gIHJlbW92ZUhhc2hlciAoaGFzaGVyKSB7XG4gICAgZGVsZXRlIHRoaXMuX2hhc2hlcnNCeU5hbWVbaGFzaGVyLm5hbWVdXG4gICAgZGVsZXRlIHRoaXMuX2hhc2hlcnNCeUNvZGVbaGFzaGVyLmNvZGVdXG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtudW1iZXIgfCBzdHJpbmd9IGNvZGVcbiAgICovXG4gIGFzeW5jIGdldEhhc2hlciAoY29kZSkge1xuICAgIGNvbnN0IHRhYmxlID0gdHlwZW9mIGNvZGUgPT09ICdzdHJpbmcnID8gdGhpcy5faGFzaGVyc0J5TmFtZSA6IHRoaXMuX2hhc2hlcnNCeUNvZGVcblxuICAgIGlmICh0YWJsZVtjb2RlXSkge1xuICAgICAgcmV0dXJuIHRhYmxlW2NvZGVdXG4gICAgfVxuXG4gICAgLy8gSWYgbm90IHN1cHBvcnRlZCwgYXR0ZW1wdCB0byBkeW5hbWljYWxseSBsb2FkIHRoaXMgaGFzaGVyXG4gICAgY29uc3QgaGFzaGVyID0gYXdhaXQgdGhpcy5fbG9hZEhhc2hlcihjb2RlKVxuXG4gICAgaWYgKHRhYmxlW2NvZGVdID09IG51bGwpIHtcbiAgICAgIHRoaXMuYWRkSGFzaGVyKGhhc2hlcilcbiAgICB9XG5cbiAgICByZXR1cm4gaGFzaGVyXG4gIH1cblxuICBsaXN0SGFzaGVycyAoKSB7XG4gICAgcmV0dXJuIE9iamVjdC52YWx1ZXModGhpcy5faGFzaGVyc0J5TmFtZSlcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/src/multihashes.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/src/multipart-request.browser.js":
/*!***********************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/src/multipart-request.browser.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   multipartRequest: () => (/* binding */ multipartRequest)\n/* harmony export */ });\n/* harmony import */ var _files_normalise_input_multiple_browser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./files/normalise-input-multiple.browser.js */ \"(rsc)/./node_modules/ipfs-core-utils/src/files/normalise-input-multiple.browser.js\");\n/* harmony import */ var _mode_to_string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mode-to-string.js */ \"(rsc)/./node_modules/ipfs-core-utils/src/mode-to-string.js\");\n\n// Import browser version otherwise electron-renderer will end up with node\n// version and fail.\n\n\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidateStream} ImportCandidateStream\n */\n\n/**\n * @param {ImportCandidateStream} source\n * @param {AbortController} abortController\n * @param {Headers|Record<string, string>} [headers]\n */\nasync function multipartRequest (source, abortController, headers = {}) {\n  const parts = []\n  const formData = new FormData()\n  let index = 0\n  let total = 0\n\n  for await (const { content, path, mode, mtime } of (0,_files_normalise_input_multiple_browser_js__WEBPACK_IMPORTED_MODULE_0__.normaliseInput)(source)) {\n    let fileSuffix = ''\n    const type = content ? 'file' : 'dir'\n\n    if (index > 0) {\n      fileSuffix = `-${index}`\n    }\n\n    let fieldName = type + fileSuffix\n    const qs = []\n\n    if (mode !== null && mode !== undefined) {\n      qs.push(`mode=${(0,_mode_to_string_js__WEBPACK_IMPORTED_MODULE_1__.modeToString)(mode)}`)\n    }\n\n    if ((mtime) != null) {\n      const { secs, nsecs } = (mtime)\n\n      qs.push(`mtime=${secs}`)\n\n      if (nsecs != null) {\n        qs.push(`mtime-nsecs=${nsecs}`)\n      }\n    }\n\n    if (qs.length) {\n      fieldName = `${fieldName}?${qs.join('&')}`\n    }\n\n    if (content) {\n      formData.set(fieldName, content, path != null ? encodeURIComponent(path) : undefined)\n      const end = total + content.size\n      parts.push({ name: path, start: total, end })\n      total = end\n    } else if (path != null) {\n      formData.set(fieldName, new File([''], encodeURIComponent(path), { type: 'application/x-directory' }))\n    } else {\n      throw new Error('path or content or both must be set')\n    }\n\n    index++\n  }\n\n  return {\n    total,\n    parts,\n    headers,\n    body: formData\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL3NyYy9tdWx0aXBhcnQtcmVxdWVzdC5icm93c2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFDQTtBQUNBO0FBQzRFO0FBQzFCOztBQUVsRDtBQUNBLGFBQWEsMkRBQTJEO0FBQ3hFOztBQUVBO0FBQ0EsV0FBVyx1QkFBdUI7QUFDbEMsV0FBVyxpQkFBaUI7QUFDNUIsV0FBVyxnQ0FBZ0M7QUFDM0M7QUFDTyxzRUFBc0U7QUFDN0U7QUFDQTtBQUNBO0FBQ0E7O0FBRUEscUJBQXFCLDZCQUE2QixHQUFHLDBGQUFjO0FBQ25FO0FBQ0E7O0FBRUE7QUFDQSx1QkFBdUIsTUFBTTtBQUM3Qjs7QUFFQTtBQUNBOztBQUVBO0FBQ0Esc0JBQXNCLGdFQUFZLE9BQU87QUFDekM7O0FBRUE7QUFDQSxjQUFjLGNBQWM7O0FBRTVCLHVCQUF1QixLQUFLOztBQUU1QjtBQUNBLCtCQUErQixNQUFNO0FBQ3JDO0FBQ0E7O0FBRUE7QUFDQSxxQkFBcUIsVUFBVSxHQUFHLGFBQWE7QUFDL0M7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLCtCQUErQjtBQUNsRDtBQUNBLE1BQU07QUFDTix5RUFBeUUsaUNBQWlDO0FBQzFHLE1BQU07QUFDTjtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2UtMi9uZXh0anMvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL3NyYy9tdWx0aXBhcnQtcmVxdWVzdC5icm93c2VyLmpzPzc4NDkiXSwic291cmNlc0NvbnRlbnQiOlsiXG4vLyBJbXBvcnQgYnJvd3NlciB2ZXJzaW9uIG90aGVyd2lzZSBlbGVjdHJvbi1yZW5kZXJlciB3aWxsIGVuZCB1cCB3aXRoIG5vZGVcbi8vIHZlcnNpb24gYW5kIGZhaWwuXG5pbXBvcnQgeyBub3JtYWxpc2VJbnB1dCB9IGZyb20gJy4vZmlsZXMvbm9ybWFsaXNlLWlucHV0LW11bHRpcGxlLmJyb3dzZXIuanMnXG5pbXBvcnQgeyBtb2RlVG9TdHJpbmcgfSBmcm9tICcuL21vZGUtdG8tc3RyaW5nLmpzJ1xuXG4vKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ2lwZnMtY29yZS10eXBlcy9zcmMvdXRpbHMnKS5JbXBvcnRDYW5kaWRhdGVTdHJlYW19IEltcG9ydENhbmRpZGF0ZVN0cmVhbVxuICovXG5cbi8qKlxuICogQHBhcmFtIHtJbXBvcnRDYW5kaWRhdGVTdHJlYW19IHNvdXJjZVxuICogQHBhcmFtIHtBYm9ydENvbnRyb2xsZXJ9IGFib3J0Q29udHJvbGxlclxuICogQHBhcmFtIHtIZWFkZXJzfFJlY29yZDxzdHJpbmcsIHN0cmluZz59IFtoZWFkZXJzXVxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbXVsdGlwYXJ0UmVxdWVzdCAoc291cmNlLCBhYm9ydENvbnRyb2xsZXIsIGhlYWRlcnMgPSB7fSkge1xuICBjb25zdCBwYXJ0cyA9IFtdXG4gIGNvbnN0IGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKClcbiAgbGV0IGluZGV4ID0gMFxuICBsZXQgdG90YWwgPSAwXG5cbiAgZm9yIGF3YWl0IChjb25zdCB7IGNvbnRlbnQsIHBhdGgsIG1vZGUsIG10aW1lIH0gb2Ygbm9ybWFsaXNlSW5wdXQoc291cmNlKSkge1xuICAgIGxldCBmaWxlU3VmZml4ID0gJydcbiAgICBjb25zdCB0eXBlID0gY29udGVudCA/ICdmaWxlJyA6ICdkaXInXG5cbiAgICBpZiAoaW5kZXggPiAwKSB7XG4gICAgICBmaWxlU3VmZml4ID0gYC0ke2luZGV4fWBcbiAgICB9XG5cbiAgICBsZXQgZmllbGROYW1lID0gdHlwZSArIGZpbGVTdWZmaXhcbiAgICBjb25zdCBxcyA9IFtdXG5cbiAgICBpZiAobW9kZSAhPT0gbnVsbCAmJiBtb2RlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHFzLnB1c2goYG1vZGU9JHttb2RlVG9TdHJpbmcobW9kZSl9YClcbiAgICB9XG5cbiAgICBpZiAoKG10aW1lKSAhPSBudWxsKSB7XG4gICAgICBjb25zdCB7IHNlY3MsIG5zZWNzIH0gPSAobXRpbWUpXG5cbiAgICAgIHFzLnB1c2goYG10aW1lPSR7c2Vjc31gKVxuXG4gICAgICBpZiAobnNlY3MgIT0gbnVsbCkge1xuICAgICAgICBxcy5wdXNoKGBtdGltZS1uc2Vjcz0ke25zZWNzfWApXG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHFzLmxlbmd0aCkge1xuICAgICAgZmllbGROYW1lID0gYCR7ZmllbGROYW1lfT8ke3FzLmpvaW4oJyYnKX1gXG4gICAgfVxuXG4gICAgaWYgKGNvbnRlbnQpIHtcbiAgICAgIGZvcm1EYXRhLnNldChmaWVsZE5hbWUsIGNvbnRlbnQsIHBhdGggIT0gbnVsbCA/IGVuY29kZVVSSUNvbXBvbmVudChwYXRoKSA6IHVuZGVmaW5lZClcbiAgICAgIGNvbnN0IGVuZCA9IHRvdGFsICsgY29udGVudC5zaXplXG4gICAgICBwYXJ0cy5wdXNoKHsgbmFtZTogcGF0aCwgc3RhcnQ6IHRvdGFsLCBlbmQgfSlcbiAgICAgIHRvdGFsID0gZW5kXG4gICAgfSBlbHNlIGlmIChwYXRoICE9IG51bGwpIHtcbiAgICAgIGZvcm1EYXRhLnNldChmaWVsZE5hbWUsIG5ldyBGaWxlKFsnJ10sIGVuY29kZVVSSUNvbXBvbmVudChwYXRoKSwgeyB0eXBlOiAnYXBwbGljYXRpb24veC1kaXJlY3RvcnknIH0pKVxuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ3BhdGggb3IgY29udGVudCBvciBib3RoIG11c3QgYmUgc2V0JylcbiAgICB9XG5cbiAgICBpbmRleCsrXG4gIH1cblxuICByZXR1cm4ge1xuICAgIHRvdGFsLFxuICAgIHBhcnRzLFxuICAgIGhlYWRlcnMsXG4gICAgYm9keTogZm9ybURhdGFcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/src/multipart-request.browser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/src/multipart-request.js":
/*!***************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/src/multipart-request.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   multipartRequest: () => (/* binding */ multipartRequest)\n/* harmony export */ });\n/* harmony import */ var ipfs_utils_src_env_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ipfs-utils/src/env.js */ \"ipfs-utils/src/env.js\");\n/* harmony import */ var _multipart_request_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./multipart-request.node.js */ \"(rsc)/./node_modules/ipfs-core-utils/src/multipart-request.node.js\");\n/* harmony import */ var _multipart_request_browser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./multipart-request.browser.js */ \"(rsc)/./node_modules/ipfs-core-utils/src/multipart-request.browser.js\");\n/* harmony import */ var nanoid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! nanoid */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/nanoid/index.js\");\n\n\n\n\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidateStream} ImportCandidateStream\n */\n\n/**\n * @param {ImportCandidateStream} source\n * @param {AbortController} abortController\n * @param {Headers|Record<string, string>} [headers]\n * @param {string} [boundary]\n */\nasync function multipartRequest (source, abortController, headers = {}, boundary = `-----------------------------${(0,nanoid__WEBPACK_IMPORTED_MODULE_3__.nanoid)()}`) {\n  let req = _multipart_request_node_js__WEBPACK_IMPORTED_MODULE_1__.multipartRequest\n\n  // In electron-renderer we use native fetch and should encode body using native\n  // form data.\n  if (ipfs_utils_src_env_js__WEBPACK_IMPORTED_MODULE_0__.isElectronRenderer) {\n    // @ts-expect-error types are different\n    req = _multipart_request_browser_js__WEBPACK_IMPORTED_MODULE_2__.multipartRequest\n  }\n\n  return req(source, abortController, headers, boundary)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL3NyYy9tdWx0aXBhcnQtcmVxdWVzdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUEwRDtBQUM0QjtBQUNNO0FBQzdEOztBQUUvQjtBQUNBLGFBQWEsMkRBQTJEO0FBQ3hFOztBQUVBO0FBQ0EsV0FBVyx1QkFBdUI7QUFDbEMsV0FBVyxpQkFBaUI7QUFDNUIsV0FBVyxnQ0FBZ0M7QUFDM0MsV0FBVyxRQUFRO0FBQ25CO0FBQ08sc0VBQXNFLDZDQUE2Qyw4Q0FBTSxHQUFHO0FBQ25JLFlBQVksd0VBQW9COztBQUVoQztBQUNBO0FBQ0EsTUFBTSxxRUFBa0I7QUFDeEI7QUFDQSxVQUFVLDJFQUF1QjtBQUNqQzs7QUFFQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHNlLTIvbmV4dGpzLy4vbm9kZV9tb2R1bGVzL2lwZnMtY29yZS11dGlscy9zcmMvbXVsdGlwYXJ0LXJlcXVlc3QuanM/YWJiZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc0VsZWN0cm9uUmVuZGVyZXIgfSBmcm9tICdpcGZzLXV0aWxzL3NyYy9lbnYuanMnXG5pbXBvcnQgeyBtdWx0aXBhcnRSZXF1ZXN0IGFzIG11bHRpcGFydFJlcXVlc3ROb2RlIH0gZnJvbSAnLi9tdWx0aXBhcnQtcmVxdWVzdC5ub2RlLmpzJ1xuaW1wb3J0IHsgbXVsdGlwYXJ0UmVxdWVzdCBhcyBtdWx0aXBhcnRSZXF1ZXN0QnJvd3NlciB9IGZyb20gJy4vbXVsdGlwYXJ0LXJlcXVlc3QuYnJvd3Nlci5qcydcbmltcG9ydCB7IG5hbm9pZCB9IGZyb20gJ25hbm9pZCdcblxuLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdpcGZzLWNvcmUtdHlwZXMvc3JjL3V0aWxzJykuSW1wb3J0Q2FuZGlkYXRlU3RyZWFtfSBJbXBvcnRDYW5kaWRhdGVTdHJlYW1cbiAqL1xuXG4vKipcbiAqIEBwYXJhbSB7SW1wb3J0Q2FuZGlkYXRlU3RyZWFtfSBzb3VyY2VcbiAqIEBwYXJhbSB7QWJvcnRDb250cm9sbGVyfSBhYm9ydENvbnRyb2xsZXJcbiAqIEBwYXJhbSB7SGVhZGVyc3xSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+fSBbaGVhZGVyc11cbiAqIEBwYXJhbSB7c3RyaW5nfSBbYm91bmRhcnldXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBtdWx0aXBhcnRSZXF1ZXN0IChzb3VyY2UsIGFib3J0Q29udHJvbGxlciwgaGVhZGVycyA9IHt9LCBib3VuZGFyeSA9IGAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSR7bmFub2lkKCl9YCkge1xuICBsZXQgcmVxID0gbXVsdGlwYXJ0UmVxdWVzdE5vZGVcblxuICAvLyBJbiBlbGVjdHJvbi1yZW5kZXJlciB3ZSB1c2UgbmF0aXZlIGZldGNoIGFuZCBzaG91bGQgZW5jb2RlIGJvZHkgdXNpbmcgbmF0aXZlXG4gIC8vIGZvcm0gZGF0YS5cbiAgaWYgKGlzRWxlY3Ryb25SZW5kZXJlcikge1xuICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgdHlwZXMgYXJlIGRpZmZlcmVudFxuICAgIHJlcSA9IG11bHRpcGFydFJlcXVlc3RCcm93c2VyXG4gIH1cblxuICByZXR1cm4gcmVxKHNvdXJjZSwgYWJvcnRDb250cm9sbGVyLCBoZWFkZXJzLCBib3VuZGFyeSlcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/src/multipart-request.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/src/multipart-request.node.js":
/*!********************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/src/multipart-request.node.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   multipartRequest: () => (/* binding */ multipartRequest)\n/* harmony export */ });\n/* harmony import */ var _files_normalise_input_multiple_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./files/normalise-input-multiple.js */ \"(rsc)/./node_modules/ipfs-core-utils/src/files/normalise-input-multiple.js\");\n/* harmony import */ var nanoid__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! nanoid */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/nanoid/index.js\");\n/* harmony import */ var _mode_to_string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mode-to-string.js */ \"(rsc)/./node_modules/ipfs-core-utils/src/mode-to-string.js\");\n/* harmony import */ var merge_options__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! merge-options */ \"(rsc)/./node_modules/merge-options/index.mjs\");\n/* harmony import */ var it_to_stream__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! it-to-stream */ \"(rsc)/./node_modules/it-to-stream/src/index.js\");\n/* harmony import */ var _libp2p_logger__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @libp2p/logger */ \"(rsc)/./node_modules/@libp2p/logger/dist/src/index.js\");\n/* harmony import */ var it_peekable__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! it-peekable */ \"(rsc)/./node_modules/it-peekable/dist/src/index.js\");\n\n\n\n\n// @ts-expect-error no types\n\n\n\n\nconst merge = merge_options__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bind({ ignoreUndefined: true })\nconst log = (0,_libp2p_logger__WEBPACK_IMPORTED_MODULE_4__.logger)('ipfs:core-utils:multipart-request')\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidateStream} ImportCandidateStream\n */\n\n/**\n * @param {ImportCandidateStream} source\n * @param {AbortController} abortController\n * @param {Headers|Record<string, string>} [headers]\n * @param {string} [boundary]\n */\nasync function multipartRequest (source, abortController, headers = {}, boundary = `-----------------------------${(0,nanoid__WEBPACK_IMPORTED_MODULE_6__.nanoid)()}`) {\n  /**\n   * @param {ImportCandidateStream} source\n   */\n  async function * streamFiles (source) {\n    try {\n      let index = 0\n\n      // @ts-expect-error\n      for await (const { content, path, mode, mtime } of source) {\n        let fileSuffix = ''\n        const type = content ? 'file' : 'dir'\n\n        if (index > 0) {\n          yield '\\r\\n'\n\n          fileSuffix = `-${index}`\n        }\n\n        let fieldName = type + fileSuffix\n        const qs = []\n\n        if (mode !== null && mode !== undefined) {\n          qs.push(`mode=${(0,_mode_to_string_js__WEBPACK_IMPORTED_MODULE_1__.modeToString)(mode)}`)\n        }\n\n        if (mtime != null) {\n          const { secs, nsecs } = mtime\n\n          qs.push(`mtime=${secs}`)\n\n          if (nsecs != null) {\n            qs.push(`mtime-nsecs=${nsecs}`)\n          }\n        }\n\n        if (qs.length) {\n          fieldName = `${fieldName}?${qs.join('&')}`\n        }\n\n        yield `--${boundary}\\r\\n`\n        yield `Content-Disposition: form-data; name=\"${fieldName}\"; filename=\"${encodeURIComponent(path || '')}\"\\r\\n`\n        yield `Content-Type: ${content ? 'application/octet-stream' : 'application/x-directory'}\\r\\n`\n        yield '\\r\\n'\n\n        if (content) {\n          yield * content\n        }\n\n        index++\n      }\n    } catch (/** @type {any} */ err) {\n      log(err)\n      // workaround for https://github.com/node-fetch/node-fetch/issues/753\n      abortController.abort()\n    } finally {\n      yield `\\r\\n--${boundary}--\\r\\n`\n    }\n  }\n\n  // peek at the first value in order to get the input stream moving\n  // and to validate its contents.\n  // We cannot do this in the `for await..of` in streamFiles due to\n  // https://github.com/node-fetch/node-fetch/issues/753\n  const peekable = (0,it_peekable__WEBPACK_IMPORTED_MODULE_5__[\"default\"])((0,_files_normalise_input_multiple_js__WEBPACK_IMPORTED_MODULE_0__.normaliseInput)(source))\n\n  /** @type {any} value **/\n  const { value, done } = await peekable.peek()\n\n  if (!done) {\n    peekable.push(value)\n  }\n\n  return {\n    parts: null,\n    total: -1,\n    headers: merge(headers, {\n      'Content-Type': `multipart/form-data; boundary=${boundary}`\n    }),\n    // @ts-expect-error normaliseInput returns unixfs importer import candidates\n    body: it_to_stream__WEBPACK_IMPORTED_MODULE_3__(streamFiles(peekable))\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL3NyYy9tdWx0aXBhcnQtcmVxdWVzdC5ub2RlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQW9FO0FBQ3JDO0FBQ21CO0FBQ2I7QUFDckM7QUFDbUM7QUFDSTtBQUNIOztBQUVwQyxjQUFjLHFEQUFTLFFBQVEsdUJBQXVCO0FBQ3RELFlBQVksc0RBQU07O0FBRWxCO0FBQ0EsYUFBYSwyREFBMkQ7QUFDeEU7O0FBRUE7QUFDQSxXQUFXLHVCQUF1QjtBQUNsQyxXQUFXLGlCQUFpQjtBQUM1QixXQUFXLGdDQUFnQztBQUMzQyxXQUFXLFFBQVE7QUFDbkI7QUFDTyxzRUFBc0UsNkNBQTZDLDhDQUFNLEdBQUc7QUFDbkk7QUFDQSxhQUFhLHVCQUF1QjtBQUNwQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHlCQUF5Qiw2QkFBNkI7QUFDdEQ7QUFDQTs7QUFFQTtBQUNBOztBQUVBLDJCQUEyQixNQUFNO0FBQ2pDOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSwwQkFBMEIsZ0VBQVksT0FBTztBQUM3Qzs7QUFFQTtBQUNBLGtCQUFrQixjQUFjOztBQUVoQywyQkFBMkIsS0FBSzs7QUFFaEM7QUFDQSxtQ0FBbUMsTUFBTTtBQUN6QztBQUNBOztBQUVBO0FBQ0EseUJBQXlCLFVBQVUsR0FBRyxhQUFhO0FBQ25EOztBQUVBLG1CQUFtQixTQUFTO0FBQzVCLCtDQUErQyxRQUFRLFVBQVUsR0FBRyxZQUFZLCtCQUErQjtBQUMvRywrQkFBK0IsaUVBQWlFO0FBQ2hHOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsTUFBTSxrQkFBa0IsS0FBSztBQUM3QjtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ04scUJBQXFCLFNBQVM7QUFDOUI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQix1REFBVSxDQUFDLGtGQUFjOztBQUU1QyxhQUFhLEtBQUs7QUFDbEIsVUFBVSxjQUFjOztBQUV4QjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEMsV0FBVyxTQUFTO0FBQ2hFLEtBQUs7QUFDTDtBQUNBLFVBQVUseUNBQVE7QUFDbEI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BzZS0yL25leHRqcy8uL25vZGVfbW9kdWxlcy9pcGZzLWNvcmUtdXRpbHMvc3JjL211bHRpcGFydC1yZXF1ZXN0Lm5vZGUuanM/OThiYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBub3JtYWxpc2VJbnB1dCB9IGZyb20gJy4vZmlsZXMvbm9ybWFsaXNlLWlucHV0LW11bHRpcGxlLmpzJ1xuaW1wb3J0IHsgbmFub2lkIH0gZnJvbSAnbmFub2lkJ1xuaW1wb3J0IHsgbW9kZVRvU3RyaW5nIH0gZnJvbSAnLi9tb2RlLXRvLXN0cmluZy5qcydcbmltcG9ydCBtZXJnZU9wdHMgZnJvbSAnbWVyZ2Utb3B0aW9ucydcbi8vIEB0cy1leHBlY3QtZXJyb3Igbm8gdHlwZXNcbmltcG9ydCB0b1N0cmVhbSBmcm9tICdpdC10by1zdHJlYW0nXG5pbXBvcnQgeyBsb2dnZXIgfSBmcm9tICdAbGlicDJwL2xvZ2dlcidcbmltcG9ydCBpdFBlZWthYmxlIGZyb20gJ2l0LXBlZWthYmxlJ1xuXG5jb25zdCBtZXJnZSA9IG1lcmdlT3B0cy5iaW5kKHsgaWdub3JlVW5kZWZpbmVkOiB0cnVlIH0pXG5jb25zdCBsb2cgPSBsb2dnZXIoJ2lwZnM6Y29yZS11dGlsczptdWx0aXBhcnQtcmVxdWVzdCcpXG5cbi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnaXBmcy1jb3JlLXR5cGVzL3NyYy91dGlscycpLkltcG9ydENhbmRpZGF0ZVN0cmVhbX0gSW1wb3J0Q2FuZGlkYXRlU3RyZWFtXG4gKi9cblxuLyoqXG4gKiBAcGFyYW0ge0ltcG9ydENhbmRpZGF0ZVN0cmVhbX0gc291cmNlXG4gKiBAcGFyYW0ge0Fib3J0Q29udHJvbGxlcn0gYWJvcnRDb250cm9sbGVyXG4gKiBAcGFyYW0ge0hlYWRlcnN8UmVjb3JkPHN0cmluZywgc3RyaW5nPn0gW2hlYWRlcnNdXG4gKiBAcGFyYW0ge3N0cmluZ30gW2JvdW5kYXJ5XVxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbXVsdGlwYXJ0UmVxdWVzdCAoc291cmNlLCBhYm9ydENvbnRyb2xsZXIsIGhlYWRlcnMgPSB7fSwgYm91bmRhcnkgPSBgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0ke25hbm9pZCgpfWApIHtcbiAgLyoqXG4gICAqIEBwYXJhbSB7SW1wb3J0Q2FuZGlkYXRlU3RyZWFtfSBzb3VyY2VcbiAgICovXG4gIGFzeW5jIGZ1bmN0aW9uICogc3RyZWFtRmlsZXMgKHNvdXJjZSkge1xuICAgIHRyeSB7XG4gICAgICBsZXQgaW5kZXggPSAwXG5cbiAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3JcbiAgICAgIGZvciBhd2FpdCAoY29uc3QgeyBjb250ZW50LCBwYXRoLCBtb2RlLCBtdGltZSB9IG9mIHNvdXJjZSkge1xuICAgICAgICBsZXQgZmlsZVN1ZmZpeCA9ICcnXG4gICAgICAgIGNvbnN0IHR5cGUgPSBjb250ZW50ID8gJ2ZpbGUnIDogJ2RpcidcblxuICAgICAgICBpZiAoaW5kZXggPiAwKSB7XG4gICAgICAgICAgeWllbGQgJ1xcclxcbidcblxuICAgICAgICAgIGZpbGVTdWZmaXggPSBgLSR7aW5kZXh9YFxuICAgICAgICB9XG5cbiAgICAgICAgbGV0IGZpZWxkTmFtZSA9IHR5cGUgKyBmaWxlU3VmZml4XG4gICAgICAgIGNvbnN0IHFzID0gW11cblxuICAgICAgICBpZiAobW9kZSAhPT0gbnVsbCAmJiBtb2RlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICBxcy5wdXNoKGBtb2RlPSR7bW9kZVRvU3RyaW5nKG1vZGUpfWApXG4gICAgICAgIH1cblxuICAgICAgICBpZiAobXRpbWUgIT0gbnVsbCkge1xuICAgICAgICAgIGNvbnN0IHsgc2VjcywgbnNlY3MgfSA9IG10aW1lXG5cbiAgICAgICAgICBxcy5wdXNoKGBtdGltZT0ke3NlY3N9YClcblxuICAgICAgICAgIGlmIChuc2VjcyAhPSBudWxsKSB7XG4gICAgICAgICAgICBxcy5wdXNoKGBtdGltZS1uc2Vjcz0ke25zZWNzfWApXG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHFzLmxlbmd0aCkge1xuICAgICAgICAgIGZpZWxkTmFtZSA9IGAke2ZpZWxkTmFtZX0/JHtxcy5qb2luKCcmJyl9YFxuICAgICAgICB9XG5cbiAgICAgICAgeWllbGQgYC0tJHtib3VuZGFyeX1cXHJcXG5gXG4gICAgICAgIHlpZWxkIGBDb250ZW50LURpc3Bvc2l0aW9uOiBmb3JtLWRhdGE7IG5hbWU9XCIke2ZpZWxkTmFtZX1cIjsgZmlsZW5hbWU9XCIke2VuY29kZVVSSUNvbXBvbmVudChwYXRoIHx8ICcnKX1cIlxcclxcbmBcbiAgICAgICAgeWllbGQgYENvbnRlbnQtVHlwZTogJHtjb250ZW50ID8gJ2FwcGxpY2F0aW9uL29jdGV0LXN0cmVhbScgOiAnYXBwbGljYXRpb24veC1kaXJlY3RvcnknfVxcclxcbmBcbiAgICAgICAgeWllbGQgJ1xcclxcbidcblxuICAgICAgICBpZiAoY29udGVudCkge1xuICAgICAgICAgIHlpZWxkICogY29udGVudFxuICAgICAgICB9XG5cbiAgICAgICAgaW5kZXgrK1xuICAgICAgfVxuICAgIH0gY2F0Y2ggKC8qKiBAdHlwZSB7YW55fSAqLyBlcnIpIHtcbiAgICAgIGxvZyhlcnIpXG4gICAgICAvLyB3b3JrYXJvdW5kIGZvciBodHRwczovL2dpdGh1Yi5jb20vbm9kZS1mZXRjaC9ub2RlLWZldGNoL2lzc3Vlcy83NTNcbiAgICAgIGFib3J0Q29udHJvbGxlci5hYm9ydCgpXG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIHlpZWxkIGBcXHJcXG4tLSR7Ym91bmRhcnl9LS1cXHJcXG5gXG4gICAgfVxuICB9XG5cbiAgLy8gcGVlayBhdCB0aGUgZmlyc3QgdmFsdWUgaW4gb3JkZXIgdG8gZ2V0IHRoZSBpbnB1dCBzdHJlYW0gbW92aW5nXG4gIC8vIGFuZCB0byB2YWxpZGF0ZSBpdHMgY29udGVudHMuXG4gIC8vIFdlIGNhbm5vdCBkbyB0aGlzIGluIHRoZSBgZm9yIGF3YWl0Li5vZmAgaW4gc3RyZWFtRmlsZXMgZHVlIHRvXG4gIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9ub2RlLWZldGNoL25vZGUtZmV0Y2gvaXNzdWVzLzc1M1xuICBjb25zdCBwZWVrYWJsZSA9IGl0UGVla2FibGUobm9ybWFsaXNlSW5wdXQoc291cmNlKSlcblxuICAvKiogQHR5cGUge2FueX0gdmFsdWUgKiovXG4gIGNvbnN0IHsgdmFsdWUsIGRvbmUgfSA9IGF3YWl0IHBlZWthYmxlLnBlZWsoKVxuXG4gIGlmICghZG9uZSkge1xuICAgIHBlZWthYmxlLnB1c2godmFsdWUpXG4gIH1cblxuICByZXR1cm4ge1xuICAgIHBhcnRzOiBudWxsLFxuICAgIHRvdGFsOiAtMSxcbiAgICBoZWFkZXJzOiBtZXJnZShoZWFkZXJzLCB7XG4gICAgICAnQ29udGVudC1UeXBlJzogYG11bHRpcGFydC9mb3JtLWRhdGE7IGJvdW5kYXJ5PSR7Ym91bmRhcnl9YFxuICAgIH0pLFxuICAgIC8vIEB0cy1leHBlY3QtZXJyb3Igbm9ybWFsaXNlSW5wdXQgcmV0dXJucyB1bml4ZnMgaW1wb3J0ZXIgaW1wb3J0IGNhbmRpZGF0ZXNcbiAgICBib2R5OiB0b1N0cmVhbShzdHJlYW1GaWxlcyhwZWVrYWJsZSkpXG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/src/multipart-request.node.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/src/pins/normalise-input.js":
/*!******************************************************************!*\
  !*** ./node_modules/ipfs-core-utils/src/pins/normalise-input.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normaliseInput: () => (/* binding */ normaliseInput)\n/* harmony export */ });\n/* harmony import */ var err_code__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! err-code */ \"(rsc)/./node_modules/err-code/index.js\");\n/* harmony import */ var multiformats_cid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! multiformats/cid */ \"(rsc)/./node_modules/multiformats/src/cid.js\");\n\n\n\n/**\n * @typedef {object} Pinnable\n * @property {string | InstanceType<typeof window.String> | CID} [path]\n * @property {CID} [cid]\n * @property {boolean} [recursive]\n * @property {any} [metadata]\n *\n * @typedef {CID|string|InstanceType<typeof window.String>|Pinnable} ToPin\n * @typedef {ToPin|Iterable<ToPin>|AsyncIterable<ToPin>} Source\n *\n * @typedef {object} Pin\n * @property {string|CID} path\n * @property {boolean} recursive\n * @property {any} [metadata]\n */\n\n/**\n * @param {any} thing\n * @returns {thing is IterableIterator<any> & Iterator<any>}\n */\nfunction isIterable (thing) {\n  return Symbol.iterator in thing\n}\n\n/**\n * @param {any} thing\n * @returns {thing is AsyncIterableIterator<any> & AsyncIterator<any>}\n */\nfunction isAsyncIterable (thing) {\n  return Symbol.asyncIterator in thing\n}\n\n/**\n * @param {any} thing\n * @returns {thing is CID}\n */\nfunction isCID (thing) {\n  return multiformats_cid__WEBPACK_IMPORTED_MODULE_1__.CID.asCID(thing) != null\n}\n\n/**\n * Transform one of:\n *\n * ```ts\n * CID\n * String\n * { cid: CID recursive, metadata }\n * { path: String recursive, metadata }\n * Iterable<CID>\n * Iterable<String>\n * Iterable<{ cid: CID recursive, metadata }>\n * Iterable<{ path: String recursive, metadata }>\n * AsyncIterable<CID>\n * AsyncIterable<String>\n * AsyncIterable<{ cid: CID recursive, metadata }>\n * AsyncIterable<{ path: String recursive, metadata }>\n * ```\n * Into:\n *\n * ```ts\n * AsyncIterable<{ path: CID|String, recursive:boolean, metadata }>\n * ```\n *\n * @param {Source} input\n * @returns {AsyncIterable<Pin>}\n */\n// eslint-disable-next-line complexity\nasync function * normaliseInput (input) {\n  // must give us something\n  if (input === null || input === undefined) {\n    throw err_code__WEBPACK_IMPORTED_MODULE_0__(new Error(`Unexpected input: ${input}`), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  // CID\n  const cid = multiformats_cid__WEBPACK_IMPORTED_MODULE_1__.CID.asCID(input)\n\n  if (cid) {\n    yield toPin({ cid })\n    return\n  }\n\n  if (input instanceof String || typeof input === 'string') {\n    yield toPin({ path: input })\n    return\n  }\n\n  // { cid: CID recursive, metadata }\n  // @ts-expect-error - it still could be iterable or async iterable\n  if (input.cid != null || input.path != null) {\n    // @ts-expect-error\n    return yield toPin(input)\n  }\n\n  // Iterable<?>\n  if (isIterable(input)) {\n    const iterator = input[Symbol.iterator]()\n    const first = iterator.next()\n\n    if (first.done) {\n      return iterator\n    }\n\n    // Iterable<CID>\n    if (isCID(first.value)) {\n      yield toPin({ cid: first.value })\n      for (const cid of iterator) {\n        yield toPin({ cid })\n      }\n      return\n    }\n\n    // Iterable<String>\n    if (first.value instanceof String || typeof first.value === 'string') {\n      yield toPin({ path: first.value })\n      for (const path of iterator) {\n        yield toPin({ path })\n      }\n      return\n    }\n\n    // Iterable<Pinnable>\n    if (first.value.cid != null || first.value.path != null) {\n      yield toPin(first.value)\n      for (const obj of iterator) {\n        yield toPin(obj)\n      }\n      return\n    }\n\n    throw err_code__WEBPACK_IMPORTED_MODULE_0__(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  // AsyncIterable<?>\n  if (isAsyncIterable(input)) {\n    const iterator = input[Symbol.asyncIterator]()\n    const first = await iterator.next()\n    if (first.done) return iterator\n\n    // AsyncIterable<CID>\n    if (isCID(first.value)) {\n      yield toPin({ cid: first.value })\n      for await (const cid of iterator) {\n        yield toPin({ cid })\n      }\n      return\n    }\n\n    // AsyncIterable<String>\n    if (first.value instanceof String || typeof first.value === 'string') {\n      yield toPin({ path: first.value })\n      for await (const path of iterator) {\n        yield toPin({ path })\n      }\n      return\n    }\n\n    // AsyncIterable<{ cid: CID|String recursive, metadata }>\n    if (first.value.cid != null || first.value.path != null) {\n      yield toPin(first.value)\n      for await (const obj of iterator) {\n        yield toPin(obj)\n      }\n      return\n    }\n\n    throw err_code__WEBPACK_IMPORTED_MODULE_0__(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  throw err_code__WEBPACK_IMPORTED_MODULE_0__(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\n}\n\n/**\n * @param {Pinnable} input\n */\nfunction toPin (input) {\n  const path = input.cid || `${input.path}`\n\n  if (!path) {\n    throw err_code__WEBPACK_IMPORTED_MODULE_0__(new Error('Unexpected input: Please path either a CID or an IPFS path'), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  /** @type {Pin} */\n  const pin = {\n    path,\n    recursive: input.recursive !== false\n  }\n\n  if (input.metadata != null) {\n    pin.metadata = input.metadata\n  }\n\n  return pin\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/src/pins/normalise-input.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/ipfs-core-utils/src/to-url-string.js":
/*!***********************************************************!*\
  !*** ./node_modules/ipfs-core-utils/src/to-url-string.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toUrlString: () => (/* binding */ toUrlString)\n/* harmony export */ });\n/* harmony import */ var _multiformats_multiaddr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @multiformats/multiaddr */ \"(rsc)/./node_modules/ipfs-core-utils/node_modules/@multiformats/multiaddr/dist/src/index.js\");\n/* harmony import */ var _multiformats_multiaddr_to_uri__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @multiformats/multiaddr-to-uri */ \"(rsc)/./node_modules/@multiformats/multiaddr-to-uri/dist/src/index.js\");\n\n\n\n/**\n * @typedef {import('@multiformats/multiaddr').Multiaddr} Multiaddr\n */\n\n/**\n * @param {string|Multiaddr|URL} url - A string, multiaddr or URL to convert to a url string\n * @returns {string}\n */\nfunction toUrlString (url) {\n  try {\n    // @ts-expect-error\n    url = (0,_multiformats_multiaddr_to_uri__WEBPACK_IMPORTED_MODULE_1__.multiaddrToUri)((0,_multiformats_multiaddr__WEBPACK_IMPORTED_MODULE_0__.multiaddr)(url))\n  } catch (/** @type {any} */ err) { }\n\n  url = url.toString()\n\n  return url\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL3NyYy90by11cmwtc3RyaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFtRDtBQUNZOztBQUUvRDtBQUNBLGFBQWEsNkNBQTZDO0FBQzFEOztBQUVBO0FBQ0EsV0FBVyxzQkFBc0I7QUFDakMsYUFBYTtBQUNiO0FBQ087QUFDUDtBQUNBO0FBQ0EsVUFBVSw4RUFBYyxDQUFDLGtFQUFTO0FBQ2xDLElBQUksa0JBQWtCLEtBQUs7O0FBRTNCOztBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ac2UtMi9uZXh0anMvLi9ub2RlX21vZHVsZXMvaXBmcy1jb3JlLXV0aWxzL3NyYy90by11cmwtc3RyaW5nLmpzP2Y2YzUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbXVsdGlhZGRyIH0gZnJvbSAnQG11bHRpZm9ybWF0cy9tdWx0aWFkZHInXG5pbXBvcnQgeyBtdWx0aWFkZHJUb1VyaSB9IGZyb20gJ0BtdWx0aWZvcm1hdHMvbXVsdGlhZGRyLXRvLXVyaSdcblxuLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdAbXVsdGlmb3JtYXRzL211bHRpYWRkcicpLk11bHRpYWRkcn0gTXVsdGlhZGRyXG4gKi9cblxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ3xNdWx0aWFkZHJ8VVJMfSB1cmwgLSBBIHN0cmluZywgbXVsdGlhZGRyIG9yIFVSTCB0byBjb252ZXJ0IHRvIGEgdXJsIHN0cmluZ1xuICogQHJldHVybnMge3N0cmluZ31cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRvVXJsU3RyaW5nICh1cmwpIHtcbiAgdHJ5IHtcbiAgICAvLyBAdHMtZXhwZWN0LWVycm9yXG4gICAgdXJsID0gbXVsdGlhZGRyVG9VcmkobXVsdGlhZGRyKHVybCkpXG4gIH0gY2F0Y2ggKC8qKiBAdHlwZSB7YW55fSAqLyBlcnIpIHsgfVxuXG4gIHVybCA9IHVybC50b1N0cmluZygpXG5cbiAgcmV0dXJuIHVybFxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ipfs-core-utils/src/to-url-string.js\n");

/***/ })

};
;